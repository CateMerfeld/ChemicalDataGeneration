Using device: cuda
--------------------------
--------------------------
New run with hyperparameters:
batch_size  :  16
epochs  :  500
learning_rate  :  0.01
/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/loss.py:535: UserWarning: Using a target size (torch.Size([16, 1677])) that is different to the input size (torch.Size([16, 1676])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Traceback (most recent call last):
  File "/home/cmdunham/ChemicalDataGeneration/models/uninformative_embeddings/onehot_to_ims_universal_generator.py", line 75, in <module>
    f.train_generator(
  File "/home/cmdunham/ChemicalDataGeneration/models/functions.py", line 1049, in train_generator
    average_loss = train_one_epoch(
  File "/home/cmdunham/ChemicalDataGeneration/models/functions.py", line 236, in train_one_epoch
    loss = criterion(batch_predicted_embeddings, true_embeddings)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 535, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/functional.py", line 3328, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (1676) must match the size of tensor b (1677) at non-singleton dimension 1
Traceback (most recent call last):
  File "/home/cmdunham/ChemicalDataGeneration/models/uninformative_embeddings/onehot_to_ims_universal_generator.py", line 75, in <module>
    f.train_generator(
  File "/home/cmdunham/ChemicalDataGeneration/models/functions.py", line 1049, in train_generator
    average_loss = train_one_epoch(
  File "/home/cmdunham/ChemicalDataGeneration/models/functions.py", line 236, in train_one_epoch
    loss = criterion(batch_predicted_embeddings, true_embeddings)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 535, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/nn/functional.py", line 3328, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/cmdunham/micromamba/envs/data_gen_venv/lib/python3.10/site-packages/torch/functional.py", line 73, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (1676) must match the size of tensor b (1677) at non-singleton dimension 1