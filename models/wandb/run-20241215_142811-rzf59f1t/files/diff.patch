diff --git a/data_preprocessing/ims_data_eda.ipynb b/data_preprocessing/ims_data_eda.ipynb
index 5082abc5..2633c45e 100644
--- a/data_preprocessing/ims_data_eda.ipynb
+++ b/data_preprocessing/ims_data_eda.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 7,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -947,11 +947,55 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [],
    "source": [
-    "ims_spectra_data = spectra.drop(columns=['index', 'Label'])"
+    "ims_spectra_data = spectra.drop(columns=['index', 'Label'])\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_data.csv'\n",
+    "train = pd.read_csv(file_path)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 30,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 1400x1000 with 6 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "chem = 'DMMP'\n",
+    "chem_spectra = train[train['Label'] == chem].reset_index(drop=True)\n",
+    "\n",
+    "num_plots = 6\n",
+    "cols = 3  # Number of columns for the subplots\n",
+    "rows = (num_plots + cols - 1) // cols  # Calculate number of rows needed\n",
+    "fig, axes = plt.subplots(rows, cols, figsize=(14, 10))\n",
+    "\n",
+    "# Flatten the axes array for easy iteration\n",
+    "axes = axes.flatten()\n",
+    "\n",
+    "for idx, row in chem_spectra.iloc[:6,2:-9].iterrows():\n",
+    "    numbers = range(184, (len(row)//2)+184)\n",
+    "\n",
+    "    axes[idx].plot(numbers, row[:len(numbers)], label='Positive')\n",
+    "    axes[idx].plot(numbers, row[len(numbers):], label='Negative')\n",
+    "    axes[idx].set_title(f'{chem} Spectrum {idx+1}', fontsize=20)\n",
+    "    axes[idx].set_xlabel('Drift Time', fontsize=16)\n",
+    "    axes[idx].set_ylabel('Ion Intensity', fontsize=16)\n",
+    "    axes[idx].legend(fontsize=14)\n",
+    "\n",
+    "plt.tight_layout()\n",
+    "plt.show()"
    ]
   },
   {
diff --git a/data_preprocessing/ims_data_preprocessing.ipynb b/data_preprocessing/ims_data_preprocessing.ipynb
index 12d64a0e..491b359e 100644
--- a/data_preprocessing/ims_data_preprocessing.ipynb
+++ b/data_preprocessing/ims_data_preprocessing.ipynb
@@ -779,20 +779,20 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Selected GPU ID: 0\n",
+      "Selected GPU ID: 1\n",
       "  Name: NVIDIA GeForce RTX 4090\n",
-      "  Memory Free: 15626.0 MB\n",
-      "  Memory Used: 8590.0 MB\n",
-      "  GPU Load: 67.00%\n",
-      "Current device ID:  cuda:0\n",
-      "PyTorch current device ID: 0\n",
+      "  Memory Free: 19871.0 MB\n",
+      "  Memory Used: 4345.0 MB\n",
+      "  GPU Load: 70.00%\n",
+      "Current device ID:  cuda:1\n",
+      "PyTorch current device ID: 1\n",
       "PyTorch current device name: NVIDIA GeForce RTX 4090\n"
      ]
     }
@@ -829,7 +829,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -848,19 +848,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "n=2\n",
-    "background_sample = background.sample(n=n, random_state=42).iloc[:,1:-1]\n",
-    "background_sample.reset_index(inplace=True)\n",
-    "background_sample.drop(columns=['index'], inplace=True)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -897,44 +885,40 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "ename": "KeyboardInterrupt",
-     "evalue": "",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn[21], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m file_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/mnt/usb/cmdunham/preprocessed_ims_data/train_carls.csv\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      2\u001b[0m differences_df \u001b[38;5;241m=\u001b[39m generate_differences_df(train, background_sample)\n\u001b[0;32m----> 3\u001b[0m \u001b[43mdifferences_df\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfile_path\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mheader\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m      5\u001b[0m file_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/mnt/usb/cmdunham/preprocessed_ims_data/val_carls.csv\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      6\u001b[0m differences_df \u001b[38;5;241m=\u001b[39m generate_differences_df(val, background_sample)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/util/_decorators.py:211\u001b[0m, in \u001b[0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    210\u001b[0m         kwargs[new_arg_name] \u001b[38;5;241m=\u001b[39m new_arg_value\n\u001b[0;32m--> 211\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/generic.py:3720\u001b[0m, in \u001b[0;36mNDFrame.to_csv\u001b[0;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)\u001b[0m\n\u001b[1;32m   3709\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m, ABCDataFrame) \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mto_frame()\n\u001b[1;32m   3711\u001b[0m formatter \u001b[38;5;241m=\u001b[39m DataFrameFormatter(\n\u001b[1;32m   3712\u001b[0m     frame\u001b[38;5;241m=\u001b[39mdf,\n\u001b[1;32m   3713\u001b[0m     header\u001b[38;5;241m=\u001b[39mheader,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   3717\u001b[0m     decimal\u001b[38;5;241m=\u001b[39mdecimal,\n\u001b[1;32m   3718\u001b[0m )\n\u001b[0;32m-> 3720\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mDataFrameRenderer\u001b[49m\u001b[43m(\u001b[49m\u001b[43mformatter\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   3721\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpath_or_buf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3722\u001b[0m \u001b[43m    \u001b[49m\u001b[43mlineterminator\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlineterminator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3723\u001b[0m \u001b[43m    \u001b[49m\u001b[43msep\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msep\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3724\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3725\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3726\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcompression\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3727\u001b[0m \u001b[43m    \u001b[49m\u001b[43mquoting\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquoting\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3728\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3729\u001b[0m \u001b[43m    \u001b[49m\u001b[43mindex_label\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex_label\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3730\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3731\u001b[0m \u001b[43m    \u001b[49m\u001b[43mchunksize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mchunksize\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3732\u001b[0m \u001b[43m    \u001b[49m\u001b[43mquotechar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquotechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3733\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdate_format\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdate_format\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3734\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdoublequote\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdoublequote\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3735\u001b[0m \u001b[43m    \u001b[49m\u001b[43mescapechar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mescapechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3736\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3737\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/util/_decorators.py:211\u001b[0m, in \u001b[0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    210\u001b[0m         kwargs[new_arg_name] \u001b[38;5;241m=\u001b[39m new_arg_value\n\u001b[0;32m--> 211\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/format.py:1189\u001b[0m, in \u001b[0;36mDataFrameRenderer.to_csv\u001b[0;34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)\u001b[0m\n\u001b[1;32m   1168\u001b[0m     created_buffer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[1;32m   1170\u001b[0m csv_formatter \u001b[38;5;241m=\u001b[39m CSVFormatter(\n\u001b[1;32m   1171\u001b[0m     path_or_buf\u001b[38;5;241m=\u001b[39mpath_or_buf,\n\u001b[1;32m   1172\u001b[0m     lineterminator\u001b[38;5;241m=\u001b[39mlineterminator,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1187\u001b[0m     formatter\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfmt,\n\u001b[1;32m   1188\u001b[0m )\n\u001b[0;32m-> 1189\u001b[0m \u001b[43mcsv_formatter\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msave\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1191\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m created_buffer:\n\u001b[1;32m   1192\u001b[0m     \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(path_or_buf, StringIO)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:261\u001b[0m, in \u001b[0;36mCSVFormatter.save\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    241\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[1;32m    242\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfilepath_or_buffer,\n\u001b[1;32m    243\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    249\u001b[0m \n\u001b[1;32m    250\u001b[0m     \u001b[38;5;66;03m# Note: self.encoding is irrelevant here\u001b[39;00m\n\u001b[1;32m    251\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwriter \u001b[38;5;241m=\u001b[39m csvlib\u001b[38;5;241m.\u001b[39mwriter(\n\u001b[1;32m    252\u001b[0m         handles\u001b[38;5;241m.\u001b[39mhandle,\n\u001b[1;32m    253\u001b[0m         lineterminator\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlineterminator,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    258\u001b[0m         quotechar\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mquotechar,\n\u001b[1;32m    259\u001b[0m     )\n\u001b[0;32m--> 261\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:266\u001b[0m, in \u001b[0;36mCSVFormatter._save\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    264\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_need_to_save_header:\n\u001b[1;32m    265\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_save_header()\n\u001b[0;32m--> 266\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save_body\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:304\u001b[0m, in \u001b[0;36mCSVFormatter._save_body\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    302\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m start_i \u001b[38;5;241m>\u001b[39m\u001b[38;5;241m=\u001b[39m end_i:\n\u001b[1;32m    303\u001b[0m     \u001b[38;5;28;01mbreak\u001b[39;00m\n\u001b[0;32m--> 304\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save_chunk\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstart_i\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mend_i\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:311\u001b[0m, in \u001b[0;36mCSVFormatter._save_chunk\u001b[0;34m(self, start_i, end_i)\u001b[0m\n\u001b[1;32m    308\u001b[0m slicer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mslice\u001b[39m(start_i, end_i)\n\u001b[1;32m    309\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39miloc[slicer]\n\u001b[0;32m--> 311\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_native_types\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_number_format\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    312\u001b[0m data \u001b[38;5;241m=\u001b[39m [res\u001b[38;5;241m.\u001b[39miget_values(i) \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mlen\u001b[39m(res\u001b[38;5;241m.\u001b[39mitems))]\n\u001b[1;32m    314\u001b[0m ix \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdata_index[slicer]\u001b[38;5;241m.\u001b[39m_format_native_types(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_number_format)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/managers.py:502\u001b[0m, in \u001b[0;36mBaseBlockManager.to_native_types\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    497\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mto_native_types\u001b[39m(\u001b[38;5;28mself\u001b[39m: T, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m T:\n\u001b[1;32m    498\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    499\u001b[0m \u001b[38;5;124;03m    Convert values to native types (strings / python objects) that are used\u001b[39;00m\n\u001b[1;32m    500\u001b[0m \u001b[38;5;124;03m    in formatting (repr / csv).\u001b[39;00m\n\u001b[1;32m    501\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 502\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mto_native_types\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/managers.py:352\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    350\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    351\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 352\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mgetattr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mb\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    353\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mTypeError\u001b[39;00m, \u001b[38;5;167;01mNotImplementedError\u001b[39;00m):\n\u001b[1;32m    354\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m ignore_failures:\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/blocks.py:541\u001b[0m, in \u001b[0;36mBlock.to_native_types\u001b[0;34m(self, na_rep, quoting, **kwargs)\u001b[0m\n\u001b[1;32m    538\u001b[0m \u001b[38;5;129m@final\u001b[39m\n\u001b[1;32m    539\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mto_native_types\u001b[39m(\u001b[38;5;28mself\u001b[39m, na_rep\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnan\u001b[39m\u001b[38;5;124m\"\u001b[39m, quoting\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Block:\n\u001b[1;32m    540\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"convert to our native types format\"\"\"\u001b[39;00m\n\u001b[0;32m--> 541\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mto_native_types\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mna_rep\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mna_rep\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mquoting\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquoting\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    542\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmake_block(result)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/blocks.py:2323\u001b[0m, in \u001b[0;36mto_native_types\u001b[0;34m(values, na_rep, quoting, float_format, decimal, **kwargs)\u001b[0m\n\u001b[1;32m   2320\u001b[0m mask \u001b[38;5;241m=\u001b[39m isna(values)\n\u001b[1;32m   2322\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m quoting:\n\u001b[0;32m-> 2323\u001b[0m     values \u001b[38;5;241m=\u001b[39m \u001b[43mvalues\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mstr\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2324\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   2325\u001b[0m     values \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39marray(values, dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mobject\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
-     ]
-    }
-   ],
+   "outputs": [],
+   "source": [
+    "n=2\n",
+    "train_background_sample = background.sample(n=n, random_state=42).iloc[:,1:-1]\n",
+    "train_background_sample.reset_index(inplace=True)\n",
+    "train_background_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "val_background_sample = background.sample(n=n, random_state=32).iloc[:,1:-1]\n",
+    "val_background_sample.reset_index(inplace=True)\n",
+    "val_background_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "test_background_sample = background.sample(n=n, random_state=22).iloc[:,1:-1]\n",
+    "test_background_sample.reset_index(inplace=True)\n",
+    "test_background_sample.drop(columns=['index'], inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
    "source": [
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/train_carls.csv'\n",
-    "differences_df = generate_differences_df(train, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(train, train_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)\n",
     "\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/val_carls.csv'\n",
-    "differences_df = generate_differences_df(val, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(val, val_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)\n",
     "\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls.csv'\n",
-    "differences_df = generate_differences_df(test, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(test, test_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)"
    ]
   },
diff --git a/models/__pycache__/functions.cpython-38.pyc b/models/__pycache__/functions.cpython-38.pyc
index 35bd9be4..16ca90af 100644
Binary files a/models/__pycache__/functions.cpython-38.pyc and b/models/__pycache__/functions.cpython-38.pyc differ
diff --git a/models/carl_encoder.ipynb b/models/carl_encoder.ipynb
index 25255091..b2275a1f 100644
--- a/models/carl_encoder.ipynb
+++ b/models/carl_encoder.ipynb
@@ -58,15 +58,15 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
-    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_.csv'\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_carls.csv'\n",
     "train_carls = pd.read_csv(file_path)\n",
-    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_.csv'\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls.csv'\n",
     "val_carls = pd.read_csv(file_path)\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_.csv'\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls.csv'\n",
     "test_carls = pd.read_csv(file_path)"
    ]
   },
@@ -545,7 +545,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [
     {
@@ -554,7 +554,7 @@
        "<module 'functions' from '/home/cmdunham/ChemicalDataGeneration/models/functions.py'>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 21,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -566,15 +566,87 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mcatemerfeld\u001b[0m. Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n"
-     ]
+     "data": {
+      "text/html": [
+       "Finishing last run (ID:9rg0y8kk) before initializing another..."
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "80d4f8a7479a40afa654068bb0417bed",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value='0.526 MB of 0.526 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n",
+       "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
+       "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
+       "    </style>\n",
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Encoder Training Loss</td><td>1.53e-05</td></tr><tr><td>Encoder Validation Loss</td><td>8.98e-06</td></tr></table><br/></div></div>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run <strong style=\"color:#cdcd00\">logical-leaf-487</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 0 media file(s), 4 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find logs at: <code>./wandb/run-20241215_123255-9rg0y8kk/logs</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Successfully finished last run (ID:9rg0y8kk). Initializing new run:<br/>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
     },
     {
      "data": {
@@ -604,7 +676,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk</code>"
+       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_130124-zvr1gl37</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -616,7 +688,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk' target=\"_blank\">logical-leaf-487</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/zvr1gl37' target=\"_blank\">fresh-darkness-489</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -640,7 +712,7 @@
     {
      "data": {
       "text/html": [
-       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk</a>"
+       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/zvr1gl37' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/zvr1gl37</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -663,22 +735,170 @@
       "Saved best model at epoch 1\n",
       "Saved best model at epoch 2\n",
       "Saved best model at epoch 3\n",
-      "Saved best model at epoch 5\n",
-      "Saved best model at epoch 8\n",
-      "Saved best model at epoch 10\n",
+      "Saved best model at epoch 4\n",
+      "Saved best model at epoch 7\n",
+      "Saved best model at epoch 9\n",
       "Epoch[10/500]:\n",
-      "   Training loss: 3.498296994511149e-05\n",
-      "   Validation loss: 2.3915614672754204e-05\n",
+      "   Training loss: 3.074916331447313e-05\n",
+      "   Validation loss: 1.3056292115255364e-05\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 12\n",
-      "Saved best model at epoch 17\n",
-      "Saved best model at epoch 18\n",
-      "Saved best model at epoch 19\n",
+      "Saved best model at epoch 15\n",
       "Epoch[20/500]:\n",
-      "   Training loss: 1.9989170390752805e-05\n",
-      "   Validation loss: 1.604418155455629e-05\n",
+      "   Training loss: 1.8763818528409626e-05\n",
+      "   Validation loss: 2.2718125258566284e-05\n",
+      "-------------------------------------------\n",
+      "Epoch 00021: reducing learning rate of group 0 to 1.0000e-06.\n",
+      "Saved best model at epoch 22\n",
+      "Saved best model at epoch 23\n",
+      "Saved best model at epoch 24\n",
+      "Saved best model at epoch 26\n",
+      "Saved best model at epoch 28\n",
+      "Saved best model at epoch 29\n",
+      "Saved best model at epoch 30\n",
+      "Epoch[30/500]:\n",
+      "   Training loss: 6.488814341984593e-07\n",
+      "   Validation loss: 4.59277600896896e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 31\n",
+      "Saved best model at epoch 32\n",
+      "Saved best model at epoch 34\n",
+      "Saved best model at epoch 35\n",
+      "Saved best model at epoch 37\n",
+      "Saved best model at epoch 39\n",
+      "Epoch[40/500]:\n",
+      "   Training loss: 1.9669169953799419e-07\n",
+      "   Validation loss: 4.4619278547899235e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 44\n",
+      "Saved best model at epoch 46\n",
+      "Saved best model at epoch 47\n",
+      "Saved best model at epoch 48\n",
+      "Epoch[50/500]:\n",
+      "   Training loss: 1.4342147441783383e-07\n",
+      "   Validation loss: 3.6019766955617813e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 27\n"
+      "Epoch 00054: reducing learning rate of group 0 to 1.0000e-07.\n",
+      "Validation loss has not improved in 10 epochs. Stopping training at epoch 58.\n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "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ZDQ1a9aEt7c37t69i5cvX8LGxgYeHh4l6ny5NxEDIBERERmViYlJsQ/1IneM10REREQywwBIREREJDMMgEREREQywwBIRERERaLDgCKkJ/p6rRkAiYiIqFDMzMwAZN4Ll4qH5rXWvPaFxauAiYiIqFCUSiUcHBwQGxsLALC2toZCoTByVW8mIQSSkpIQGxsLBwcHKJXKIq2PAZCIiIgKzcXFBQCkEEiG5eDgIL3mRcEASERERIWmUCjg6uqKsmXLIj093djlvNHMzMyK3POnwQBIRERERaZUKvUWTsjweBEIERERkcwwABIRERHJDAMgERERkcwwABIRERHJDAMgERERkcwwABIRERHJDAMgERERkcwwABIRERHJDAMgERERkcwwAFKJI1QqCCGMXQYREdEbi7eCoxLh3qVLSOzTN8d5Na5HFHM1REREbzb2AJLRRXzwQa7hDwAivGsUYzVERERvPgZAMr6/j+XbhCGQiIhIfxgAyagKEuyESmXASoiIiOSDAZBeG0lnzxm7BCIiojcCAyC9NjIePzZ2CURERG8EBkB6bZiWKWPsEoiIiN4IDIBkVNWvXdW5rXWD+gashIiISD4YAMmoTEx0ewuW/fYbKJRKA1dDREQkDwyAZHT5DfRs/dWXcOrUqZiqISIievPxTiBUItS4HgEhBK7XqPm/iUOHwvvTT9jzR0REpGcMgFRiKBQK3vaNiIioGPAQMBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMMAASERERyQwDIBEREZHMmBq7ACKSj913dmPisYla076s9yX61elnpIqIiORJIYQQ+TWKj4+Hvb094uLiYGdnVxx1EdEbpvbq2nnOP933NKwtrYupGiKiN09B8hoPARORwbVZ3ybfNo03NUaGKqMYqiEiIgZAIjIolVqF2PRYndrWW1fPwNUQERHAAEhEBrbz9s4CtVepVAaqhIiINBgAicigbj6/WaD2E/+emH8jIiIqEgZAIjKoBuUaFKj9udhzBqqEiIg0GACJyKBaurcsUPuyVmUNVAkREWkwABKRQZkpzQrUfnqz6QaqhIiINBgAicjgtnfZrnPbqqWrGq4QIiICwABIRMWgimMVrAtcl2+7Y32PFUM1RETEAEhExcK3nC8uDbyED2p8kG1eXae6uDjgIuwt7Y1QGRGR/PBWcPpydQdw8kcg+iJgogQ8WwFNRgKVWxm7MiIiIpKBguQ102Kq6c2V8AiYX017mq0H8DgCWNMFCJyTGQSJiIiISggGwKIIyeVw1Yu7mf96tQXCJgCeLYFyPsVXFxEREVEeeA5gYeUW/rK6fQAoVRY484vh6yEiIiLSEQNgYeR/2uT/OHoAD88brhYiIiKiAmIALIxpDrq3TXwCKM0NVgoRERFRQTEAGtqLe0DVdsaugoiIiEjCAGhoJqaA3yBjV0FEREQkYQAsjPH3dW/bbjpgw5vbExERUcnBAFgYVgUYDLtR9rseEBERERkTA2BhTXmef5ueKzPvCkJERERUgjAAFpaJCTDlWe7zeywHavcsvnqIiIiIdMQ7gRSFiRIIiQPSk4HwjUDiY8C1LuDVhj1/REREVGIxAOqDmRXQYLCxqyAiIiLSCQ8BExEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREckMAyARERGRzDAAEhEREcmMqbELyCouLg5JSUnGLoPeYNbW1rC3tzd2GUREREZVYgJgXFwcFi9ejPT0dGOXQm8wMzMzfPTRRwyBREQkayUmACYlJSE9PR09evRAmTJljF0OvYEeP36MrVu3IikpiQGQiIhkrcQEQI0yZcrA1dXV2GUQERERvbF4EQgRERGRzDAAEhEREckMAyARERGRzDAAEhEREcnMaxMAo6KioFAooFAo4OLigoyMjBzbRURESO0qVaqUbf69e/fw4YcfomrVqrC0tISNjQ08PT3RsWNHzJ07F4mJiVrtNevK61FUu3btwujRo9GsWTOUKlUKCoUCISEhBV5PUlIS5s+fj/feew/e3t4wMTGBQqFAVFRUju2fPn2Kn3/+GV26dEHlypVhYWEBZ2dnvP3229i3b1/RdkpHarUaixYtQu3atWFlZYUyZcrg3Xffxb///putbUhISL4/iyFDhhRL3URERK+zEncVcH5MTU3x6NEj7NmzB126dMk2/5dffoGJSc65Njw8HK1bt8aLFy/QrFkzvP3227CxscG9e/fw999/Y8+ePejZsye8vLy0lnNycsJHH31kkP0BgPnz5+PIkSOws7ND+fLlcfv27UKtJzY2Fp999hkAwMPDA46Ojnj27Fmu7X/77TeMHDkS5cuXR5s2beDm5ob//vsPv//+O8LCwjBv3jx8/vnnhapFV8OHD8eKFSvg4+ODjz/+GA8fPsTmzZuxf/9+nDp1ClWrVpXatm7dOtf1rFixAg8ePECHDh0MWi8REdEbQeggLi5OABBxcXG6NC+Uhw8fiqlTp4qHDx/mOD8yMlIAEC1bthT29vaia9eu2dqkp6eLcuXKifbt2wsLCwvh4eGhNT8gIEAAEGvWrMlxGydOnBDPnz/XmgZAVK9evTC7pLOjR4+KmzdvCrVaLTZs2CAAiKlTpxZ4PQkJCWL//v3i6dOnQgghOnToIACIyMjIHNv/9ddfYufOnUKlUmlNv379urC3txdmZmbiwYMHBa5DVwcPHpR+pqmpqdL0PXv2CACiffv2Oq0nJiZGmJqaCicnJ631vCq/9xgREdHrrCB57bU5BKxhZWWFfv364Y8//kBsbKzWvN27d+PRo0cIDg7OcdmTJ0/CwcEB77//fo7z33rrLTg4OOi75Hy1aNECVatWLfLhZBsbG7Rr1w6lS5fWqX1AQAA6d+6crce0evXq6Nu3L9LT03HixIlsyyUkJGDq1Knw8fGBlZUVHBwc0KFDBxw7dqxA9S5fvhwA8PXXX8Pc3Fya/vbbb6N169bYv38/7t27l+96Vq9ejYyMDLz//vta6yEiIqKcvXYBEACCg4ORkZGBtWvXak1fuXIlSpcujW7duuW4nJOTE16+fImHDx8arLbQ0FAoFAoEBQUZbBvFwczMDEDmIfesnj17hrfeegvTp0+Ho6MjRowYgZ49e+LcuXPw9/fH9u3bdd7G4cOHUapUKTRr1izbPM2h3CNHjuS7nl9++QUAMHToUJ23TUREJGev3TmAANCoUSPUqlULq1atwrhx4wAAMTEx2Lt3L0aOHAkLC4scl+vTpw8WLFiA5s2bY8SIEWjRogV8fX1hbW2d5/aePHmS60UZ3t7e6NevX5H2p6SJj4/Hli1bYGlpiRYtWmjNGz16NK5evYrly5drBa7Zs2ejQYMGGDZsGAIDA2FpaZnnNhITExEdHY1atWpBqVRmm6859+/WrVt5rufvv//GzZs30aRJE/j4+Oi6i0RERLL2WgZAILMXcOzYsTh9+jQaN24sHQbM7fAvAMycORPPnj3DmjVrMH78eACAUqmEr68vunfvjo8++ijHQ8BPnz7FtGnTclxn165dtQJg9+7d0aRJk9f6XrMjRozAo0ePMH36dDg5OUnTnzx5gk2bNiEgICBbb1vZsmXx+eef4+OPP8aBAwfQqVOnPLcRFxcHALm+TnZ2dlrtcsPePyIiooJ7bQPggAEDMH78eKxcuRKNGzfGqlWrUK9ePdStWzfXZSwtLbFq1Sp8/fXX2LNnD/755x/8888/OH/+PM6fP49ly5bhyJEjqFy5stZy1atXx/Xr13Wqy97e/rUOfxMnTsSGDRsQGBiISZMmac07c+YMVCoVUlNTc+wR1fTWXb9+HZ06dcLhw4dx+PBhrTZ169bN9RB9QcXHx+O3336DjY0N+vbtq5d1EhERycFrGwDLlCmDzp07Y+PGjejduzdu3LiBRYsW6bRshQoVMGzYMAwbNgwAcOfOHQQHB+Po0aP49NNPsWPHDkOWXmJNnjwZc+bMQUBAALZu3Zrt0KxmSJnjx4/j+PHjua5HM5bi4cOHs/WcDho0CN26dZNCcm49fPHx8QBy7yEEgI0bNyIpKQlDhgyBjY1NPntHREREGq/lRSAaQ4YMQXx8PIKCgmBpaYn+/fsXaj1VqlRBaGgoAODgwYN6rPD1MXnyZMyYMQOtW7fGrl27YGVlla2N5rDsuHHjIITI9TF16lQAmQM3vzpP8zqXKlUKrq6uiIyMhEqlyrYtTW9i1nEAX7VixQoAPPxLRERUUK91AOzQoQPc3Nzw4MEDdOvWDY6OjoVel5x7kDThr1WrVvjjjz9yvSimYcOGUCgUOHnypF6226pVKyQmJubYm6i5E0nLli1zXPby5cs4c+YMfHx80KRJE73UQ0REJBevdQBUKpXYvn07tm3bhtmzZ+fbfvr06bh//3626UIIzJkzBwDQvHnzItUUFxeH69evIzo6ukjrKa5tTJkyBTNmzECLFi3yDH8A4OLigj59+uDEiRP45ptvIITI1ub06dNISkrSaduaQ/CTJ09GWlqaNH3v3r04fPgw2rdvDw8PjxyX1Vz8wVu/ERERFdxrew6gRoMGDdCgQQOd2i5YsAAhISFo0KAB6tevj9KlS+Pp06c4dOgQbt68CScnJ8yfPz/bcnkNAwNkXjXr4uICANi2bRsGDx6MQYMGSYc787N9+3Zp/LzIyEhpmuYevt7e3pgwYYLUPq9tfPbZZ3jy5AmAzF4yzTRND+fQoUOlkBsaGoqvv/4apqamaNSoEb755ptstbVu3VrrFmw//fQTbty4gS+++AJr166VBs++f/8+zp49i1u3biE6OjrfoXUAwN/fH0OHDsWKFSvg5+eHjh07Ijo6Gps2bULp0qVzPaczLS0N69atg7m5OQYOHJjvdoiIiEjbax8AC2LXrl3Ys2cPjhw5gp07d+Lx48ewsLBA5cqV8dlnn2Hs2LFwdXXNtlxew8AAQLdu3aQAWBgXL17E6tWrtaaFh4cjPDwcQOah0qwBMC9btmzB3bt3tab9/vvv0v9bt24tBUBNwMzIyMgx+GZdRqN06dI4ceIEFi9ejE2bNuHXX3+FWq2Gi4sLfH19MXnyZDg7O+tUKwAsW7YMtWvXxs8//4wffvgBNjY26N69O2bOnIkqVarkuMz27dvx9OlT9OnTR2uYGiIiItKNQuR0HO8V8fHxsLe3R1xcnHQhgL5FR0dj2bJlGD58eI4hjKio+B4jIiJDE0LgyvEj2L/oW2la/3mL4OLhafBtFySvyaoHkIiIiMhQ0lKSsWhQ72zTf/1iNABg3KbdxV1Srl7ri0CIiIiISoqcwl9W8/vmfZes4sQASERERFREuoa7khICGQCJiIiIipFanf0GCMWNAZCIiIioGD2IuGrsEhgAiYiIiIrTyxfPjV0CAyARERFRcbJxKPyta/WFAZCIiIioiD7dsFOndmalbOBWw8fA1eSvxI0D+PjxY2OXQG8ovreIiMhQTEx061N7e/jHMDFRGria/JWYAGhtbQ0zMzNs3brV2KXQG8zMzEyn+xQTEREV1LhNu/Mc5qXL2Emo2rhpMVaUuxJzKzgAiIuLQ1JSksHWT2RtbQ17e3tjl0FERG84tVqFBxFX8fLFc9g4OMKtho/Be/5e21vB2dvb88uZiIiIXnsmJkq4+9Qxdhm54kUgREQkO9OmTcPQoUOl58eOHYNCocDhw4elaSNGjMDkyZP1ts1evXohNDQUABASEoIyZcqgbt268PX1RcOGDXHixAm9basw0tLS0KlTJ9SuXRujRo3SyzpDQkLwySefFGrZ3bt3o3Xr1oVatnXr1ti+fXuhljWkiIgIWFtba70mjx8/RufOnVGnTh3UqFEDgwYNQnJyMgAgMTERgwcPRu3ateHt7Y0JEyZAhwO3OmEAJCIi2fH399cKe4cOHULjxo2zTQsICDBYDf3798fFixcRHh6OcePGYcyYMfkuo1aroVarDVLPhQsXcOvWLVy+fBk//vhjsW1X31Qq499lIyfp6ekYNmwYunfvrjV95syZqFq1Ki5duoQrV67g0aNHWLVqFQBg1qxZUKlUuHTpEi5fvozw8HBs2bJFL/UwABIRkew0adIEDx8+xH///QcAOHz4MKZMmSIFwOjoaNy7dw9vvfUWFixYgIYNG6Ju3bpo2LAhTp48Ka2nUqVKmDJlCt566y14enpixowZ0rzr16+jadOm8PHxQbdu3RAfH59rPXFxcXB0zHlsuJCQEPTs2RMdOnRArVq1EB0djUqVKuHixYtSmwYNGki1t27dGp999hlatGiBKlWqYMSIEfm+HteuXUP//v1x79491K1bF2vWrMlxu/v27UPz5s1Rv359NGrUCIcOHQIA3Lp1C82aNYOvry9q166Nr776Slp3dHQ0OnfujJo1ayIgIADPnj3LsYb09HR8+OGHqFq1qta6ASAmJgb+/v6oX78+fHx88NFHH0mBNDQ0FP7+/ujZsydq166Nf/75R2u9v//+O3x9fXHnzh0cPnwYtWrVwocffghfX1/4+Pjg7NmzUtuC7t+uXbtQp04d1K1bF7Vq1cKOHTtyfY2nT5+O3r17o2rVqlrTFQoFEhISoFarkZaWhqSkJFSoUAEAEB4ejsDAQCgUCpiZmaFdu3ZYu3Zt3j9MXQkdxMXFCQAiLi5Ol+ZEREQlXps2bcSaNWtESkqK8PT0FEIIUaVKFZGcnCx+/fVX4e/vL4QQIjY2Vlrm5MmTonr16tJzDw8PMXr0aCGEEI8fPxZ2dnbiv//+E0II0aBBA7FixQohhBCXLl0S5ubmYtWqVUIIIaZOnSqcnZ2Fr6+vqFSpkihdurQ4c+ZMjnVOnTpVuLq6ipiYGK3tXrhwQXpev359cejQISGEEK1atRLdunUT6enpIikpSVSqVEmcOHFCCCHEjh07xJAhQ3LczqFDh4Svr2+u271z545o0qSJlAVu3bolXFxcREpKivj444/FrFmzpGWfPn0qrcPDw0M8efJECCFE3759tdpltXjxYhEQECBSU1NFamqqaN26tWjVqpUQQojk5GSRkJAghBAiIyNDdOzYUWzYsEEIIcSqVauElZWVuH79urSuVq1aiW3bton58+eL5s2bS9s/dOiQUCqV4tSpU0IIIZYsWSLat29f6P2rU6eO9NqqVCrx/PnzHPft1KlTok2bNkKtVoupU6eKMWPGaK2rdevWokyZMsLGxkYMGzZMmjdlyhTRrVs3kZKSIhISEkSLFi1E7dq1c9yGEAXLa+wBJCIiWdIcBj59+jQaNWoEILNn8OTJkzh8+DD8/f0BZB4abdWqFWrVqoURI0bgxo0b0jlaAPDee+8BAJydnVG5cmVERkYiPj4eFy9eRFBQEACgdu3aaN68udb2NYeAIyMjsXnzZvTo0UNrvVm98847KFeunM771rdvX5iamsLKygp169bFnTt3AABdunTBihUrdF5P1u2GhYXh9u3baNmyJerWrYtevXrBxMQE9+7dQ8uWLbF8+XJ8+eWX2L9/PxwcHKR1BAYGwsnJCQDw1ltvSbW86q+//sLAgQNhbm4Oc3NzBAcHS/PUajXGjx8PX19f1KtXD2fPntXqAW3atCmqV6+utb4ZM2bgr7/+wp9//iltHwC8vLzQuHHjbPUUZv/atGmDMWPGYN68ebh06ZLWfmskJSXhww8/xPLly6FQKLLN37hxI2rWrIno6Gg8fPgQN2/elH5GEyZMQMWKFdG4cWN07NgRjRo1gqmpfq7fLVFXARMRERUXf39//PLLL6hYsaJ0sUGrVq1w6NAhHDp0CKGhoUhLS0OPHj1w6NAhNGzYUBpmIzU1FVZWVgAAS0tLaZ1KpRIZGRk5bi+nL3+NNm3aICUlBVeuXEHDhg2zzbexsdF6bmpqqnWuW0pKitZ8XWvKT9btCiHQrl07rF+/Plu7qlWromnTpvjzzz+xePFifP/999izZ0+etfTq1Qu3b98GkBn+XpX19VqwYAFiY2Nx+vRpWFpaYuzYsVr7/OrrAwCNGzfG/v378e+//6JmzZrS9NzqKcz+LViwAFevXsWhQ4cwaNAg9O/fH506dZL+KGjWrBlGjBiBe/fuSX9QvHjxAmq1Gs+fP8fq1avx008/4eeff4ZSqYStrS169eqFQ4cOYejQobCyssIPP/wg1TFnzhz4+OjnLiLsASQiIllq2LAhYmNj8euvv2oFwI0bNyI6OhqNGjVCSkoK0tLSULFiRQDAokWLdFq3nZ0d6tWrhzVr1gAArl69imPHjuXaPjw8HC9fvkSlSpV0Wr+XlxdOnz4NAPjnn39w48YNnZYrig4dOuDAgQO4dOmSNE1zvt2tW7dQrlw5DBw4EPPmzcOpU6fyXd+WLVtw8eJFXLx4EU5OTmjbti3WrVuH9PR0pKWlSRdCAMDz58/h4uICS0tLxMTE4Lfffst3/e3atcPKlSvRuXNnnD9/3iD7d/36demcxJEjR+LUqVOoWbOmtF8//vgjateujcePHyMqKgpRUVH45JNPEBwcjNWrVwMAKleujLCwMACZ50Hu27cPtWrVApA5rp9mfOTIyEgsWbIE48aNy3dfdMEeQCIikiUzMzM0b94c4eHh8Pb2BgBUq1YNCQkJaN68OczMzGBmZoYZM2agUaNGcHZ2Rr9+/XRe/5o1azB48GDMnz8fVatWRcuWLbXm//rrrzh8+DCEEFAoFFi7di3KlCmj07pnzJiBQYMGYdmyZXjrrbd07hXauXMndu7cWaDDwBpeXl5Yv349hg8fjqSkJKSlpaFevXpYv349tmzZgnXr1sHc3BxqtRpLly4t8Po/+OADXLlyBTVr1oSjoyNatGiBc+fOAQDGjBmDXr16wcfHB+XLl0fbtm11WmeLFi2wceNG9OrVK9+LJwqzf5MmTcKNGzdgbm4Oa2trLFmypMD7/cMPP2DEiBGoXbs2VCoV3nrrLXz66acAgH///Rd9+vSBqakpTE1N8d1336Fu3boF3kZOStSdQIiIiIiocAqS13gImIiIiEhmGACJiIiIZIYBkIiIiEhmGACJiIiIZEanq4A114nkdRsbIiIiIjIeTU7T4fpe3QJgQkICAMDd3b0IZRERERGRoSUkJMDe3j7PNjoNA6NWq/Hw4UPY2trmOZI5ERERERmHEAIJCQkoX748TEzyPstPpwBIRERERG8OXgRCREREJDMMgEREREQywwBIREREJDMMgEREREQywwBIREREJDMMgEREREQywwBIREREJDP/B563KN46z9tiAAAAAElFTkSuQmCC",
+      "text/plain": [
+       "<Figure size 800x600 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "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EhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkmgERERERGhgkgERERkZFhAkhERERkZJgAEhERERkZJoBERERERoYJIBEREZGRYQJIREREZGSYABIREREZGSaAREREREaGCSARERGRkWECSERERGRkmAASERERGRkTQwdQUFJSEtLT0w0dBj3HLC0tYWdnZ+gwiIiIDKrKJIBJSUn49ttvkZOTY+hQ6DmmVCrx1ltvMQkkIiKjVmUSwPT0dOTk5KBv376oXr26ocOh59DDhw+xceNGpKenMwEkIiKjVmUSwHzVq1eHq6urocMgIiIiem7xJhAiIiIiI8MEkIiIiMjIMAEkIiIiMjJMAImIiIiMzDOTAMbExEAmk0Emk8HFxQW5ubla6126dEmq5+Xl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",
+      "text/plain": [
+       "<Figure size 800x600 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "-------------------------------------------\n",
+      "-------------------------------------------\n",
+      "Dataset:  carls\n",
+      "Target Embeddings:  ChemNet\n",
+      "-------------------------------------------\n",
+      "-------------------------------------------\n",
+      "Encoder(\n",
+      "  (encoder): Sequential(\n",
+      "    (0): Linear(in_features=1676, out_features=1548, bias=True)\n",
+      "    (1): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (2): Linear(in_features=1548, out_features=1420, bias=True)\n",
+      "    (3): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (4): Linear(in_features=1420, out_features=1292, bias=True)\n",
+      "    (5): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (6): Linear(in_features=1292, out_features=1164, bias=True)\n",
+      "    (7): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (8): Linear(in_features=1164, out_features=1036, bias=True)\n",
+      "    (9): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (10): Linear(in_features=1036, out_features=908, bias=True)\n",
+      "    (11): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (12): Linear(in_features=908, out_features=780, bias=True)\n",
+      "    (13): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (14): Linear(in_features=780, out_features=652, bias=True)\n",
+      "    (15): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (16): Linear(in_features=652, out_features=512, bias=True)\n",
+      "  )\n",
+      ")\n",
+      "-------------------------------------------\n",
+      "-------------------------------------------\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "87ca934422cf49cab01e772dc28a39e7",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value='0.301 MB of 0.301 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n",
+       "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
+       "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
+       "    </style>\n",
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>58</td></tr><tr><td>Encoder Training Loss</td><td>1.12e-07</td></tr><tr><td>Encoder Validation Loss</td><td>3.59e-06</td></tr><tr><td>Learning Rate at Final Epoch</td><td>0.0</td></tr></table><br/></div></div>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run <strong style=\"color:#cdcd00\">fresh-darkness-489</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/zvr1gl37' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/zvr1gl37</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 3 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find logs at: <code>./wandb/run-20241215_130124-zvr1gl37/logs</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Hyperparameters for best model: \n",
+      "    batch_size  :  16\n",
+      "    epochs  :  500\n",
+      "    learning_rate  :  1e-05\n"
      ]
     }
    ],
diff --git a/models/carl_to_chemnet_encoder..pth b/models/carl_to_chemnet_encoder..pth
index 398810ec..a8e29654 100644
Binary files a/models/carl_to_chemnet_encoder..pth and b/models/carl_to_chemnet_encoder..pth differ
diff --git a/models/functions.py b/models/functions.py
index d47979be..a2865d77 100644
--- a/models/functions.py
+++ b/models/functions.py
@@ -736,7 +736,7 @@ def train_model(
                 # log losses to wandb, format losses in scientific notation for readability
                 wandb.log({"Encoder Training Loss": format(average_loss, '.2e'), "Encoder Validation Loss": format(val_average_loss, '.2e')})
 
-                if (epoch + 1) % 10 == 0:
+                if (epoch + 1) % 1 == 0:
                     print('Epoch[{}/{}]:'.format(epoch+1, combo['epochs']))
                     print(f'   Training loss: {average_loss}')
                     print(f'   Validation loss: {val_average_loss}')
diff --git a/models/ims_encoder.ipynb b/models/ims_encoder.ipynb
index 62ece8ad..08fcf83c 100644
--- a/models/ims_encoder.ipynb
+++ b/models/ims_encoder.ipynb
@@ -1167,7 +1167,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 28,
    "metadata": {},
    "outputs": [
     {
@@ -1176,7 +1176,7 @@
        "<module 'functions' from '/home/cmdunham/ChemicalDataGeneration/models/functions.py'>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 28,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -1188,7 +1188,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 29,
    "metadata": {},
    "outputs": [
     {
@@ -1219,7 +1219,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_122731-wy2m6ujt</code>"
+       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_141144-w6xo7a6b</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1231,7 +1231,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">electric-valley-486</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">solar-glade-493</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1255,7 +1255,7 @@
     {
      "data": {
       "text/html": [
-       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt</a>"
+       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1274,145 +1274,314 @@
       "New run with hyperparameters:\n",
       "batch_size  :  64\n",
       "epochs  :  500\n",
-      "learning_rate  :  1e-05\n",
+      "learning_rate  :  0.0001\n",
       "Saved best model at epoch 1\n",
+      "Epoch[1/500]:\n",
+      "   Training loss: 0.0018502819477478872\n",
+      "   Validation loss: 0.00038148708901253775\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 2\n",
-      "Saved best model at epoch 3\n",
-      "Saved best model at epoch 4\n",
+      "Epoch[2/500]:\n",
+      "   Training loss: 0.0004829900686170026\n",
+      "   Validation loss: 0.00018166769941036474\n",
+      "-------------------------------------------\n",
+      "Epoch[3/500]:\n",
+      "   Training loss: 0.00032997282478314986\n",
+      "   Validation loss: 0.0002835051352017441\n",
+      "-------------------------------------------\n",
+      "Epoch[4/500]:\n",
+      "   Training loss: 0.0003257950492189793\n",
+      "   Validation loss: 10.280857228299437\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 5\n",
+      "Epoch[5/500]:\n",
+      "   Training loss: 0.8234902602931663\n",
+      "   Validation loss: 0.00011339400869966854\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 6\n",
+      "Epoch[6/500]:\n",
+      "   Training loss: 7.583950118798414e-05\n",
+      "   Validation loss: 5.6756721370174176e-05\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 7\n",
-      "Saved best model at epoch 10\n",
+      "Epoch[7/500]:\n",
+      "   Training loss: 8.165417523806912e-05\n",
+      "   Validation loss: 3.858435758220986e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[8/500]:\n",
+      "   Training loss: 0.0001049875839964319\n",
+      "   Validation loss: 0.00010268009956219982\n",
+      "-------------------------------------------\n",
+      "Epoch[9/500]:\n",
+      "   Training loss: 0.00018674225623896431\n",
+      "   Validation loss: 0.00018878623647100034\n",
+      "-------------------------------------------\n",
       "Epoch[10/500]:\n",
-      "   Training loss: 7.579736407794366e-05\n",
-      "   Validation loss: 5.115047107611551e-05\n",
+      "   Training loss: 0.00016656890004744767\n",
+      "   Validation loss: 4.9516607065585414e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[11/500]:\n",
+      "   Training loss: 0.0001971141003818893\n",
+      "   Validation loss: 0.0007067102104616225\n",
+      "-------------------------------------------\n",
+      "Epoch[12/500]:\n",
+      "   Training loss: 0.0001797738181977421\n",
+      "   Validation loss: 0.0017989705643368318\n",
+      "-------------------------------------------\n",
+      "Epoch 00013: reducing learning rate of group 0 to 1.0000e-05.\n",
+      "Epoch[13/500]:\n",
+      "   Training loss: 0.0007095902177131207\n",
+      "   Validation loss: 0.00022479546638630527\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 11\n",
       "Saved best model at epoch 14\n",
-      "Saved best model at epoch 17\n",
+      "Epoch[14/500]:\n",
+      "   Training loss: 0.00013625014023465666\n",
+      "   Validation loss: 2.4050625466002482e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 15\n",
+      "Epoch[15/500]:\n",
+      "   Training loss: 1.9558198771360155e-05\n",
+      "   Validation loss: 1.344978055092095e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[16/500]:\n",
+      "   Training loss: 1.2507914347088392e-05\n",
+      "   Validation loss: 1.961725792571315e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[17/500]:\n",
+      "   Training loss: 9.131270878842507e-06\n",
+      "   Validation loss: 1.55877480442702e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 18\n",
+      "Epoch[18/500]:\n",
+      "   Training loss: 9.961867444397855e-06\n",
+      "   Validation loss: 9.37319432357491e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[19/500]:\n",
+      "   Training loss: 8.743872805311963e-06\n",
+      "   Validation loss: 1.9184707317292415e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 20\n",
       "Epoch[20/500]:\n",
-      "   Training loss: 3.5019522566080426e-05\n",
-      "   Validation loss: 0.0003292494768145128\n",
+      "   Training loss: 7.150765145849241e-06\n",
+      "   Validation loss: 8.850422350416307e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 21\n",
+      "Epoch[21/500]:\n",
+      "   Training loss: 5.703378856825615e-06\n",
+      "   Validation loss: 7.543047381605244e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[22/500]:\n",
+      "   Training loss: 8.013138734717863e-06\n",
+      "   Validation loss: 8.952159190409917e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[23/500]:\n",
+      "   Training loss: 6.19136276019242e-06\n",
+      "   Validation loss: 8.301584636471134e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[24/500]:\n",
+      "   Training loss: 7.92925344849412e-06\n",
+      "   Validation loss: 9.395087951323534e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[25/500]:\n",
+      "   Training loss: 5.1531985210129885e-06\n",
+      "   Validation loss: 1.1800227275697566e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[26/500]:\n",
+      "   Training loss: 5.631712101714202e-06\n",
+      "   Validation loss: 7.911506403990098e-06\n",
+      "-------------------------------------------\n",
       "Epoch 00027: reducing learning rate of group 0 to 1.0000e-06.\n",
-      "Saved best model at epoch 28\n",
-      "Saved best model at epoch 29\n",
+      "Epoch[27/500]:\n",
+      "   Training loss: 7.251882259204902e-06\n",
+      "   Validation loss: 7.76747890932161e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[28/500]:\n",
+      "   Training loss: 3.7308577708959695e-06\n",
+      "   Validation loss: 7.582296652695683e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[29/500]:\n",
+      "   Training loss: 2.0162085395449903e-06\n",
+      "   Validation loss: 7.77820236975166e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 30\n",
       "Epoch[30/500]:\n",
-      "   Training loss: 4.805108672694499e-06\n",
-      "   Validation loss: 1.004061184560075e-05\n",
+      "   Training loss: 1.4638856039390636e-06\n",
+      "   Validation loss: 6.9505555191956495e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 31\n",
+      "Epoch[31/500]:\n",
+      "   Training loss: 1.2789631310145418e-06\n",
+      "   Validation loss: 6.720955559661201e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 32\n",
-      "Saved best model at epoch 33\n",
+      "Epoch[32/500]:\n",
+      "   Training loss: 1.1391979383675623e-06\n",
+      "   Validation loss: 6.372789032590015e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[33/500]:\n",
+      "   Training loss: 9.812955841452637e-07\n",
+      "   Validation loss: 6.456031829736958e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[34/500]:\n",
+      "   Training loss: 9.609353012338017e-07\n",
+      "   Validation loss: 6.528563722198428e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 35\n",
+      "Epoch[35/500]:\n",
+      "   Training loss: 8.965151095192851e-07\n",
+      "   Validation loss: 6.266986179050417e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 36\n",
+      "Epoch[36/500]:\n",
+      "   Training loss: 7.95339518516651e-07\n",
+      "   Validation loss: 6.121748041500425e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 37\n",
-      "Saved best model at epoch 38\n",
+      "Epoch[37/500]:\n",
+      "   Training loss: 8.176083215048865e-07\n",
+      "   Validation loss: 5.985950133323645e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[38/500]:\n",
+      "   Training loss: 7.456755162926602e-07\n",
+      "   Validation loss: 6.042196001552335e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[39/500]:\n",
+      "   Training loss: 6.801350315595314e-07\n",
+      "   Validation loss: 6.426411778391162e-06\n",
+      "-------------------------------------------\n",
       "Epoch[40/500]:\n",
-      "   Training loss: 2.945703872861096e-06\n",
-      "   Validation loss: 7.783493156380524e-06\n",
+      "   Training loss: 6.261854646038973e-07\n",
+      "   Validation loss: 6.055836071291355e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[41/500]:\n",
+      "   Training loss: 6.440675201697201e-07\n",
+      "   Validation loss: 6.016102545860138e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 42\n",
-      "Saved best model at epoch 44\n",
-      "Saved best model at epoch 46\n",
-      "Epoch 00049: reducing learning rate of group 0 to 1.0000e-07.\n",
-      "Saved best model at epoch 50\n",
+      "Epoch[42/500]:\n",
+      "   Training loss: 5.756359933220372e-07\n",
+      "   Validation loss: 5.902835907867815e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 43\n",
+      "Epoch[43/500]:\n",
+      "   Training loss: 5.719382984001071e-07\n",
+      "   Validation loss: 5.821734206216576e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[44/500]:\n",
+      "   Training loss: 5.583247692569031e-07\n",
+      "   Validation loss: 5.877522654728743e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 45\n",
+      "Epoch[45/500]:\n",
+      "   Training loss: 5.423317430883713e-07\n",
+      "   Validation loss: 5.771396636810559e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[46/500]:\n",
+      "   Training loss: 4.838645372867179e-07\n",
+      "   Validation loss: 6.271034002549869e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 47\n",
+      "Epoch[47/500]:\n",
+      "   Training loss: 5.15592343428446e-07\n",
+      "   Validation loss: 5.767118124119266e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[48/500]:\n",
+      "   Training loss: 4.3834841464230447e-07\n",
+      "   Validation loss: 5.878702004859095e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 49\n",
+      "Epoch[49/500]:\n",
+      "   Training loss: 4.1720017337245293e-07\n",
+      "   Validation loss: 5.563803711890839e-06\n",
+      "-------------------------------------------\n",
       "Epoch[50/500]:\n",
-      "   Training loss: 1.950272702908919e-06\n",
-      "   Validation loss: 7.308104989598736e-06\n",
+      "   Training loss: 3.975368744347383e-07\n",
+      "   Validation loss: 5.619411625761413e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[51/500]:\n",
+      "   Training loss: 3.835410507339094e-07\n",
+      "   Validation loss: 5.848775599524051e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 51\n",
       "Saved best model at epoch 52\n",
+      "Epoch[52/500]:\n",
+      "   Training loss: 3.842289073776335e-07\n",
+      "   Validation loss: 5.518406341879628e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 53\n",
+      "Epoch[53/500]:\n",
+      "   Training loss: 3.638580359641217e-07\n",
+      "   Validation loss: 5.502602111036042e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 54\n",
+      "Epoch[54/500]:\n",
+      "   Training loss: 3.4207596041690465e-07\n",
+      "   Validation loss: 5.4535120071764755e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[55/500]:\n",
+      "   Training loss: 3.305865027897607e-07\n",
+      "   Validation loss: 5.4755958692655074e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 56\n",
-      "Saved best model at epoch 57\n",
+      "Epoch[56/500]:\n",
+      "   Training loss: 3.2388758303537537e-07\n",
+      "   Validation loss: 5.424640079566394e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[57/500]:\n",
+      "   Training loss: 3.107785154388127e-07\n",
+      "   Validation loss: 5.6910841030827365e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 58\n",
-      "Saved best model at epoch 59\n",
+      "Epoch[58/500]:\n",
+      "   Training loss: 3.0417785023397226e-07\n",
+      "   Validation loss: 5.306967057066296e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[59/500]:\n",
+      "   Training loss: 2.9605457924575363e-07\n",
+      "   Validation loss: 5.541419589593202e-06\n",
+      "-------------------------------------------\n",
       "Epoch[60/500]:\n",
-      "   Training loss: 1.7704724045436322e-06\n",
-      "   Validation loss: 7.1334162785041194e-06\n",
+      "   Training loss: 2.8629057656309726e-07\n",
+      "   Validation loss: 5.537760388977791e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 62\n",
-      "Saved best model at epoch 63\n",
-      "Epoch 00064: reducing learning rate of group 0 to 1.0000e-08.\n",
-      "Saved best model at epoch 64\n",
-      "Saved best model at epoch 65\n",
-      "Saved best model at epoch 66\n",
-      "Saved best model at epoch 67\n",
-      "Saved best model at epoch 68\n",
-      "Saved best model at epoch 69\n",
-      "Saved best model at epoch 70\n",
-      "Epoch[70/500]:\n",
-      "   Training loss: 1.691590368407025e-06\n",
-      "   Validation loss: 7.071051679360719e-06\n",
+      "Epoch[61/500]:\n",
+      "   Training loss: 2.7941149634989196e-07\n",
+      "   Validation loss: 5.591474502817181e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 71\n",
-      "Saved best model at epoch 72\n",
-      "Saved best model at epoch 75\n",
-      "Saved best model at epoch 76\n",
-      "Saved best model at epoch 79\n",
-      "Epoch[80/500]:\n",
-      "   Training loss: 1.6865784254098848e-06\n",
-      "   Validation loss: 7.0582436983488306e-06\n",
+      "Epoch[62/500]:\n",
+      "   Training loss: 2.7869111311783624e-07\n",
+      "   Validation loss: 5.570087594186569e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 81\n",
-      "Saved best model at epoch 84\n",
-      "Saved best model at epoch 85\n",
-      "Saved best model at epoch 87\n",
-      "Saved best model at epoch 88\n",
-      "Saved best model at epoch 90\n",
-      "Epoch[90/500]:\n",
-      "   Training loss: 1.6809502857580552e-06\n",
-      "   Validation loss: 7.049325982048596e-06\n",
+      "Epoch[63/500]:\n",
+      "   Training loss: 2.7462285775510726e-07\n",
+      "   Validation loss: 5.7217946449254e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 93\n",
-      "Saved best model at epoch 95\n",
-      "Saved best model at epoch 96\n",
-      "Saved best model at epoch 97\n",
-      "Saved best model at epoch 99\n",
-      "Saved best model at epoch 100\n",
-      "Epoch[100/500]:\n",
-      "   Training loss: 1.6765387856307238e-06\n",
-      "   Validation loss: 7.040213757230931e-06\n",
+      "Epoch 00064: reducing learning rate of group 0 to 1.0000e-07.\n",
+      "Epoch[64/500]:\n",
+      "   Training loss: 2.716082580691312e-07\n",
+      "   Validation loss: 5.490519916295616e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 101\n",
-      "Saved best model at epoch 103\n",
-      "Saved best model at epoch 104\n",
-      "Saved best model at epoch 105\n",
-      "Saved best model at epoch 107\n",
-      "Saved best model at epoch 108\n",
-      "Epoch[110/500]:\n",
-      "   Training loss: 1.6722217330426907e-06\n",
-      "   Validation loss: 7.035689766429935e-06\n",
+      "Epoch[65/500]:\n",
+      "   Training loss: 2.626023258137926e-07\n",
+      "   Validation loss: 5.516880578327314e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 111\n",
-      "Saved best model at epoch 112\n",
-      "Saved best model at epoch 118\n",
-      "Epoch[120/500]:\n",
-      "   Training loss: 1.6678898170695367e-06\n",
-      "   Validation loss: 7.02710650341693e-06\n",
+      "Epoch[66/500]:\n",
+      "   Training loss: 2.612348280161802e-07\n",
+      "   Validation loss: 5.525215054367893e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 121\n",
-      "Saved best model at epoch 124\n",
-      "Epoch[130/500]:\n",
-      "   Training loss: 1.6639017916009257e-06\n",
-      "   Validation loss: 7.0222877414300445e-06\n",
+      "Epoch[67/500]:\n",
+      "   Training loss: 2.605064401025554e-07\n",
+      "   Validation loss: 5.538690987724161e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 131\n",
-      "Saved best model at epoch 133\n",
-      "Saved best model at epoch 135\n",
-      "Saved best model at epoch 136\n",
-      "Saved best model at epoch 137\n",
-      "Epoch[140/500]:\n",
-      "   Training loss: 1.6592208918417297e-06\n",
-      "   Validation loss: 7.015908560992011e-06\n",
+      "Epoch[68/500]:\n",
+      "   Training loss: 2.5993086083020237e-07\n",
+      "   Validation loss: 5.547911123944965e-06\n",
       "-------------------------------------------\n",
-      "Validation loss has not improved in 10 epochs. Stopping training at epoch 147.\n"
+      "Validation loss has not improved in 10 epochs. Stopping training at epoch 68.\n"
      ]
     },
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 800x600 with 1 Axes>"
       ]
@@ -1422,7 +1591,7 @@
     },
     {
      "data": {
-      "image/png": "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GwwCH6w/B0elHP1b+lsvbiIiIrIotgDWdv4tgWcPA8eXARc3A9o8GNo9gXHHm+DC3xqMyz2PDvU9kZSZj6V7r+DQ1TR8OqwlXNR8axAREdVWXArOTqVmF+DTTeex8sgN5BbqAQDtQurgmegwdAmva+XoiIiIqKqqkq8xAbRzuYU6JGUWwFkth7erg7XDISIiorvEtYCp0pxUCoR68W1ARERkT3gTCBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2RmHtAErKyMhAbm6utcOgWszJyQkajcbaYRAREVmVzSSAGRkZ+OKLL6DVaq0dCtViSqUSzzzzDJNAIiKyazaTAObm5kKr1WLw4MGoW7eutcOhWiglJQUrVqxAbm4uE0AiIrJrNpMAFqtbty78/PysHQYRERFRrcWbQIiIiIjsDBNAIiIiIjvDBJCIiIjIzjABJCIiIrIzNSYBjIuLgyRJkCQJvr6+0Ol0ZZY7c+aMsVxISEip/VevXsVTTz2Fhg0bwsHBAS4uLggNDcXDDz+MuXPn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",
+      "image/png": "",
       "text/plain": [
        "<Figure size 800x600 with 1 Axes>"
       ]
@@ -1468,12 +1637,12 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "5c943ca84d8d4350a3fe829379d5d82e",
+       "model_id": "eb4bbb0ceb3349db95e21499a072b969",
        "version_major": 2,
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value='10.640 MB of 10.640 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
+       "VBox(children=(Label(value='1.025 MB of 1.025 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
       ]
      },
      "metadata": {},
@@ -1487,7 +1656,7 @@
        "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
        "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
        "    </style>\n",
-       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>147</td></tr><tr><td>Encoder Training Loss</td><td>1.66e-06</td></tr><tr><td>Encoder Validation Loss</td><td>7.01e-06</td></tr><tr><td>Learning Rate at Final Epoch</td><td>0.0</td></tr></table><br/></div></div>"
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>68</td></tr><tr><td>Encoder Training Loss</td><td>2.60e-07</td></tr><tr><td>Encoder Validation Loss</td><td>5.55e-06</td></tr><tr><td>Learning Rate at Final Epoch</td><td>0.0</td></tr></table><br/></div></div>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1499,7 +1668,7 @@
     {
      "data": {
       "text/html": [
-       " View run <strong style=\"color:#cdcd00\">electric-valley-486</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 4 artifact file(s) and 0 other file(s)"
+       " View run <strong style=\"color:#cdcd00\">solar-glade-493</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 3 artifact file(s) and 0 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1511,7 +1680,7 @@
     {
      "data": {
       "text/html": [
-       "Find logs at: <code>./wandb/run-20241215_122731-wy2m6ujt/logs</code>"
+       "Find logs at: <code>./wandb/run-20241215_141144-w6xo7a6b/logs</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1527,7 +1696,7 @@
       "Hyperparameters for best model: \n",
       "    batch_size  :  64\n",
       "    epochs  :  500\n",
-      "    learning_rate  :  1e-05\n"
+      "    learning_rate  :  0.0001\n"
      ]
     }
    ],
@@ -1545,7 +1714,7 @@
     "model_hyperparams = {\n",
     "  'batch_size':[64],\n",
     "  'epochs': [500],\n",
-    "  'learning_rate':[.00001]\n",
+    "  'learning_rate':[.0001]\n",
     "  }\n",
     "\n",
     "encoder_path = '../models/ims_to_chemnet_encoder.pth'\n",
diff --git a/models/ims_to_chemnet_encoder.pth b/models/ims_to_chemnet_encoder.pth
index b5f79f84..4f43b7b1 100644
Binary files a/models/ims_to_chemnet_encoder.pth and b/models/ims_to_chemnet_encoder.pth differ
diff --git a/models/tmp_plot.png b/models/tmp_plot.png
index b16f78d9..68b8a300 100644
Binary files a/models/tmp_plot.png and b/models/tmp_plot.png differ
diff --git a/models/wandb/debug-internal.log b/models/wandb/debug-internal.log
index edaa553f..b8bc4e5e 120000
--- a/models/wandb/debug-internal.log
+++ b/models/wandb/debug-internal.log
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq/logs/debug-internal.log
\ No newline at end of file
+run-20241215_142811-rzf59f1t/logs/debug-internal.log
\ No newline at end of file
diff --git a/models/wandb/debug.log b/models/wandb/debug.log
index 0ae693ab..3737f162 120000
--- a/models/wandb/debug.log
+++ b/models/wandb/debug.log
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq/logs/debug.log
\ No newline at end of file
+run-20241215_142811-rzf59f1t/logs/debug.log
\ No newline at end of file
diff --git a/models/wandb/latest-run b/models/wandb/latest-run
index 3dcf7892..7886b0cc 120000
--- a/models/wandb/latest-run
+++ b/models/wandb/latest-run
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq
\ No newline at end of file
+run-20241215_142811-rzf59f1t
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml b/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
index 1bfd159a..9c602c66 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
@@ -57,6 +57,7 @@ _wandb:
       - 53
       - 55
       3:
+      - 2
       - 16
       - 23
       4: 3.8.10
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log b/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
index 11569b90..67557d80 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
@@ -28,3 +28,4 @@ Epoch[30/500]:
    Training loss: 1.5108762595443828e-05
    Validation loss: 1.532883205113239e-05
 -------------------------------------------
+Saved best model at epoch 31
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json b/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
index c8a05c43..f192de43 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
@@ -1 +1 @@
-{"Encoder Training Loss": "1.71e-05", "Encoder Validation Loss": "6.01e-06", "_timestamp": 1734285585.0968778, "_runtime": 1609.8468878269196, "_step": 32}
\ No newline at end of file
+{"Encoder Training Loss": "1.53e-05", "Encoder Validation Loss": "8.98e-06", "_timestamp": 1734285633.84122, "_runtime": 1658.591229915619, "_step": 33, "_wandb": {"runtime": 1685}}
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
index a5660a45..9f887d7d 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
@@ -808,3 +808,228 @@
 2024-12-15 12:59:56,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
 2024-12-15 12:59:56,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
 2024-12-15 13:00:00,780 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:05,781 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:10,781 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:11,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:11,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:15,854 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:20,854 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:25,855 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:25,982 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:00:26,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:26,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:31,780 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:33,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:33,842 DEBUG   SenderThread:273237 [sender.py:send():378] send: history
+2024-12-15 13:00:33,842 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:33,842 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:34,188 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:00:36,843 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:41,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:41,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:42,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:47,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:52,842 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:55,982 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:00:56,717 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:56,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:58,824 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:00,621 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:00,621 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:00,624 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: pause
+2024-12-15 13:01:00,625 INFO    HandlerThread:273237 [handler.py:handle_request_pause():724] stopping system metrics thread
+2024-12-15 13:01:00,625 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:00,626 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:00,626 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:00,626 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:00,627 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:01,780 INFO    wandb-upload_0:273237 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpycmcvee1
+2024-12-15 13:01:02,436 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MTI5NTgxNg==', 'versionIndex': 9}}}
+2024-12-15 13:01:02,437 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:04,438 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:09,438 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:11,717 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:11,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:13,196 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: resume
+2024-12-15 13:01:13,196 INFO    HandlerThread:273237 [handler.py:handle_request_resume():715] starting system metrics thread
+2024-12-15 13:01:13,196 INFO    HandlerThread:273237 [system_monitor.py:start():194] Starting system monitor
+2024-12-15 13:01:13,196 INFO    SystemMonitor:273237 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2024-12-15 13:01:13,196 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started cpu monitoring
+2024-12-15 13:01:13,197 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started disk monitoring
+2024-12-15 13:01:13,198 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started gpu monitoring
+2024-12-15 13:01:13,198 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started memory monitoring
+2024-12-15 13:01:13,199 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started network monitoring
+2024-12-15 13:01:13,300 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:13,300 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:13,305 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: pause
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [handler.py:handle_request_pause():724] stopping system metrics thread
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:13,306 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:13,307 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:13,307 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:13,389 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'COMMITTED', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'versionIndex': 10}}}
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:13,401 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:15,402 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:20,403 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,417 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: resume
+2024-12-15 13:01:24,417 INFO    HandlerThread:273237 [handler.py:handle_request_resume():715] starting system metrics thread
+2024-12-15 13:01:24,417 INFO    HandlerThread:273237 [system_monitor.py:start():194] Starting system monitor
+2024-12-15 13:01:24,417 INFO    SystemMonitor:273237 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started cpu monitoring
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started disk monitoring
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started gpu monitoring
+2024-12-15 13:01:24,419 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started memory monitoring
+2024-12-15 13:01:24,419 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started network monitoring
+2024-12-15 13:01:24,487 DEBUG   SenderThread:273237 [sender.py:send():378] send: telemetry
+2024-12-15 13:01:24,575 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:24,575 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:24,649 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'COMMITTED', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'versionIndex': 10}}}
+2024-12-15 13:01:24,649 DEBUG   SenderThread:273237 [sender.py:send():378] send: exit
+2024-12-15 13:01:24,649 INFO    SenderThread:273237 [sender.py:send_exit():585] handling exit code: 0
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:send_exit():587] handling runtime: 1685
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:send_exit():593] send defer
+2024-12-15 13:01:24,650 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,650 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 0
+2024-12-15 13:01:24,650 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 0
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 1
+2024-12-15 13:01:24,651 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 1
+2024-12-15 13:01:24,651 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 1
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 2
+2024-12-15 13:01:24,651 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 2
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:24,652 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:24,652 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:24,744 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 2
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 3
+2024-12-15 13:01:24,745 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:24,745 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,745 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 3
+2024-12-15 13:01:24,745 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 3
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 4
+2024-12-15 13:01:24,745 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,745 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 4
+2024-12-15 13:01:24,746 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 4
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 5
+2024-12-15 13:01:24,746 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,746 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 5
+2024-12-15 13:01:24,746 DEBUG   SenderThread:273237 [sender.py:send():378] send: summary
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:24,747 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 5
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 6
+2024-12-15 13:01:24,747 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,747 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 6
+2024-12-15 13:01:24,747 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 6
+2024-12-15 13:01:24,749 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,819 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 7
+2024-12-15 13:01:24,820 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,820 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 7
+2024-12-15 13:01:24,820 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,820 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 7
+2024-12-15 13:01:25,200 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:01:25,200 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+2024-12-15 13:01:25,577 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:26,547 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 8
+2024-12-15 13:01:26,548 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:26,548 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:26,548 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 8
+2024-12-15 13:01:26,548 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 8
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [job_builder.py:build():432] Attempting to build job artifact
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [job_builder.py:_get_source_type():565] is repo sourced job
+2024-12-15 13:01:26,549 INFO    SenderThread:273237 [job_builder.py:_get_program_relpath():583] run is notebook based run
+2024-12-15 13:01:26,550 INFO    SenderThread:273237 [job_builder.py:build():541] adding wandb-job metadata file
+2024-12-15 13:01:26,553 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 9
+2024-12-15 13:01:26,554 DEBUG   SenderThread:273237 [sender.py:send():378] send: artifact
+2024-12-15 13:01:26,554 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:26,556 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 9
+2024-12-15 13:01:26,577 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:27,034 INFO    wandb-upload_2:273237 [upload_job.py:push():85] Skipped uploading /home/cmdunham/.local/share/wandb/artifacts/staging/tmpoeboqaj1
+2024-12-15 13:01:27,130 INFO    wandb-upload_0:273237 [upload_job.py:push():88] Uploaded file /tmp/tmpzh_sg04w/wandb-job.json
+2024-12-15 13:01:27,201 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+2024-12-15 13:01:27,316 INFO    wandb-upload_1:273237 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpu31fyxzj
+2024-12-15 13:01:28,036 INFO    SenderThread:273237 [sender.py:send_artifact():1467] sent artifact job-https___github.com_CateMerfeld_ChemicalDataGeneration.git__home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzYwMDkxMw==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NTQ1MQ==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MTI5NTg0MQ==', 'versionIndex': 12}}}
+2024-12-15 13:01:28,037 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,037 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 9
+2024-12-15 13:01:28,037 INFO    SenderThread:273237 [dir_watcher.py:finish():358] shutting down directory watcher
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():388] scan: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log output.log
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-metadata.json wandb-metadata.json
+2024-12-15 13:01:28,202 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json wandb-summary.json
+2024-12-15 13:01:28,203 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml config.yaml
+2024-12-15 13:01:28,203 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/requirements.txt requirements.txt
+2024-12-15 13:01:28,206 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/diff.patch diff.patch
+2024-12-15 13:01:28,208 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 10
+2024-12-15 13:01:28,208 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,210 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,210 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 10
+2024-12-15 13:01:28,210 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,211 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 10
+2024-12-15 13:01:28,211 INFO    SenderThread:273237 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:01:28,398 INFO    wandb-upload_2:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+2024-12-15 13:01:28,424 INFO    wandb-upload_1:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:01:28,478 INFO    wandb-upload_3:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/requirements.txt
+2024-12-15 13:01:28,512 INFO    wandb-upload_0:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+2024-12-15 13:01:28,579 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:28,580 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,713 INFO    Thread-11 :273237 [sender.py:transition_state():613] send defer: 11
+2024-12-15 13:01:28,713 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,713 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 11
+2024-12-15 13:01:28,713 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 11
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [file_pusher.py:join():175] waiting for file pusher
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 12
+2024-12-15 13:01:28,714 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,714 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 12
+2024-12-15 13:01:28,714 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 12
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [file_stream.py:finish():601] file stream finish called
+2024-12-15 13:01:28,785 INFO    SenderThread:273237 [file_stream.py:finish():605] file stream finish is done
+2024-12-15 13:01:28,785 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 13
+2024-12-15 13:01:28,785 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,786 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 13
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 13
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 14
+2024-12-15 13:01:28,786 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,786 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 14
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send():378] send: final
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send():378] send: footer
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 14
+2024-12-15 13:01:28,787 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:28,787 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,788 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: internal_messages
+2024-12-15 13:01:28,789 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: server_info
+2024-12-15 13:01:28,789 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: server_info
+2024-12-15 13:01:28,829 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: get_summary
+2024-12-15 13:01:28,829 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: sampled_history
+2024-12-15 13:01:28,873 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: shutdown
+2024-12-15 13:01:28,873 INFO    HandlerThread:273237 [handler.py:finish():882] shutting down handler
+2024-12-15 13:01:29,789 INFO    WriterThread:273237 [datastore.py:close():296] close: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [sender.py:finish():1545] shutting down sender
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [file_pusher.py:join():175] waiting for file pusher
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
index 09ed09d9..0b9da94d 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
@@ -28,3 +28,36 @@ config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder',
 2024-12-15 12:32:56,626 INFO    MainThread:272367 [wandb_run.py:_redirect():2294] Wrapping output streams.
 2024-12-15 12:32:56,626 INFO    MainThread:272367 [wandb_run.py:_redirect():2319] Redirects installed.
 2024-12-15 12:32:56,627 INFO    MainThread:272367 [wandb_init.py:init():838] run started, returning control to user process
+2024-12-15 13:01:00,323 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:00,622 INFO    MainThread:272367 [wandb_init.py:_pause_backend():429] saved code: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:00,623 INFO    MainThread:272367 [wandb_init.py:_pause_backend():431] pausing backend
+2024-12-15 13:01:13,195 INFO    MainThread:272367 [wandb_init.py:_resume_backend():436] resuming backend
+2024-12-15 13:01:13,199 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:13,301 INFO    MainThread:272367 [wandb_init.py:_pause_backend():429] saved code: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:13,301 INFO    MainThread:272367 [wandb_init.py:_pause_backend():431] pausing backend
+2024-12-15 13:01:24,416 INFO    MainThread:272367 [wandb_init.py:_resume_backend():436] resuming backend
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Current SDK version is 0.17.0
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Configure stats pid to 272367
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from /home/cmdunham/.config/wandb/settings
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from /home/cmdunham/ChemicalDataGeneration/models/wandb/settings
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from environment variables: {'notebook_name': '/home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb'}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program': '<python with no main file>'}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Applying login settings: {}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:_log_setup():520] Logging user logs to /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_130124-zvr1gl37/logs/debug.log
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:_log_setup():521] Logging internal logs to /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_130124-zvr1gl37/logs/debug-internal.log
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():560] calling init triggers
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():567] wandb.init called with sweep_config: {}
+config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder', 'gpu': True, 'threads': 1, 'architecture': 'carl_encoder', 'optimizer': 'AdamW', 'loss': 'MSELoss', 'dataset': 'carls', 'target_embedding': 'ChemNet', 'batch_size': 16, 'epochs': 500, 'learning_rate': 1e-05}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():585] re-initializing run, found existing run on stack: 9rg0y8kk
+2024-12-15 13:01:24,487 INFO    MainThread:272367 [wandb_run.py:_finish():2103] finishing run catemerfeld/ims_encoder_decoder/9rg0y8kk
+2024-12-15 13:01:24,487 ERROR   MainThread:272367 [jupyter.py:save_history():437] Run pip install nbformat to save notebook history
+2024-12-15 13:01:24,487 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_init.py:_jupyter_teardown():447] saved code and history: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_init.py:_jupyter_teardown():448] cleaning up jupyter logic
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_atexit_cleanup():2343] got exitcode: 0
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_restore():2326] restore
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_restore():2332] restore done
+2024-12-15 13:01:29,875 INFO    MainThread:272367 [wandb_run.py:_footer_history_summary_info():3994] rendering history
+2024-12-15 13:01:29,875 INFO    MainThread:272367 [wandb_run.py:_footer_history_summary_info():4026] rendering summary
+2024-12-15 13:01:29,883 INFO    MainThread:272367 [wandb_run.py:_footer_sync_info():3953] logging synced files
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb b/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb
index 2adade58..703ef30d 100644
Binary files a/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb and b/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb differ
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml b/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
index 9bba9e25..2146a972 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
@@ -51,7 +51,13 @@ _wandb:
       - 5
       - 53
       - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
       3:
+      - 2
       - 16
       - 23
       4: 3.8.10
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/output.log b/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
index 69098ed0..041cb874 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
@@ -5,3 +5,161 @@ New run with hyperparameters:
 batch_size  :  64
 epochs  :  500
 learning_rate  :  1e-05
+Saved best model at epoch 1
+Saved best model at epoch 3
+Saved best model at epoch 5
+Saved best model at epoch 6
+Saved best model at epoch 10
+Epoch[10/500]:
+   Training loss: 6.062117196524913e-05
+   Validation loss: 2.5157226914506485e-05
+-------------------------------------------
+Saved best model at epoch 16
+Epoch[20/500]:
+   Training loss: 3.836389096422698e-05
+   Validation loss: 3.4220929445914785e-05
+-------------------------------------------
+Epoch 00022: reducing learning rate of group 0 to 1.0000e-06.
+Saved best model at epoch 23
+Saved best model at epoch 25
+Saved best model at epoch 26
+Saved best model at epoch 28
+Saved best model at epoch 30
+Epoch[30/500]:
+   Training loss: 3.855743158063026e-06
+   Validation loss: 8.046485016957117e-06
+-------------------------------------------
+Saved best model at epoch 31
+Saved best model at epoch 33
+Saved best model at epoch 35
+Saved best model at epoch 36
+Saved best model at epoch 38
+Saved best model at epoch 39
+Epoch[40/500]:
+   Training loss: 2.919524466804444e-06
+   Validation loss: 7.174230290925792e-06
+-------------------------------------------
+Saved best model at epoch 44
+Saved best model at epoch 50
+Epoch[50/500]:
+   Training loss: 2.4900585302915096e-06
+   Validation loss: 6.865450313225437e-06
+-------------------------------------------
+Saved best model at epoch 51
+Saved best model at epoch 52
+Saved best model at epoch 56
+Saved best model at epoch 57
+Epoch[60/500]:
+   Training loss: 1.988277059460727e-06
+   Validation loss: 6.922447922581916e-06
+-------------------------------------------
+Saved best model at epoch 62
+Saved best model at epoch 66
+Epoch[70/500]:
+   Training loss: 1.7999362886212595e-06
+   Validation loss: 6.703472853398182e-06
+-------------------------------------------
+Epoch 00072: reducing learning rate of group 0 to 1.0000e-07.
+Saved best model at epoch 73
+Saved best model at epoch 74
+Saved best model at epoch 75
+Saved best model at epoch 76
+Saved best model at epoch 77
+Epoch[80/500]:
+   Training loss: 1.4018745428183461e-06
+   Validation loss: 6.301226249601113e-06
+-------------------------------------------
+Saved best model at epoch 81
+Saved best model at epoch 86
+Saved best model at epoch 88
+Epoch[90/500]:
+   Training loss: 1.3755189488438296e-06
+   Validation loss: 6.26250037320687e-06
+-------------------------------------------
+Saved best model at epoch 94
+Saved best model at epoch 97
+Epoch[100/500]:
+   Training loss: 1.357571042490301e-06
+   Validation loss: 6.241341628034666e-06
+-------------------------------------------
+Epoch 00103: reducing learning rate of group 0 to 1.0000e-08.
+Saved best model at epoch 104
+Epoch[110/500]:
+   Training loss: 1.3124875471580616e-06
+   Validation loss: 6.216660300070231e-06
+-------------------------------------------
+Saved best model at epoch 114
+Saved best model at epoch 116
+Epoch[120/500]:
+   Training loss: 1.3100540886607512e-06
+   Validation loss: 6.215319378581918e-06
+-------------------------------------------
+Saved best model at epoch 122
+Saved best model at epoch 127
+Epoch[130/500]:
+   Training loss: 1.3081989530715537e-06
+   Validation loss: 6.213808371677237e-06
+-------------------------------------------
+Saved best model at epoch 135
+Saved best model at epoch 138
+Epoch[140/500]:
+   Training loss: 1.306183789149586e-06
+   Validation loss: 6.213237135927134e-06
+-------------------------------------------
+Saved best model at epoch 143
+Saved best model at epoch 144
+Epoch[150/500]:
+   Training loss: 1.3043894720132094e-06
+   Validation loss: 6.21092617688571e-06
+-------------------------------------------
+Saved best model at epoch 151
+Saved best model at epoch 152
+Saved best model at epoch 159
+Epoch[160/500]:
+   Training loss: 1.3023760058408425e-06
+   Validation loss: 6.211286370383594e-06
+-------------------------------------------
+Saved best model at epoch 162
+Saved best model at epoch 163
+Saved best model at epoch 169
+Epoch[170/500]:
+   Training loss: 1.3006324228045428e-06
+   Validation loss: 6.2069493762839155e-06
+-------------------------------------------
+Saved best model at epoch 175
+Saved best model at epoch 178
+Saved best model at epoch 179
+Epoch[180/500]:
+   Training loss: 1.2989472866717774e-06
+   Validation loss: 6.204989705647433e-06
+-------------------------------------------
+Validation loss has not improved in 10 epochs. Stopping training at epoch 189.
+-------------------------------------------
+-------------------------------------------
+Dataset:  IMS
+Target Embeddings:  ChemNet
+-------------------------------------------
+-------------------------------------------
+Encoder(
+  (encoder): Sequential(
+    (0): Linear(in_features=1676, out_features=1548, bias=True)
+    (1): LeakyReLU(negative_slope=0.01, inplace=True)
+    (2): Linear(in_features=1548, out_features=1420, bias=True)
+    (3): LeakyReLU(negative_slope=0.01, inplace=True)
+    (4): Linear(in_features=1420, out_features=1292, bias=True)
+    (5): LeakyReLU(negative_slope=0.01, inplace=True)
+    (6): Linear(in_features=1292, out_features=1164, bias=True)
+    (7): LeakyReLU(negative_slope=0.01, inplace=True)
+    (8): Linear(in_features=1164, out_features=1036, bias=True)
+    (9): LeakyReLU(negative_slope=0.01, inplace=True)
+    (10): Linear(in_features=1036, out_features=908, bias=True)
+    (11): LeakyReLU(negative_slope=0.01, inplace=True)
+    (12): Linear(in_features=908, out_features=780, bias=True)
+    (13): LeakyReLU(negative_slope=0.01, inplace=True)
+    (14): Linear(in_features=780, out_features=652, bias=True)
+    (15): LeakyReLU(negative_slope=0.01, inplace=True)
+    (16): Linear(in_features=652, out_features=512, bias=True)
+  )
+)
+-------------------------------------------
+-------------------------------------------
\ No newline at end of file
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json b/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
index e7e0fc30..72251430 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
@@ -1 +1 @@
-{"Encoder Training Loss": "2.79e-04", "Encoder Validation Loss": "4.53e-04", "_timestamp": 1734285595.8409977, "_runtime": 15.32132363319397, "_step": 1}
\ No newline at end of file
+{"Encoder Training Loss": "1.30e-06", "Encoder Validation Loss": "6.20e-06", "_timestamp": 1734286923.4541435, "_runtime": 1342.934469461441, "_step": 192, "Early Stopping Ecoch": 189, "Learning Rate at Final Epoch": 1.0000000000000004e-08, "PCA of Predicted Chemical Embeddings": {"_type": "image-file", "sha256": "5b0f98947828b919538e3f5a7593fe83e437daf535cde2b46dd8db90f1c7d07c", "size": 159523, "path": "media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png", "format": "png", "width": 2400, "height": 1800}, "_wandb": {"runtime": 1343}}
\ No newline at end of file
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
index 028a4811..73e42de6 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
@@ -62,3 +62,1654 @@
 2024-12-15 12:59:57,093 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
 2024-12-15 12:59:57,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
 2024-12-15 12:59:57,218 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:02,219 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:02,791 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:02,792 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:02,792 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:02,793 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:02,875 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:04,876 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:07,794 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:09,590 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:09,590 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:09,590 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:09,591 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:09,877 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:12,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:12,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:13,245 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:13,878 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:00:16,566 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:16,566 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:16,566 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:16,567 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:16,879 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:18,568 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:18,879 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:23,517 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:23,518 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:23,518 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:23,519 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:23,880 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:24,519 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:24,881 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:27,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:27,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:30,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:30,304 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:30,305 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:30,305 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:30,306 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:30,882 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:35,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:37,129 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:37,130 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:37,130 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:37,131 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:37,884 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:40,946 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:00:40,947 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:00:40,947 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:42,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:42,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:43,923 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:43,924 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:43,924 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:43,924 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:44,885 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:46,925 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:50,936 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:50,937 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:50,937 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:50,939 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:51,886 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:51,939 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:52,886 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:56,940 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:57,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:57,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:57,734 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:57,735 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:57,735 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:57,735 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:57,887 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:02,736 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:04,506 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:04,507 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:04,508 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:04,510 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:04,890 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:08,510 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:10,948 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:01:11,322 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:11,323 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:11,323 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:11,323 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:11,891 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:12,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:12,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:14,190 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:18,111 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:18,112 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:18,112 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:18,114 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:18,894 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:20,115 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,898 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:24,899 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:24,899 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:24,899 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:25,896 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:25,900 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:27,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:27,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:31,247 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:31,842 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:31,843 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:31,843 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:31,844 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:31,897 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:34,898 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:01:36,845 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:38,642 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:38,642 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:38,642 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:38,643 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:38,899 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:40,948 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:01:41,949 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:42,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:42,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:45,441 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:45,441 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:45,441 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:45,442 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:45,901 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:47,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:52,216 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:52,217 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:52,217 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:52,217 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:52,902 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:53,218 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:57,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:57,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:58,251 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:58,998 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:58,999 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:58,999 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:59,000 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:59,904 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:00,904 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:04,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:05,775 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:05,776 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:05,776 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:05,776 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:05,905 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:09,777 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:10,949 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:02:12,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:12,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:12,569 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:12,570 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:12,570 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:12,570 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:12,906 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:14,907 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:15,571 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:19,560 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:19,561 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:19,561 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:19,561 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:19,908 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:20,908 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:21,561 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:26,343 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:26,343 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:26,343 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:26,344 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:26,910 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:27,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:27,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:27,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:32,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:33,310 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:33,311 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:33,311 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:33,311 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:33,911 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:34,911 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:37,312 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:40,253 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:40,254 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:40,254 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:40,255 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:40,913 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:40,949 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:02:42,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:42,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:42,913 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:43,252 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:47,047 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:47,048 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:47,048 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:47,048 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:47,914 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:49,049 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:53,999 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:53,999 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:53,999 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:54,001 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:54,915 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:55,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:56,916 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:57,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:57,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:00,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:00,794 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:00,794 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:00,794 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:00,795 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:00,916 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:05,795 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:07,730 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:07,731 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:07,731 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:07,733 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:07,918 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:08,918 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:10,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:03:10,951 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:12,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:12,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:14,663 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:14,664 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:14,664 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:14,664 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:14,919 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:16,665 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:16,920 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:21,410 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:21,411 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:21,411 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:21,412 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:21,921 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:22,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:27,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:27,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:28,203 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:28,389 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:28,389 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:28,390 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:28,390 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:28,922 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:30,923 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:33,391 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:35,146 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:35,147 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:35,147 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:35,148 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:35,924 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:39,149 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:40,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:03:42,074 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:42,074 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:42,075 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:42,075 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:42,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:42,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:42,925 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:44,240 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:44,926 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:49,089 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:49,090 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:49,090 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:49,091 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:49,927 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:50,091 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:50,927 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:55,092 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:55,827 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:55,827 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:55,827 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:55,828 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:55,928 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:57,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:57,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:00,170 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:02,845 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:02,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:02,846 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:02,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:02,929 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:04,930 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:05,847 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:09,776 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:09,777 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:09,777 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:09,777 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:09,931 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:10,931 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:10,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:04:10,952 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:12,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:12,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:16,173 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:16,678 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:16,678 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:16,678 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:16,680 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:16,932 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:18,932 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:21,722 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:23,502 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:23,503 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:23,503 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:23,503 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:23,933 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:27,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:27,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:27,260 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:30,297 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:30,297 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:30,297 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:30,298 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:30,935 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:32,299 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:37,087 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:37,088 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:37,088 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:37,088 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:37,936 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:38,089 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:40,952 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:04:42,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:42,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:43,248 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:44,165 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:44,165 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:44,165 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:44,166 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:44,938 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:46,938 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:49,166 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:50,975 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:50,975 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:50,976 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:50,976 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:51,940 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:54,976 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:57,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:57,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:57,752 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:57,753 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:57,753 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:57,753 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:57,941 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:00,754 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:04,527 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:04,527 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:04,527 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:04,528 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:04,943 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:06,529 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:10,953 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:05:11,304 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:11,305 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:11,305 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:11,305 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:11,944 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:12,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:12,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:12,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:17,225 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:18,083 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:18,083 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:18,084 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:18,084 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:18,946 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:23,084 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:25,022 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:25,023 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:25,023 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:25,024 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:25,947 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:26,947 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:27,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:27,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:28,226 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:32,017 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:32,017 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:32,018 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:32,018 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:32,949 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:32,949 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:34,018 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:38,922 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:38,922 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:38,922 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:38,924 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:38,950 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:39,924 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:40,950 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:40,953 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:05:42,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:42,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:45,215 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:45,729 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:45,730 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:45,730 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:45,730 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:45,951 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:50,731 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:52,497 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:52,498 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:52,498 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:52,498 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:52,953 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:56,499 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:57,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:59,283 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:59,283 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:59,284 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:59,284 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:59,954 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:02,284 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:06,239 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:06,240 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:06,241 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:06,241 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:06,956 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:08,242 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:08,956 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:10,954 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:06:12,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:12,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:13,181 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:13,181 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:13,181 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:13,182 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:13,958 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:14,182 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:14,958 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:19,183 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:19,983 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:19,983 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:19,984 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:19,984 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:20,959 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:24,985 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:26,800 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:26,800 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:26,800 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:26,801 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:26,961 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:27,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:27,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:30,241 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:33,575 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:33,576 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:33,576 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:33,576 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:33,963 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:34,963 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:35,618 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:40,353 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:40,354 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:40,355 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:40,355 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:40,955 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:06:40,957 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:40,964 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:42,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:42,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:46,168 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:47,369 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:47,369 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:47,370 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:47,370 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:47,966 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:48,966 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:51,370 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:54,116 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:54,116 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:54,116 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:54,117 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:54,968 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:57,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:00,928 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:00,929 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:00,929 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:00,929 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:00,969 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:02,930 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:07,723 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:07,723 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:07,724 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:07,724 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:07,971 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:08,724 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:10,955 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:07:12,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:12,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:14,215 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:14,729 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:14,729 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:14,729 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:14,730 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:14,972 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:16,973 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:19,731 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:21,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:21,487 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:21,487 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:21,487 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:21,974 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:25,488 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:27,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:27,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:28,269 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:28,269 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:28,269 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:28,270 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:28,975 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:31,270 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:35,026 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:35,027 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:35,027 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:35,027 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:35,978 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:37,028 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:40,956 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:07:41,793 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:41,794 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:41,794 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:41,794 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:41,979 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:42,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:42,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:42,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:42,979 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:47,167 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:48,594 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:48,594 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:48,595 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:48,595 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:48,980 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:52,595 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:55,421 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:55,422 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:55,422 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:55,422 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:55,982 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:56,982 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:57,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:58,184 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:02,417 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:02,418 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:02,418 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:02,418 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:02,983 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:03,419 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:04,984 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:08,419 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:09,282 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:09,282 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:09,283 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:09,283 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:09,985 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:10,957 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:08:10,985 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:12,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:12,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:14,195 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:16,201 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:16,201 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:16,201 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:16,201 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:16,987 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:16,987 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:19,202 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:23,170 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:23,170 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:23,170 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:23,170 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:23,988 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:24,989 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:25,171 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:27,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:27,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:30,119 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:30,119 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:30,119 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:30,120 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:30,990 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:30,990 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:31,120 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:36,121 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:36,916 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:36,917 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:36,917 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:36,917 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:36,991 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:40,957 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:08:41,957 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:42,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:42,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:43,717 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:43,718 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:43,718 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:43,718 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:43,993 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:47,719 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:50,513 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:50,514 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:50,514 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:50,514 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:50,994 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:52,995 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:53,515 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:57,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:57,517 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:57,518 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:57,518 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:57,518 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:57,996 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:58,518 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:58,997 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:03,519 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:04,258 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:04,258 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:04,259 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:04,259 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:04,998 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:09,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:10,958 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:09:11,058 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:11,058 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:11,058 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:11,059 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:12,000 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:12,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:15,240 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:17,838 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:17,838 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:17,838 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:17,839 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:18,001 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:20,839 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:24,644 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:24,645 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:24,645 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:24,645 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:25,003 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:26,645 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:27,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:27,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:31,619 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:31,620 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:31,620 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:31,620 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:32,005 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:32,621 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:33,005 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:37,622 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:38,424 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:38,431 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:38,431 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:38,431 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:39,006 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:40,958 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:09:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:42,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:43,216 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:45,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:45,379 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:45,379 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:45,379 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:46,008 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:47,008 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:48,380 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:52,152 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:52,153 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:52,153 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:52,153 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:53,009 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:54,154 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:57,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:58,966 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:58,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:58,967 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:58,967 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:59,011 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:59,967 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:01,011 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:04,969 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:05,715 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:05,715 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:05,715 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:05,716 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:06,012 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:10,716 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:10,959 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:10:12,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:12,591 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:12,592 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:12,592 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:12,592 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:13,014 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:16,593 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:19,377 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:19,377 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:19,377 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:19,378 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:20,015 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:22,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:26,326 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:26,326 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:26,327 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:26,327 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:27,017 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:27,018 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:27,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:27,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:28,232 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:33,142 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:33,143 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:33,143 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:33,143 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:34,019 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:34,144 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:39,144 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:39,953 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:39,954 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:39,954 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:39,954 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:40,020 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:40,959 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:10:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:42,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:44,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:46,981 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:46,981 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:46,981 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:46,982 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:47,022 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:49,022 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:49,982 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:53,742 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:53,742 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:53,742 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:53,743 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:54,023 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:55,743 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:57,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:00,563 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:00,563 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:00,563 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:00,563 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:01,025 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:01,564 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:06,564 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:07,372 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:07,373 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:07,373 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:07,373 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:08,027 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:09,027 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:10,960 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:11:11,960 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:12,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:14,184 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:14,184 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:14,184 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:14,185 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:15,029 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:17,185 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:20,967 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:20,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:20,967 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:20,967 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:21,030 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:22,968 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:27,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:27,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:27,825 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:27,826 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:27,826 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:27,826 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:28,032 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:28,826 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:29,032 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:33,827 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:34,762 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:34,763 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:34,763 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:34,763 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:35,034 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:37,035 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:39,764 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:40,960 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:11:41,566 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:41,566 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:41,567 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:41,567 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:42,036 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:42,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:45,229 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:48,399 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:48,399 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:48,399 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:48,400 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:49,037 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:50,400 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:55,249 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:55,249 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:55,249 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:55,250 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:56,039 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:56,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:57,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:57,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:02,072 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:02,072 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:02,072 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:02,073 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:02,073 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:03,041 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:07,074 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:08,804 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:08,805 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:08,805 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:08,805 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:09,042 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:10,961 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:12:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:15,656 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:15,656 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:15,656 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:15,656 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:16,044 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:17,044 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:12:17,698 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:22,446 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:22,446 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:22,446 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:22,447 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:23,046 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:23,447 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:27,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:27,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:29,206 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:29,210 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:29,211 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:29,211 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:29,211 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:30,047 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:34,212 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:36,011 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:36,012 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:36,012 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:36,012 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:36,049 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:40,013 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:40,961 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:12:42,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:43,017 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:43,017 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:43,017 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:43,018 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:43,050 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:45,018 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:45,051 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:12:49,789 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:49,789 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:49,789 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:49,790 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:50,052 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:50,790 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:55,790 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:56,846 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:56,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:56,846 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:56,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:57,054 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:57,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:57,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:59,055 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:01,260 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:03,625 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:03,626 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:03,626 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:03,626 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:04,056 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:06,627 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:10,462 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:10,463 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:10,463 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:10,463 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:10,962 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:13:11,058 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:11,963 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:17,255 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:17,258 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:17,258 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:17,258 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:17,258 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:18,059 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:22,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:24,048 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:24,048 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:24,049 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:24,049 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:24,060 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:25,060 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:27,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:27,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:27,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:30,846 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:30,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:30,847 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:30,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:31,062 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:32,847 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:37,798 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:37,799 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:37,799 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:37,799 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:38,063 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:38,800 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:39,063 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:40,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:13:42,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:44,180 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:44,599 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:44,599 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:44,599 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:44,599 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:45,065 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:49,600 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:51,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:51,412 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:51,412 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:51,413 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:52,066 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:55,413 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:57,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:57,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:58,212 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:58,212 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:58,212 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:58,212 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:59,068 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:01,213 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:05,004 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:05,005 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:05,005 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:05,005 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:05,069 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:07,006 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:10,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:14:11,915 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:11,916 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:11,916 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:11,917 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:12,071 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:14,071 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:14:17,262 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:18,711 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:18,712 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:18,712 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:18,712 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:19,072 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:22,713 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:25,529 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:25,530 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:25,530 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:25,530 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:26,074 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:27,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:27,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:28,198 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:32,444 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:32,445 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:32,445 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:32,445 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:33,075 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:33,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:34,075 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:14:38,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:39,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:39,251 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:39,251 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:39,252 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:40,077 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:40,964 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:14:42,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:44,175 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:46,066 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:46,067 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:46,067 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:46,067 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:46,078 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:50,068 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:52,880 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:52,881 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:52,881 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:52,881 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:53,079 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:55,882 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:57,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:57,103 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:59,676 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:59,677 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:59,677 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:59,677 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:00,081 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:01,678 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:06,636 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:06,636 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:06,636 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:06,637 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:07,082 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:07,637 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:08,083 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:10,964 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:15:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:13,237 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:13,415 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:13,416 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:13,416 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:13,416 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:14,084 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:18,417 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:20,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:20,192 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:20,192 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:20,193 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:21,085 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:24,193 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:27,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:27,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:27,306 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:27,306 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:27,306 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:28,087 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:29,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:30,087 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:33,945 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:33,946 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:33,946 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:33,946 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:34,088 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:34,946 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:39,947 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:40,835 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:40,836 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:40,836 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:40,837 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:40,965 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:15:41,090 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:42,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:42,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:44,090 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:45,315 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:47,614 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:47,615 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:47,615 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:47,615 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:48,091 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:50,616 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:54,408 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:54,408 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:54,408 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:54,409 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:55,093 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:56,409 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:57,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:57,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:01,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:01,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:01,443 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:01,444 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:01,444 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:02,094 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:04,094 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:06,444 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:08,456 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:08,456 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:08,457 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:08,457 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:09,095 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:10,096 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:10,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:16:11,966 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:12,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:12,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:15,285 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:15,286 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:15,286 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:15,286 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:16,097 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:17,287 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:22,117 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:22,118 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:22,118 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:22,118 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:23,098 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:23,118 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:27,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:28,246 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:28,929 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:28,930 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:28,930 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:28,931 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:29,100 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:33,931 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:35,750 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:35,750 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:35,751 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:35,751 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:36,101 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:39,752 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:40,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:16:42,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:42,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:42,576 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:42,577 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:42,577 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:42,577 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:43,102 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:45,578 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:49,359 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:49,360 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:49,360 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:49,361 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:50,104 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:51,361 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:52,104 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:56,337 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:56,338 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:56,338 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:56,339 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:57,106 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:57,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:57,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:57,284 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:58,106 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:02,285 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:03,411 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:03,411 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:03,411 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:03,412 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:04,107 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:06,108 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:07,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:10,208 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:10,209 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:10,209 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:10,209 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:10,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:17:11,109 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:12,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:12,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:13,297 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:17,000 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:17,000 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:17,000 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:17,000 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:17,110 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:19,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:23,802 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:23,803 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:23,803 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:23,803 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:24,111 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:24,803 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:30,262 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:30,597 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:30,598 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:30,598 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:30,598 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:31,113 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:35,599 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:37,369 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:37,370 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:37,370 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:37,370 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:38,114 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:40,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:17:40,969 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:42,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:42,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:44,181 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:44,181 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:44,181 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:44,182 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:45,117 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:46,182 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:51,146 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:51,147 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:51,147 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:51,147 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:52,118 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:52,148 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:54,118 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:57,148 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:57,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:57,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:57,915 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:57,916 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:57,916 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:57,916 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:58,119 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:00,119 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:02,917 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:04,735 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:04,736 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:04,736 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:04,736 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:05,120 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:08,737 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:10,968 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:18:11,719 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:11,719 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:11,719 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:11,720 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:12,122 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:12,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:12,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:14,122 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:14,224 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:18,690 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:18,691 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:18,691 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:18,691 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:19,123 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:19,692 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:20,123 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:24,693 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:25,494 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:25,494 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:25,494 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:25,495 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:26,125 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:27,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:30,271 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:32,279 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:32,280 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:32,280 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:32,280 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:33,126 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:35,281 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:39,052 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:39,052 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:39,052 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:39,053 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:39,128 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:40,968 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:18:40,970 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:42,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:42,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:45,835 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:45,835 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:45,836 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:45,836 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:46,129 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:46,836 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:51,836 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:52,619 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:52,619 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:52,619 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:52,620 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:53,130 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:57,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:57,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:57,274 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:59,570 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:59,571 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:59,571 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:59,571 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:00,132 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:02,133 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:02,572 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:06,344 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:06,344 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:06,345 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:06,345 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:07,134 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:08,134 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:08,345 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:10,969 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:19:12,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:12,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:13,120 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:13,121 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:13,121 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:13,121 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:13,135 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:14,122 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:19,122 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:19,900 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:19,900 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:19,901 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:19,901 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:20,137 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:24,901 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:26,665 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:26,665 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:26,666 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:26,666 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:27,138 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:27,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:30,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:33,591 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:33,592 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:33,592 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:33,592 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:34,140 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:35,592 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:40,583 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:40,583 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:40,583 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:40,584 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:40,970 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:19:40,972 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:41,142 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:42,142 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:42,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:42,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:46,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:47,396 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:47,396 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:47,396 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:47,396 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:48,143 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:51,397 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:54,171 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:54,172 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:54,172 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:54,172 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:55,145 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:57,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:57,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:57,252 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:01,125 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:01,125 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:01,126 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:01,126 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:01,146 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:02,147 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:03,126 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:07,962 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:07,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:07,963 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:07,963 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:08,148 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:08,964 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:10,149 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:10,970 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:20:12,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:12,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:14,325 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:14,688 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:14,689 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:14,689 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:14,690 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:15,150 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:16,150 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:19,734 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:21,452 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:21,452 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:21,452 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:21,453 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:22,151 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:25,453 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:27,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:27,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:28,172 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:28,173 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:28,173 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:28,174 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:29,153 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:31,174 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:35,062 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:35,062 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:35,062 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:35,063 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:35,155 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:37,063 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:40,971 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:20:41,848 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:41,849 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:41,849 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:41,849 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:42,156 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:42,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:42,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:42,245 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:47,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:48,637 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:48,637 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:48,637 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:48,639 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:49,158 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:52,639 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:55,429 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:55,429 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:55,430 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:55,430 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:56,159 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:57,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:57,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:58,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:02,222 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:02,223 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:02,223 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:02,223 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:03,161 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:04,224 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:09,011 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:09,011 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:09,011 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:09,012 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:09,162 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:10,012 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:10,971 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:21:12,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:12,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:15,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:15,756 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,756 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,756 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,757 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:15,797 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,797 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,798 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,798 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:16,164 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:18,164 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:21:20,799 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:25,799 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:27,161 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:27,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:31,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:36,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:40,972 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:21:41,973 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:42,168 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:42,169 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:47,330 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:50,678 DEBUG   SenderThread:272628 [sender.py:send():378] send: files
+2024-12-15 13:21:50,679 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png with policy now
+2024-12-15 13:21:50,721 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:50,721 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:50,722 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:50,722 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:50,967 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/jydm7jsu-media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images
+2024-12-15 13:21:51,456 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/nq6t8k9q-media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:52,722 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:57,214 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:57,215 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:58,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:03,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:03,454 DEBUG   SenderThread:272628 [sender.py:send():378] send: files
+2024-12-15 13:22:03,454 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png with policy now
+2024-12-15 13:22:03,497 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:22:03,497 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:22:03,497 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:22:03,498 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:03,680 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/qke0jba1-media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:04,104 DEBUG   SenderThread:272628 [sender.py:send():378] send: telemetry
+2024-12-15 13:22:04,177 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:04,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:04,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images
+2024-12-15 13:22:04,235 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:22:04,236 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:22:04,455 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/tlljv2ee-media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:05,237 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:06,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:09,160 INFO    wandb-upload_0:272628 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpaoijr38g
+2024-12-15 13:22:09,683 INFO    SenderThread:272628 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzY0OTgwNQ==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMzMyOTE5OQ==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU1ODI1OA==', 'versionIndex': 6}}}
+2024-12-15 13:22:09,684 DEBUG   SenderThread:272628 [sender.py:send():378] send: exit
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:send_exit():585] handling exit code: 0
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:send_exit():587] handling runtime: 1343
+2024-12-15 13:22:09,684 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:09,685 INFO    SenderThread:272628 [sender.py:send_exit():593] send defer
+2024-12-15 13:22:09,685 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:09,685 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,685 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 0
+2024-12-15 13:22:09,686 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 0
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 1
+2024-12-15 13:22:09,686 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 1
+2024-12-15 13:22:09,686 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 1
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 2
+2024-12-15 13:22:09,686 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 2
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:22:09,686 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:22:09,687 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:22:09,688 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:22:09,688 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:22:09,781 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,781 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 2
+2024-12-15 13:22:09,781 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 3
+2024-12-15 13:22:09,781 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 3
+2024-12-15 13:22:09,782 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:22:09,782 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,782 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 3
+2024-12-15 13:22:09,782 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 4
+2024-12-15 13:22:09,782 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,782 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 4
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 4
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 5
+2024-12-15 13:22:09,783 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,783 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 5
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send():378] send: summary
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 5
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 6
+2024-12-15 13:22:09,784 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,784 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 6
+2024-12-15 13:22:09,784 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,784 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 6
+2024-12-15 13:22:09,787 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:09,861 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 7
+2024-12-15 13:22:09,861 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,861 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 7
+2024-12-15 13:22:09,862 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,862 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 7
+2024-12-15 13:22:10,180 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:22:10,180 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:10,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: keepalive
+2024-12-15 13:22:10,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:11,583 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 8
+2024-12-15 13:22:11,583 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:11,584 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:11,584 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 8
+2024-12-15 13:22:11,584 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:11,584 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 8
+2024-12-15 13:22:11,584 INFO    SenderThread:272628 [job_builder.py:build():432] Attempting to build job artifact
+2024-12-15 13:22:11,585 INFO    SenderThread:272628 [job_builder.py:_get_source_type():565] is repo sourced job
+2024-12-15 13:22:11,585 INFO    SenderThread:272628 [job_builder.py:_get_program_relpath():583] run is notebook based run
+2024-12-15 13:22:11,586 INFO    SenderThread:272628 [job_builder.py:build():541] adding wandb-job metadata file
+2024-12-15 13:22:11,589 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 9
+2024-12-15 13:22:11,590 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:11,590 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 9
+2024-12-15 13:22:11,590 DEBUG   SenderThread:272628 [sender.py:send():378] send: artifact
+2024-12-15 13:22:12,032 INFO    wandb-upload_0:272628 [upload_job.py:push():85] Skipped uploading /tmp/tmpvedrit2e/wandb-job.json
+2024-12-15 13:22:12,035 INFO    wandb-upload_1:272628 [upload_job.py:push():85] Skipped uploading /home/cmdunham/.local/share/wandb/artifacts/staging/tmpfeoa8t65
+2024-12-15 13:22:12,181 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:12,242 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:12,281 INFO    wandb-upload_2:272628 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpe6to8c_p
+2024-12-15 13:22:12,910 INFO    SenderThread:272628 [sender.py:send_artifact():1467] sent artifact job-https___github.com_CateMerfeld_ChemicalDataGeneration.git__home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzY0OTkxMw==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjQ4MDgzNzAwNA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU1ODI4Mw==', 'versionIndex': 60}}}
+2024-12-15 13:22:12,911 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:12,911 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 9
+2024-12-15 13:22:12,911 INFO    SenderThread:272628 [dir_watcher.py:finish():358] shutting down directory watcher
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():388] scan: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log output.log
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-metadata.json wandb-metadata.json
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json wandb-summary.json
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml config.yaml
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/requirements.txt requirements.txt
+2024-12-15 13:22:13,184 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/diff.patch diff.patch
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 10
+2024-12-15 13:22:13,190 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,194 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 10
+2024-12-15 13:22:13,195 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,195 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 10
+2024-12-15 13:22:13,195 INFO    SenderThread:272628 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:22:13,243 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:13,243 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,399 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:13,457 INFO    wandb-upload_3:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/requirements.txt
+2024-12-15 13:22:13,462 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:13,475 INFO    wandb-upload_2:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:22:13,675 INFO    Thread-39 :272628 [sender.py:transition_state():613] send defer: 11
+2024-12-15 13:22:13,676 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,676 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 11
+2024-12-15 13:22:13,676 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,676 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 11
+2024-12-15 13:22:13,676 INFO    SenderThread:272628 [file_pusher.py:join():175] waiting for file pusher
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 12
+2024-12-15 13:22:13,677 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,677 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 12
+2024-12-15 13:22:13,677 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 12
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [file_stream.py:finish():601] file stream finish called
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [file_stream.py:finish():605] file stream finish is done
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 13
+2024-12-15 13:22:13,769 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,769 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 13
+2024-12-15 13:22:13,769 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 13
+2024-12-15 13:22:13,770 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 14
+2024-12-15 13:22:13,770 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send():378] send: final
+2024-12-15 13:22:13,770 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 14
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send():378] send: footer
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,770 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 14
+2024-12-15 13:22:13,771 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:13,771 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,773 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: internal_messages
+2024-12-15 13:22:13,774 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: server_info
+2024-12-15 13:22:13,774 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: server_info
+2024-12-15 13:22:13,817 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: get_summary
+2024-12-15 13:22:13,817 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: sampled_history
+2024-12-15 13:22:13,861 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: shutdown
+2024-12-15 13:22:13,862 INFO    HandlerThread:272628 [handler.py:finish():882] shutting down handler
+2024-12-15 13:22:14,774 INFO    WriterThread:272628 [datastore.py:close():296] close: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [sender.py:finish():1545] shutting down sender
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [file_pusher.py:join():175] waiting for file pusher
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
index 7af73bdc..85363cb4 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
@@ -28,3 +28,14 @@ config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder',
 2024-12-15 12:59:42,093 INFO    MainThread:272364 [wandb_run.py:_redirect():2294] Wrapping output streams.
 2024-12-15 12:59:42,093 INFO    MainThread:272364 [wandb_run.py:_redirect():2319] Redirects installed.
 2024-12-15 12:59:42,094 INFO    MainThread:272364 [wandb_init.py:init():838] run started, returning control to user process
+2024-12-15 13:22:04,104 INFO    MainThread:272364 [wandb_run.py:_finish():2103] finishing run catemerfeld/ims_encoder_decoder/dcv1gljq
+2024-12-15 13:22:04,104 ERROR   MainThread:272364 [jupyter.py:save_history():437] Run pip install nbformat to save notebook history
+2024-12-15 13:22:04,104 INFO    MainThread:272364 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/ims_encoder.ipynb
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_init.py:_jupyter_teardown():447] saved code and history: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb>
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_init.py:_jupyter_teardown():448] cleaning up jupyter logic
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_run.py:_atexit_cleanup():2343] got exitcode: 0
+2024-12-15 13:22:04,237 INFO    MainThread:272364 [wandb_run.py:_restore():2326] restore
+2024-12-15 13:22:04,237 INFO    MainThread:272364 [wandb_run.py:_restore():2332] restore done
+2024-12-15 13:22:14,863 INFO    MainThread:272364 [wandb_run.py:_footer_history_summary_info():3994] rendering history
+2024-12-15 13:22:14,864 INFO    MainThread:272364 [wandb_run.py:_footer_history_summary_info():4026] rendering summary
+2024-12-15 13:22:14,871 INFO    MainThread:272364 [wandb_run.py:_footer_sync_info():3953] logging synced files
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb b/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb
index e69de29b..9d615722 100644
Binary files a/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb and b/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb differ
