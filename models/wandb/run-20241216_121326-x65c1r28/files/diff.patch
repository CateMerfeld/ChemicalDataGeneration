diff --git a/data_preprocessing/ims_data_eda.ipynb b/data_preprocessing/ims_data_eda.ipynb
index 5082abc5..c1716932 100644
--- a/data_preprocessing/ims_data_eda.ipynb
+++ b/data_preprocessing/ims_data_eda.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 7,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -947,11 +947,58 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [],
    "source": [
-    "ims_spectra_data = spectra.drop(columns=['index', 'Label'])"
+    "ims_spectra_data = spectra.drop(columns=['index', 'Label'])\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_data.csv'\n",
+    "train = pd.read_csv(file_path)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 33,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "iVBORw0KGgoAAAANSUhEUgAABW4AAAPeCAYAAACcLoNRAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzdeVhUZfsH8O+ZhVVB0QQXVNJcczeVNLdMUipLW0xTKs03U0utLH+vuaam5ZZaluZWmmWrqa97aiqiuaSimZnmCmoqhGyznN8fzDnMgWEYhlnODN/PdXEF55yZeQaI23M/93M/giiKIoiIiIiIiIiIiIhINTTeHgARERERERERERERKTFxS0RERERERERERKQyTNwSERERERERERERqQwTt0REREREREREREQqw8QtERERERERERERkcowcUtERERERERERESkMkzcEhEREREREREREakME7dEREREREREREREKsPELREREREREREREZHKMHFLREREREREREREpDJM3JJH7dy5E4IgyB/ly5dHZmZmsY/LyspCeHi44rE7d+4s9vkd+Rg5cmSRr/vHH3/gzTffRJs2bRAREQG9Xo/Q0FDUrl0bDz74IMaMGYMNGzY49B7sMRgMWLVqFZ544gnUrl0bISEh0Ov1qFSpEpo3b47+/ftj/vz5+OOPP0r1OuRfzGYzTp48ieXLl+OVV17Bfffdh8DAQLv/jxCRb2HctI1xk5yRmZmJ7777DkOHDsV9992HihUryr83sbGxmDhxIlJSUrw9TCJyEmOmbYyZ5IxTp05hwYIFSEhIQMuWLVGjRg0EBQUhNDQUd999N5555hn8+OOPEEXR20P1fyKRB/38888iAMXHqlWrin3cl19+WehxP//8s0PPX9zHa6+9ZvM1J06cKOp0Ooee46233nL6e/L777+L9957r8PjzcrKcvq11K5Tp04iALFTp07eHopPWL58ud3fFVv/jxCRb2HcLIxxMx/jpuN+++03sVy5csX+voSFhYlr1qzx9nCJyAmMmYUxZuZjzCyZ/v37O/Q706lTJ/HGjRveHq5f04HIS4KCgpCdnY3PP/8c/fr1s3vt559/rniMI4YOHYpXXnml2OsqV65c6Nh7772HiRMnAgDCw8Pxn//8B506dULVqlWRm5uLS5cuISkpCT/99BN+//13h8Zjyz///IOu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JUoBtbW1AIDc3NwOnx8+fPgAjiZ5ysvLO3w8MzOzy+f1q5terzfy2Pbt2wEAv//972Oa4Ud//fWvfwUA1NTUJOwzEBFR/2Pc1DBuEhFRPBg3NYybNBhxcTKiJBNCYM2aNQCACRMmdLiN1WodyCEljSx3fS2pu+ej6VeVTzjhBIwcObLLbceNGxf3fomIKLkYN1sxbhIRUXcYN1sxbtJgxMQtUZJ99NFHaGhoAACcdtppSR5N+igrKwMAnHvuubj55puTPBoiIkoUxs3+wbhJRJSeGDf7B+MmDRS2SiBKoqamJtx4440AgFNPPRVHHHHEgL23yWQCAASDwQF7z4F0xhlnAADefPNNCCGSPBoiIkoExs3+w7hJRJR+GDf7D+MmDRQmbomSQAiB//73v5g8eTK2bt2KkpISPPfccwM6hqFDhwIANm7cOKDvO1DOPfdcHHPMMVi5ciWuvPLKDvsKNTQ04Nlnn03bPyaIiNIF42b/Y9wkIkofjJv9j3GTBgpbJRD1s3/84x9YvHgxAMDn86G2tharV69GfX09AGD69Ol4/vnnMWzYsAEd1wUXXIC5c+fi1ltvxf/+9z8UFhZCkiT87Gc/w3HHHTegY+kPsizjnXfewVlnnYUXXngBb731FiZOnIjy8nL4/X5s374d69evRygUwhVXXNHhSqBERDTwGDeTg3GTiGhwYtxMDsZNGij8ySHqZ1988QW++OILAEBGRgYcDgcmTJiASZMm4aKLLsIxxxyTlHGdddZZeO655/DMM89g4cKFcLvdALTm6ukQSAGgtLQUX375JebNm4fXX38d33zzDVauXInc3FyUlpbil7/8Jc455xxYLJZkD5WIiMIYN5OHcZOIaPBh3Ewexk0aCJJgMw4iIiIiIiIiIiKilMIet0REREREREREREQpholbIiIiIiIiIiIiohTDxC0RERERERERERFRimHiloiIiIiIiIiIiCjFMHFLRERERERERERElGKYuCUiIiIiIiIiIiJKMUzcEhEREREREREREaUYJm6JiIiIiIiIiIiIUgwTt0REREREREREREQpholbIiIiIiIiIiIiohTDxC0RERERERERERFRimHiloiIiIiIiIiIiCjFMHFLRERERERERERElGKYuCUiIiIiIiIiIiJKMUzcEhEREREREREREaUYJm6JiIiIiIiIiIiIUgwT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4IM47LDD8Otf/xrBYLDX73X33XdjxYoVuPDCC2GxWGKea2xsxHvvvYdZs2Zh3Lhx+Prrr7vclyRJmD17dqfPX3nllZAkCQDaNX5/7733AAA//OEPYTabO92HwWDA1KlTAQDLly+Pee6DDz4AAIwYMaLLVScT6fjjj++2EXyiHX744Tj00EM7fG7ixImR+6eeeipyc3O73W779u29GsfSpUvx/PPPw2Aw4Nlnn4382xJRemPcZNzsi4M5bp5//vn4/vvv8dBDD+FHP/oRjjnmGBxzzDG46KKL8MYbb+C9996LrKh+4403orKyslfvQ0SpgzGTMbMvDtaY6XK5Ive9Xi9OPfVUfPDBBzjmmGNgNptRUFCAX/7yl/jggw8ibSnuuOMOCCF6/F7UPSZuKSVcfvnlAIB///vf8Hg88Hg8eOutt2Ke66m77roLQqsq7/Krs1/ENpsNt9xyCzZv3ozvv/8eL774Iq6//npMnjw58sspFArh0UcfxVVXXdWrMeqOOeYYvPnmm6ivr8fChQtx33334cILL0RBQUFkm61bt2L69OnYsGFDp/upqKhAfn5+p88XFBREPu/69esjj4dCIaxduxYA8Le//a3dKpttv/R/m+gTmkAgEBnbCSecMGBJxMMPP3xA3ida2z+womVnZ/d4u96s+Onz+XD11VdDCIHrr78+KceBiJKHcZNxs7cO1rgJaCtjd3Wcf/jDH+LOO+8EALjdbvzzn//s1fsQUWphzGTM7K2DNWa2TfI/8MADUBSl3XYnnHACfvSjHwEANm3aFPPvTonDxC2lhB/96Eew2WxwOp1499138c4776C5uRkZGRmRXwTJNHLkSFx22WV47LHHsGLFCuzevRs///nPI8+/+OKL+Pzzz/v8PlarFSeddBJuv/12vPnmmzhw4AD+85//oKysDIB25euGG27o9PWFhYXdvkdRUREAoL6+PvJYfX19r67kut3umH3oV9hKSkp6vK/eysnJGbD30tlstk6fi26EH+92oVCox2O49957sXnzZpSVleEPf/hDj19PRIMb46aGcbPnDta4Ga+rr746khBYsmRJv70PEQ0cxkwNY2bPHawxMysrK3K/oKAARx55ZKfbzpw5M3L/q6++6vF7UfcMyR4AEQBkZmbi/PPPx8svv4x//etfkV/K559/PjIyMpI8uvaGDBmC5557Di0tLXjttdcAAG+++SZOOOGEhL6Poig477zzMHLkSEyaNAl+vx8LFy5EfX19h9MienvlMfqX+c9//nNcf/31cb3OZDL16v0SqaMrfweDBx54AAAwY8YMvP/++x1uo09xcblckZ/TwsJCnHzyyQMzSCLqN4ybHWPc7N7BGjfjVVhYiLy8PNTW1mLfvn3JHg4RJQBjZscYM7t3sMZMPZkPAEOHDo1725qamn4b08GMiVtKGZdffjlefvllfPLJJzGPpbJf/OIXkWD6/fff99v7TJgwAVOmTMFnn30GIQS2bdvWYTCtqqrqdl/6NtGvj74vhMD48eN7PMbc3FzIsgxVVXHgwIEev74/6VccVVXtcrvoXj6pzu/3AwDmzp2LuXPndrltbW0tfvrTnwIApk2bxsQtUZpg3Owc42bfpGPc7An2jCdKP4yZnWPM7Jt0jJnjxo2L3O+uYjf6eYOBKcb+wFYJlDJOOeUUlJSUIBgMIhgMorS0FKecckqyh9Wl0tLSyP3+/iM/nvfasWMH6urqOt1HTU0Ndu7cCQAxAdNkMkV+OX/xxRe9Gp/RaIzsUw/6PdVfx1Cf6tHY2Njldlu2bOmX9yci6g+Mm31/L8bNjh3McbOmpga1tbUAYn+GiGhwY8zs+3sxZnYsHWPmsGHDUF5eDgDYuXNnl8d727ZtkfsDvdDfwYKJW0oZiqLgsssug9lshtlsxmWXXRbTm2Wg9CQIRK+8OWLEiH57LyEEVq9eDUALOJ01uRdC4MUXX+x0P/PmzYu854wZM2Ke01fm/O677/Dxxx/HNa62zj77bABaUH/33Xd7/Hq9CbrP5+vV+3emoqICgNaYffPmzR1u4/f78e9//zuh79uf4lkMYdiwYQC0wKs/tnjx4uQOnIgShnGz6+0YN3svHeNmvP7+979H/s2nTZuW5NEQUaIwZna9HWNm76VrzLzgggsAAE6nE59++mmn27399tuR+4lu50EaJm4ppTzwwAPwer3wer24//77kzKG5557DldffXW301F27dqF3/72t5Hvzz333B6/14knnoiXX345Mu29M3/4wx+wdetWAMDxxx/f5Wqef/zjHzsMGJs2bcK9994LQGvo3na8119/PTIzMwEAV155JTZu3NjlmD788EN88803MY/NmTMn0ifq//2//9flqqR79+5t95jeaH779u29uoramegTr0ceeaTDbW666Sb2siOiQYdxs2OMm32TjnFz586dWLNmTZfbfPDBB7jnnnsAaIv4XHnllQMxNCIaIIyZHWPM7Jt0jJkAcMMNN0SS3TfddBOcTme7bV566aVIYdBZZ50V0++WEocNKChtVVdXd/nLXGe1WjFy5MjI936/H8899xyee+45HH/88TjttNNw9NFHo6ioCLIsY9++fVi0aBH+8Y9/oLm5GYAWSHsz1WbTpk249NJL8atf/QrnnXceTjjhBIwcORIOhwMtLS1Yv349XnrppciUEpPJhIcffrjT/Y0aNQo1NTU49thjcdttt2H69OkAgMWLF+P+++9HU1MTAODJJ59s1+y9qKgIL7zwAi688EIcOHAAkyZNwhVXXIEzzjgDQ4cORSAQwN69e7Fy5Uq89dZb2L59O95//30cfvjhkX0UFxfjmWeeweWXX47q6mpMnjwZv/jFL3DGGWeguLgYLS0t2LBhA9577z1s3rw5ZloFABx33HGYO3cuqqurcdNNN+HSSy+Fw+EAoE2P0StIe+rII4/E1KlTsXz5cjz33HPw+/2YPXs2HA4Htm7dir///e9YuHAhjjvuOCxbtqxX70FENNgxbjJu6tIxbu7cuRMnnXQSpk6dirPPPhsTJ06MrJC+fft2vPXWW3jrrbciJ/MPP/wwp3wSUacYMxkzdekYMwGgvLwc99xzD2699VasX78ekydPxm233YbDDz8cTqcTb7/9Np555hkAgN1ux1/+8pckjziNCaIBtGjRIgFAABBz587t8evnzp0bef2iRYu63H+8XxMnTozZx+uvvy5MJlPcr7/kkkuE2+3u1fGYOHFi3O9TUlIi5s+f3+F+pk2bJgCIadOmiQ8++EDYbLYO9yHLsnj44Ye7HNN7770ncnNzux2PLMti4cKFHe5j3rx5wmq1dvn6YcOGtXtdc3OzGDFiRFzb64/fdddd8RxqsWnTJlFYWNjpeG6++eaYn68dO3a028ewYcMEADF79uwu3yuese3YsaNP/xfioY+3o2NNRIMD42Ysxs1YjJvxi/dn3Wazib/97W893j8RJR9jZizGzFiMmb1z++23C0mSOv1shYWFYtmyZX16D+oaK26J2vjJT36CmTNn4pNPPsGSJUuwevVqbN++HQ0NDQC0q0mjRo3C1KlTMWvWLBx99NG9fq+1a9dizZo1WLBgAZYtW4ZNmzbhwIEDcLlcsNlsKCoqwoQJE3DWWWfhoosuijQ+78pZZ52Fr7/+Gg899BAWLlyIAwcOIDs7Gz/4wQ/w61//GlOnTu3y9WeffTZ27NiB5557Dh999BE2btyI+vp6GAwGFBcXY9y4cTj55JNx4YUXdjoVYvbs2TjttNPw9NNPY/78+di2bRuam5tht9sxZswYnHzyybjsssvavS4zMxPLli3Dfffdh08++QS7du2C2+2O72B2Y+zYsVi9ejXuvfdefPTRRzhw4AAcDgeOPvpoXHfddTjzzDMxb968hLwXEdHBhHGTcXMwOProo/HSSy9h+fLl+Prrr3HgwAHU1tYiGAwiJycH48aNwymnnIKf//znkUpcIqJEY8xkzBxs7rvvPpxzzjl45pln8Nlnn+HAgQOwWCw45JBDcM455+C6666LVC5T/5CESGBzDyJKiunTp2PJkiWYNm0aF58iIiLqBuMmERFRfBgziZKLi5MRERERERERERERpRgmbomIiIiIiIiIiIhSDBO3RERERERERERERCmGiVsiIiIiIiIiIiKiFMPELREREREREREREVGKkYQQItmDICIiIiIiIiIiIqJWrLglIiIiIiIiIiIiSjGGZA9gMFNVFfv370dWVhYkSUr2cIiIKIGEEGhubkZpaSlkmdc5E4Fxk4goPTFm9g/GTSKi9NSTuMnEbR/s378fZWVlyR4GERH1oz179mDo0KHJHkZaYNwkIkpvjJmJxbhJRJTe4ombTNz2QVZWFgDtQNvt9iSPhoiIEsnpdKKsrCzyu576jnGTiCg9MWb2D8ZNIqL01JO4ycRtH+jTVex2OwMpEVGa4tTExGHcJCJKb4yZicW4SUSU3uKJm2xARERERERERERERJRimLglIiIiIiIiIiIiSjFM3BIRERERERERERGlGCZuiYiIiIiIiIiIiFIME7dEREREREREREREKYaJWyIiIiIiIiIiIqIUY0j2AIiIdKFQCIFAINnDoDRlMBigKAokSUr2UIiI+kwIgVAohGAwmOyhUJpK17gZCoVw991346WXXkJlZSVKS0txxRVX4He/+13kswohcNddd+G5555DY2Mjjj/+eDzzzDMYPXp0ZD/19fW47rrr8P7770OWZVxwwQV4/PHHkZmZGdnmm2++wbXXXouvvvoKBQUFuO6663DrrbcO+GcmIsZN6l/9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XH/99XjxxRdx2WWXad/n1KlTGDFiBN5//33YbDb06dMHs2fPRs2aNbVrvvzySwwbNgw7d+7EhRdeiBEjRmDMmDEJf8+xpE/WflNQhE5N6yTxboiooi699FLcd999AIDi4mJs374db775Jt5++21s2LAB119/fVx+7kUXXYSvv/4a2dnZlXrd119/jerVq8flnqjitm7dijvuuAO9e/cGAFx88cV488038emnnwIIxMtZs2Zh3LhxuOOOOwAAr7/+OnJycvDuu++ib9+++Prrr7F69Wrs3LkTV111FYDAwrZXr154/vnn0bBhQyxduhQejwevvfYaXC4X2rRpgz179mDGjBkpvQj9z/HftF9/fawIt15h3neQiKyFMZOiVatWLcyaNQuzZs2KeI0kSZg8eTImT54c8Zo6depg2bJlZf6stm3b4qOPPor2Vi3rx1NntV8XlbBQiCgVMG6mLksmbkX10OLFi9GmTRt89tlneOCBB5CdnY1HH30UQLB6aPHixWjWrBn+9re/IT8/H/v379d2Qvv164djx45h3bp18Hq9eOCBBzBkyBAtwIrqoR49emDBggXYu3cvBg0ahNq1a6f0IvTHX89pvz511lvGlURkJc2bN8fEiRMNj40bNw5PP/00/ud//gebNm2Ky891Op1o2bJlpV8XzWso9q677jq89NJL+M9//oPLL78cX3zxBT7++GPMmDEDAHDw4EEUFBSgR48e2muys7Nx7bXXYtu2bejbty+2bduG2rVra0lbAOjRowdsNht27NiBP/7xj9i2bRu6du0Kl8ulXZOfn4/nnnsOp0+fNu3X53a74Xa7ta+Liqx3nPLwKX3M9CTxToioMhgziZLn1+JgvPz5TEkS74SIKopxM3VZslWCvnro4osvxl133YVbbrklYvVQ27Zt8frrr+Po0aN49913AUCrHnrllVdw7bXXokuXLpgzZw6WL1+Oo0ePAoCheqhNmzbo27cvHn30UW2xm6rOlAQD6amz7jKuJCKrGzFiBABg586dAAITi2fMmIF27dqhWrVqyM7ORrdu3fD++++Hvdbv9+OVV17BNddcgzp16qBatWpo1KgRbr/9dkNgNus7JEkSNm/erP1afIReo+87NHjwYEiShC1btpi+lxkzZkCSJLz88suGx7/88kv07dsXDRo0gMvlQtOmTTFixAj8+uuvlfmt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VBJ7qGT6ne8dsblYtXOoDfuoCfoI+d0EPG4aoz7aakMkMkX29KXZ0Z0iX6oQ8LioK3VRyiapuP30+9oojxwNvuPiWWOXsZ8qZeaJlJvHq9iGZ/cPkEgXiQU9zG0IM6smqJyUaa1UsY+rh1TdRObZtyvO/QsqRee7wcjx+rRgjDM1oMszMm/yyD6WR6708rzyvNvFUoV8sUDRuCmWKlQObSDc/Qz+SJzAjEW4mxaOzM/8kr4rpKDzaadPYrOcaYFcbmeKo1AdlPIM9PdS7n6Bht61uJIHnWn7ms4fmQop5txLKRCHxE4qex4lUfSxp9KE31WhJWSoj/jwUXHmV15xZq7ufE0XbsGZMH7VqlV84xvfAJwJ49va2vjYxz52Rm5OJiIi05M+4080kcwE9amIyLlKn+8np9wUEZGT0VQJp+CTn/wka9asYcWKFaxatYqvf/3rZDIZPvjBD05100RERKYVZaaIiMj4KTdFRGSiXvOF2/e85z309fXxxS9+ke7ubi666CJ+/etf09ysGZ5ERESOpcwUEREZP+WmiIhM1Gt+qoSJ0KUrIiLnLn3GV5/6VETk3KTP98mhfhUROTedyuf7JM6yLCIiIiIiIiIiIiKnQ4VbERERERERERERkWlGhVsRERERERERERGRaUaFWxEREREREREREZFpRoVbERERERERERERkWlGhVsRERERERERERGRaUaFWxEREREREREREZFpRoVbERERERERERERkWlGhVsRERERERERERGRaUaFWxEREREREREREZFpRoVbERERERERERERkWlGhVsRERERERERERGRacYz1Q04mxljAEgmk1PcEhERqbbRz/bRz3qZOOWmiMi5SZk5OZSbIiLnplPJTRVuJyCVSgHQ2to6xS0REZHJkkqliMfjU92Mc4JyU0Tk3KbMrC7lpojIuW08uWkZnRY9bbZt09XVRTQaxbKsqm8/mUzS2trKwYMHicViVd/+a4X6sTrUjxOnPqyOM9WPxhhSqRQtLS24XJpZqBqUm9Of+rA61I/VoX6sjjPRj8rMyTGZuanfr+pQP1aH+rE61I8TNx2PNTXidgJcLhezZ8+e9PeJxWL6pasC9WN1qB8nTn1YHWeiHzVqqLqUm2cP9WF1qB+rQ/1YHZPdj8rM6jsTuanfr+pQP1aH+rE61I8TN52ONXU6VERERERERERERGSaUeFWREREREREREREZJpR4XYa8/v9fOlLX8Lv9091U85q6sfqUD9OnPqwOtSP8nL0szFx6sPqUD9Wh/qxOtSPcjL6uagO9WN1qB+rQ/04cdOxD3VzMhEREREREREREZFpRiNuRURERERERERERKYZFW5FREREREREREREphkVbkVERERERERERESmGRVuz7CvfvWrrFy5kmg0SlNTE29729vYsWPHcevk83k++tGPUl9fTyQS4Z3vfCc9PT3HrdPZ2cmNN95IKBSiqamJv/iLv6BcLp/JXZk2br/9dizL4pZbbhl7Tn04PocPH+Z973sf9fX1BINBli5dyrPPPju23BjDF7/4RWbOnEkwGOTaa69l165dx21jYGCAm2++mVgsRk1NDX/0R39EOp0+07syZSqVCl/4wheYO3cuwWCQefPm8Td/8zccO324+vFEjz/+OL//+79PS0sLlmVxzz33HLe8Wn22ZcsWXve61xEIBGhtbeXv//7vJ3vXpMqUm9Wn3Dx9ys2JU26eHuWmjIcyc3IoN0+fcnNilJmn55zLTCNn1HXXXWfuuusus23bNrNp0ybzlre8xbS1tZl0Oj22zoc//GHT2tpqHnroIfPss8+ayy67zFx++eVjy8vlslmyZIm59tprzcaNG82vfvUr09DQYD73uc9NxS5NqfXr15v29nazbNky8/GPf3zsefXhqxsYGDBz5swxH/jAB8y6devM3r17zQMPPGB27949ts7tt99u4vG4ueeee8zmzZvNTTfdZObOnWtyudzYOtdff7258MILzdNPP21+97vfmfnz55v3vve9U7FLU+IrX/mKqa+vN/fdd5/Zt2+fufvuu00kEjH/8A//MLaO+vFEv/rVr8znP/9587Of/cwA5uc///lxy6vRZ8PDw6a5udncfPPNZtu2beZHP/qRCQaD5tvf/vaZ2k2pAuVmdSk3T59yszqUm6dHuSnjocysPuXm6VNuTpwy8/Sca5mpwu0U6+3tNYB57LHHjDHGDA0NGa/Xa+6+++6xdbZv324As3btWmOM80PocrlMd3f32Dp33nmnicViplAonNkdmEKpVMosWLDAPPjgg+YNb3jDWJCqD8fnM5/5jLnyyitfdrlt22bGjBnmjjvuGHtuaGjI+P1+86Mf/cgYY8wLL7xgAPPMM8+MrXP//fcby7LM4cOH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7bXXGsC8733vO+k23G63uffee0/62i996UsGMF/60pdOWAaYl/s1f8Mb3mAA88gjj7xq+17NI4888orv9WrvuWbNmrHX/+3f/q2xbXts2T/+4z8awMyePdvU1taaf/u3fzvutbfccosBzLXXXnvc87ZtmyuuuMIA5o/+6I9MMpkcW1YqlcynPvUpA5irr776NPdaRESqSbk5/vdUboqIiHJz/O+p3JSzmaZKEJkGRucLerlLKdasWcNNN910Jps0JVatWsVtt92GZVljz33kIx+hrq6OQ4cOce211/L+97//uNf85V/+JQCPP/44pVJp7PkHHniAJ598kosuuohvfetbRKPRsWUej4e///u/Z8mSJTzyyCNs27ZtkvdMRESqSbnpUG6KiMh4KDcdyk05G6lwKzIN2LYNcFyAHOtd73rXmWzOlLnhhhtO6AOPxzN299O3vOUtJ7ymvr6euro6isXicV9E/ud//geAd77znXg8J84K43K5eP3rXw/AU089VbV9EBGRyafcdCg3RURkPJSbDuWmnI1UuBWZBhKJBAB1dXUnXd7e3n4GWzN12traTvp8JBJ5xeWjZzfz+fzYc3v37gXgC1/4wnGT4R/755//+Z8B6Ovrq9o+iIjI5FNuOpSbIiIyHspNh3JTzka6OZnIFDPGsHHjRgCWLl160nWCweCZbNKUcble+VzSqy0/1uhZ5SuvvJJ58+a94roXXHDBuLcrIiJTS7l5lHJTRERejXLzKOWmnI1UuBWZYr/61a8YHBwE4M1vfvMUt+bc0draCsBb3/pWPv3pT09xa0REpFqUm5NDuSkicm5Sbk4O5aacKZoqQWQKDQ8P84lPfAKAN73pTVx00UVn7L19Ph8A5XL5jL3nmXTDDTcAcPfdd2OMmeLWiIhINSg3J49yU0Tk3KPcnDzKTTlTVLgVmQLGGO6//35WrVrFrl27mDlzJt/97nfPaBtmz54NwPPPP39G3/dMeetb38rKlStZv349H/zgB086r9Dg4CDf+ta3ztkvEyIi5wrl5uRTboqInDuUm5NPuSlniqZKEJlk//Iv/8Kjjz4KQKFQIJFI8NxzzzEwMADAVVddxfe+9z3mzJlzRtv1zne+k7vuuotbb72V3/72tzQ1NWFZFh/60Ie4/PLLz2hbJoPL5eKee+7hxhtv5Ac/+AH/9V//xYUXXkhbWxvFYpG9e/eydetWKpUKH/jAB056J1ARETnzlJtTQ7kpInJ2Um5ODeWmnCn6yRGZZE8++SRPPvkkAOFwmHg8ztKlS1mxYgXvec97WLly5ZS068Ybb+S73/0ud955Jw8//DDZbBZwJlc/F4IUoKWlhaeffprvf//7/OQnP2HLli2sX7+euro6Wlpa+PCHP8xNN91EIBCY6qaKiMgI5ebUUW6KiJx9lJtTR7kpZ4JlNBmHiIiIiIiIiIiIyLSiOW5FREREREREREREphkVbkVERERERERERESmGRVuRURERERERERERKYZFW5FREREREREREREphkVbkVERERERERERESmGRVuRURERERERERERKYZFW5FREREREREREREphkVbkVERERERERERESmGRVuRURERERERERERKYZFW5FREREREREREREphkVbkVERERERERERESmGRVuRURERERERERERKYZFW5FREREREREREREppn/Hwskh3yEMn3+AAAAAElFTkSuQmCC",
+      "text/plain": [
+       "<Figure size 1400x1000 with 6 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "chem = 'MES'\n",
+    "\n",
+    "num_plots = 6\n",
+    "chem_spectra = train[train['Label'] == chem].reset_index(drop=True)\n",
+    "sample = chem_spectra.sample(n=num_plots, random_state=42).iloc[:,2:-9].reset_index(drop=True)\n",
+    "\n",
+    "\n",
+    "cols = 3  # Number of columns for the subplots\n",
+    "rows = (num_plots + cols - 1) // cols  # Calculate number of rows needed\n",
+    "fig, axes = plt.subplots(rows, cols, figsize=(14, 10))\n",
+    "\n",
+    "# Flatten the axes array for easy iteration\n",
+    "axes = axes.flatten()\n",
+    "\n",
+    "for idx, row in sample.iterrows():\n",
+    "    numbers = range(184, (len(row)//2)+184)\n",
+    "\n",
+    "    axes[idx].plot(numbers, row[:len(numbers)], label='Positive')\n",
+    "    axes[idx].plot(numbers, row[len(numbers):], label='Negative')\n",
+    "    axes[idx].set_title(f'{chem} Spectrum {idx+1}', fontsize=20)\n",
+    "    axes[idx].set_xlabel('Drift Time', fontsize=16)\n",
+    "    axes[idx].set_ylabel('Ion Intensity', fontsize=16)\n",
+    "    axes[idx].legend(fontsize=14)\n",
+    "\n",
+    "plt.tight_layout()\n",
+    "plt.show()"
    ]
   },
   {
diff --git a/data_preprocessing/ims_data_preprocessing.ipynb b/data_preprocessing/ims_data_preprocessing.ipynb
index 12d64a0e..20f6b419 100644
--- a/data_preprocessing/ims_data_preprocessing.ipynb
+++ b/data_preprocessing/ims_data_preprocessing.ipynb
@@ -779,7 +779,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [
     {
@@ -788,9 +788,9 @@
      "text": [
       "Selected GPU ID: 0\n",
       "  Name: NVIDIA GeForce RTX 4090\n",
-      "  Memory Free: 15626.0 MB\n",
-      "  Memory Used: 8590.0 MB\n",
-      "  GPU Load: 67.00%\n",
+      "  Memory Free: 24185.0 MB\n",
+      "  Memory Used: 31.0 MB\n",
+      "  GPU Load: 0.00%\n",
       "Current device ID:  cuda:0\n",
       "PyTorch current device ID: 0\n",
       "PyTorch current device name: NVIDIA GeForce RTX 4090\n"
@@ -829,7 +829,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 18,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -848,19 +848,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "n=2\n",
-    "background_sample = background.sample(n=n, random_state=42).iloc[:,1:-1]\n",
-    "background_sample.reset_index(inplace=True)\n",
-    "background_sample.drop(columns=['index'], inplace=True)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -897,44 +885,40 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "ename": "KeyboardInterrupt",
-     "evalue": "",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
-      "Cell \u001b[0;32mIn[21], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m file_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/mnt/usb/cmdunham/preprocessed_ims_data/train_carls.csv\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      2\u001b[0m differences_df \u001b[38;5;241m=\u001b[39m generate_differences_df(train, background_sample)\n\u001b[0;32m----> 3\u001b[0m \u001b[43mdifferences_df\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfile_path\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mheader\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m      5\u001b[0m file_path\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/mnt/usb/cmdunham/preprocessed_ims_data/val_carls.csv\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m      6\u001b[0m differences_df \u001b[38;5;241m=\u001b[39m generate_differences_df(val, background_sample)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/util/_decorators.py:211\u001b[0m, in \u001b[0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    210\u001b[0m         kwargs[new_arg_name] \u001b[38;5;241m=\u001b[39m new_arg_value\n\u001b[0;32m--> 211\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/generic.py:3720\u001b[0m, in \u001b[0;36mNDFrame.to_csv\u001b[0;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)\u001b[0m\n\u001b[1;32m   3709\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(\u001b[38;5;28mself\u001b[39m, ABCDataFrame) \u001b[38;5;28;01melse\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mto_frame()\n\u001b[1;32m   3711\u001b[0m formatter \u001b[38;5;241m=\u001b[39m DataFrameFormatter(\n\u001b[1;32m   3712\u001b[0m     frame\u001b[38;5;241m=\u001b[39mdf,\n\u001b[1;32m   3713\u001b[0m     header\u001b[38;5;241m=\u001b[39mheader,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   3717\u001b[0m     decimal\u001b[38;5;241m=\u001b[39mdecimal,\n\u001b[1;32m   3718\u001b[0m )\n\u001b[0;32m-> 3720\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mDataFrameRenderer\u001b[49m\u001b[43m(\u001b[49m\u001b[43mformatter\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_csv\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   3721\u001b[0m \u001b[43m    \u001b[49m\u001b[43mpath_or_buf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3722\u001b[0m \u001b[43m    \u001b[49m\u001b[43mlineterminator\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlineterminator\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3723\u001b[0m \u001b[43m    \u001b[49m\u001b[43msep\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43msep\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3724\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3725\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3726\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcompression\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3727\u001b[0m \u001b[43m    \u001b[49m\u001b[43mquoting\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquoting\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3728\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3729\u001b[0m \u001b[43m    \u001b[49m\u001b[43mindex_label\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex_label\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3730\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3731\u001b[0m \u001b[43m    \u001b[49m\u001b[43mchunksize\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mchunksize\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3732\u001b[0m \u001b[43m    \u001b[49m\u001b[43mquotechar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquotechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3733\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdate_format\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdate_format\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3734\u001b[0m \u001b[43m    \u001b[49m\u001b[43mdoublequote\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdoublequote\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3735\u001b[0m \u001b[43m    \u001b[49m\u001b[43mescapechar\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mescapechar\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3736\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   3737\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/util/_decorators.py:211\u001b[0m, in \u001b[0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    209\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    210\u001b[0m         kwargs[new_arg_name] \u001b[38;5;241m=\u001b[39m new_arg_value\n\u001b[0;32m--> 211\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/format.py:1189\u001b[0m, in \u001b[0;36mDataFrameRenderer.to_csv\u001b[0;34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)\u001b[0m\n\u001b[1;32m   1168\u001b[0m     created_buffer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[1;32m   1170\u001b[0m csv_formatter \u001b[38;5;241m=\u001b[39m CSVFormatter(\n\u001b[1;32m   1171\u001b[0m     path_or_buf\u001b[38;5;241m=\u001b[39mpath_or_buf,\n\u001b[1;32m   1172\u001b[0m     lineterminator\u001b[38;5;241m=\u001b[39mlineterminator,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1187\u001b[0m     formatter\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfmt,\n\u001b[1;32m   1188\u001b[0m )\n\u001b[0;32m-> 1189\u001b[0m \u001b[43mcsv_formatter\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43msave\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1191\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m created_buffer:\n\u001b[1;32m   1192\u001b[0m     \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(path_or_buf, StringIO)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:261\u001b[0m, in \u001b[0;36mCSVFormatter.save\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    241\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m get_handle(\n\u001b[1;32m    242\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mfilepath_or_buffer,\n\u001b[1;32m    243\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmode,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    249\u001b[0m \n\u001b[1;32m    250\u001b[0m     \u001b[38;5;66;03m# Note: self.encoding is irrelevant here\u001b[39;00m\n\u001b[1;32m    251\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mwriter \u001b[38;5;241m=\u001b[39m csvlib\u001b[38;5;241m.\u001b[39mwriter(\n\u001b[1;32m    252\u001b[0m         handles\u001b[38;5;241m.\u001b[39mhandle,\n\u001b[1;32m    253\u001b[0m         lineterminator\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mlineterminator,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    258\u001b[0m         quotechar\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mquotechar,\n\u001b[1;32m    259\u001b[0m     )\n\u001b[0;32m--> 261\u001b[0m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:266\u001b[0m, in \u001b[0;36mCSVFormatter._save\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    264\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_need_to_save_header:\n\u001b[1;32m    265\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_save_header()\n\u001b[0;32m--> 266\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save_body\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:304\u001b[0m, in \u001b[0;36mCSVFormatter._save_body\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    302\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m start_i \u001b[38;5;241m>\u001b[39m\u001b[38;5;241m=\u001b[39m end_i:\n\u001b[1;32m    303\u001b[0m     \u001b[38;5;28;01mbreak\u001b[39;00m\n\u001b[0;32m--> 304\u001b[0m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_save_chunk\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstart_i\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mend_i\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/io/formats/csvs.py:311\u001b[0m, in \u001b[0;36mCSVFormatter._save_chunk\u001b[0;34m(self, start_i, end_i)\u001b[0m\n\u001b[1;32m    308\u001b[0m slicer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mslice\u001b[39m(start_i, end_i)\n\u001b[1;32m    309\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj\u001b[38;5;241m.\u001b[39miloc[slicer]\n\u001b[0;32m--> 311\u001b[0m res \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mto_native_types\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_number_format\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    312\u001b[0m data \u001b[38;5;241m=\u001b[39m [res\u001b[38;5;241m.\u001b[39miget_values(i) \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mlen\u001b[39m(res\u001b[38;5;241m.\u001b[39mitems))]\n\u001b[1;32m    314\u001b[0m ix \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdata_index[slicer]\u001b[38;5;241m.\u001b[39m_format_native_types(\u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_number_format)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/managers.py:502\u001b[0m, in \u001b[0;36mBaseBlockManager.to_native_types\u001b[0;34m(self, **kwargs)\u001b[0m\n\u001b[1;32m    497\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mto_native_types\u001b[39m(\u001b[38;5;28mself\u001b[39m: T, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m T:\n\u001b[1;32m    498\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    499\u001b[0m \u001b[38;5;124;03m    Convert values to native types (strings / python objects) that are used\u001b[39;00m\n\u001b[1;32m    500\u001b[0m \u001b[38;5;124;03m    in formatting (repr / csv).\u001b[39;00m\n\u001b[1;32m    501\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 502\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mto_native_types\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/managers.py:352\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    350\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    351\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 352\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mgetattr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mb\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    353\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mTypeError\u001b[39;00m, \u001b[38;5;167;01mNotImplementedError\u001b[39;00m):\n\u001b[1;32m    354\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m ignore_failures:\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/blocks.py:541\u001b[0m, in \u001b[0;36mBlock.to_native_types\u001b[0;34m(self, na_rep, quoting, **kwargs)\u001b[0m\n\u001b[1;32m    538\u001b[0m \u001b[38;5;129m@final\u001b[39m\n\u001b[1;32m    539\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mto_native_types\u001b[39m(\u001b[38;5;28mself\u001b[39m, na_rep\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnan\u001b[39m\u001b[38;5;124m\"\u001b[39m, quoting\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Block:\n\u001b[1;32m    540\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"convert to our native types format\"\"\"\u001b[39;00m\n\u001b[0;32m--> 541\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mto_native_types\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mna_rep\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mna_rep\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mquoting\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mquoting\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    542\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmake_block(result)\n",
-      "File \u001b[0;32m~/ChemicalDataGeneration/chem_data_gen/lib/python3.8/site-packages/pandas/core/internals/blocks.py:2323\u001b[0m, in \u001b[0;36mto_native_types\u001b[0;34m(values, na_rep, quoting, float_format, decimal, **kwargs)\u001b[0m\n\u001b[1;32m   2320\u001b[0m mask \u001b[38;5;241m=\u001b[39m isna(values)\n\u001b[1;32m   2322\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m quoting:\n\u001b[0;32m-> 2323\u001b[0m     values \u001b[38;5;241m=\u001b[39m \u001b[43mvalues\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mstr\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2324\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   2325\u001b[0m     values \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39marray(values, dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mobject\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
-      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
-     ]
-    }
-   ],
+   "outputs": [],
+   "source": [
+    "n=2\n",
+    "train_background_sample = background.sample(n=n, random_state=42).iloc[:,1:-1]\n",
+    "train_background_sample.reset_index(inplace=True)\n",
+    "train_background_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "val_background_sample = background.sample(n=n, random_state=32).iloc[:,1:-1]\n",
+    "val_background_sample.reset_index(inplace=True)\n",
+    "val_background_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "test_background_sample = background.sample(n=n, random_state=22).iloc[:,1:-1]\n",
+    "test_background_sample.reset_index(inplace=True)\n",
+    "test_background_sample.drop(columns=['index'], inplace=True)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 9,
+   "metadata": {},
+   "outputs": [],
    "source": [
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/train_carls.csv'\n",
-    "differences_df = generate_differences_df(train, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(train, train_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)\n",
     "\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/val_carls.csv'\n",
-    "differences_df = generate_differences_df(val, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(val, val_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)\n",
     "\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls.csv'\n",
-    "differences_df = generate_differences_df(test, background_sample)\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_dif_backgrounds.csv'\n",
+    "differences_df = generate_differences_df(test, test_background_sample)\n",
     "differences_df.to_csv(file_path, index=False, header=True)"
    ]
   },
diff --git a/models/__pycache__/functions.cpython-38.pyc b/models/__pycache__/functions.cpython-38.pyc
index 35bd9be4..65708633 100644
Binary files a/models/__pycache__/functions.cpython-38.pyc and b/models/__pycache__/functions.cpython-38.pyc differ
diff --git a/models/carl_encoder.ipynb b/models/carl_encoder.ipynb
index 25255091..9fb8be65 100644
--- a/models/carl_encoder.ipynb
+++ b/models/carl_encoder.ipynb
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -26,7 +26,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 9,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [
     {
@@ -35,7 +35,7 @@
        "<module 'functions' from '/home/cmdunham/ChemicalDataGeneration/models/functions.py'>"
       ]
      },
-     "execution_count": 9,
+     "execution_count": 13,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -58,21 +58,21 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 11,
    "metadata": {},
    "outputs": [],
    "source": [
-    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_.csv'\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_dif_backgrounds.csv'\n",
     "train_carls = pd.read_csv(file_path)\n",
-    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_.csv'\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_dif_backgrounds.csv'\n",
     "val_carls = pd.read_csv(file_path)\n",
-    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_.csv'\n",
+    "file_path='/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_dif_backgrounds.csv'\n",
     "test_carls = pd.read_csv(file_path)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 10,
+   "execution_count": 14,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -91,7 +91,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [
     {
@@ -179,7 +179,7 @@
        "DMMP        [0.12106811, 0.00294244, -0.14450458, 0.072665...  "
       ]
      },
-     "execution_count": 11,
+     "execution_count": 15,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -192,7 +192,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 12,
+   "execution_count": 16,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -211,7 +211,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [
     {
@@ -416,7 +416,7 @@
        "[5 rows x 36 columns]"
       ]
      },
-     "execution_count": 13,
+     "execution_count": 17,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -446,20 +446,20 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 14,
+   "execution_count": 18,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Selected GPU ID: 0\n",
+      "Selected GPU ID: 1\n",
       "  Name: NVIDIA GeForce RTX 4090\n",
-      "  Memory Free: 24185.0 MB\n",
-      "  Memory Used: 31.0 MB\n",
+      "  Memory Free: 24203.0 MB\n",
+      "  Memory Used: 14.0 MB\n",
       "  GPU Load: 0.00%\n",
-      "Current device ID:  cuda:0\n",
-      "PyTorch current device ID: 0\n",
+      "Current device ID:  cuda:1\n",
+      "PyTorch current device ID: 1\n",
       "PyTorch current device name: NVIDIA GeForce RTX 4090\n"
      ]
     }
@@ -504,7 +504,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 15,
+   "execution_count": 19,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -515,7 +515,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 16,
+   "execution_count": 20,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -529,7 +529,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 21,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -545,7 +545,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [
     {
@@ -554,7 +554,7 @@
        "<module 'functions' from '/home/cmdunham/ChemicalDataGeneration/models/functions.py'>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 22,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -566,7 +566,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 23,
    "metadata": {},
    "outputs": [
     {
@@ -604,7 +604,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk</code>"
+       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241216_120207-ctgk58fh</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -616,7 +616,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk' target=\"_blank\">logical-leaf-487</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/ctgk58fh' target=\"_blank\">amber-oath-495</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -640,7 +640,7 @@
     {
      "data": {
       "text/html": [
-       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/9rg0y8kk</a>"
+       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/ctgk58fh' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/ctgk58fh</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -657,28 +657,203 @@
       "--------------------------\n",
       "--------------------------\n",
       "New run with hyperparameters:\n",
-      "batch_size  :  16\n",
+      "batch_size  :  32\n",
       "epochs  :  500\n",
-      "learning_rate  :  1e-05\n",
+      "learning_rate  :  0.0001\n",
       "Saved best model at epoch 1\n",
+      "Epoch[1/500]:\n",
+      "   Training loss: 0.0009644431652454526\n",
+      "   Validation loss: 0.015397528390211225\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 2\n",
+      "Epoch[2/500]:\n",
+      "   Training loss: 0.2556329172690687\n",
+      "   Validation loss: 0.012988361599752168\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 3\n",
-      "Saved best model at epoch 5\n",
-      "Saved best model at epoch 8\n",
-      "Saved best model at epoch 10\n",
+      "Epoch[3/500]:\n",
+      "   Training loss: 0.0002975151330786359\n",
+      "   Validation loss: 0.012410508407651694\n",
+      "-------------------------------------------\n",
+      "Epoch[4/500]:\n",
+      "   Training loss: 38.335410003057625\n",
+      "   Validation loss: 0.031828513580299686\n",
+      "-------------------------------------------\n",
+      "Epoch[5/500]:\n",
+      "   Training loss: 0.0019017072664401693\n",
+      "   Validation loss: 0.012997697077854866\n",
+      "-------------------------------------------\n",
+      "Epoch[6/500]:\n",
+      "   Training loss: 0.00012304251612314966\n",
+      "   Validation loss: 0.01444937122255416\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 7\n",
+      "Epoch[7/500]:\n",
+      "   Training loss: 0.00019731501291116583\n",
+      "   Validation loss: 0.011196047765128126\n",
+      "-------------------------------------------\n",
+      "Epoch[8/500]:\n",
+      "   Training loss: 139838.5254311021\n",
+      "   Validation loss: 0.7593576690050307\n",
+      "-------------------------------------------\n",
+      "Epoch[9/500]:\n",
+      "   Training loss: 0.025527230234171683\n",
+      "   Validation loss: 0.029777153327567318\n",
+      "-------------------------------------------\n",
       "Epoch[10/500]:\n",
-      "   Training loss: 3.498296994511149e-05\n",
-      "   Validation loss: 2.3915614672754204e-05\n",
+      "   Training loss: 0.0006718942579099692\n",
+      "   Validation loss: 0.014985401828761166\n",
+      "-------------------------------------------\n",
+      "Epoch[11/500]:\n",
+      "   Training loss: 9.555613555085578e-05\n",
+      "   Validation loss: 0.015333531769197026\n",
+      "-------------------------------------------\n",
+      "Epoch[12/500]:\n",
+      "   Training loss: 0.000157566934163184\n",
+      "   Validation loss: 201830015.59677634\n",
+      "-------------------------------------------\n",
+      "Epoch 00013: reducing learning rate of group 0 to 1.0000e-05.\n",
+      "Epoch[13/500]:\n",
+      "   Training loss: 52637.44782256887\n",
+      "   Validation loss: 178190.56712175574\n",
+      "-------------------------------------------\n",
+      "Epoch[14/500]:\n",
+      "   Training loss: 0.0013097088477640048\n",
+      "   Validation loss: 125851.53124231804\n",
+      "-------------------------------------------\n",
+      "Epoch[15/500]:\n",
+      "   Training loss: 9.480317233890376e-05\n",
+      "   Validation loss: 120843.97973340811\n",
+      "-------------------------------------------\n",
+      "Epoch[16/500]:\n",
+      "   Training loss: 2.5209016177087527e-05\n",
+      "   Validation loss: 96578.53295943886\n",
+      "-------------------------------------------\n",
+      "Epoch[17/500]:\n",
+      "   Training loss: 1.581565908595582e-05\n",
+      "   Validation loss: 62315.767863324254\n",
+      "-------------------------------------------\n",
+      "Validation loss has not improved in 10 epochs. Stopping training at epoch 17.\n"
+     ]
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 800x600 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 800x600 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "-------------------------------------------\n",
+      "-------------------------------------------\n",
+      "Dataset:  carls\n",
+      "Target Embeddings:  ChemNet\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 12\n",
-      "Saved best model at epoch 17\n",
-      "Saved best model at epoch 18\n",
-      "Saved best model at epoch 19\n",
-      "Epoch[20/500]:\n",
-      "   Training loss: 1.9989170390752805e-05\n",
-      "   Validation loss: 1.604418155455629e-05\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 27\n"
+      "Encoder(\n",
+      "  (encoder): Sequential(\n",
+      "    (0): Linear(in_features=1676, out_features=1548, bias=True)\n",
+      "    (1): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (2): Linear(in_features=1548, out_features=1420, bias=True)\n",
+      "    (3): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (4): Linear(in_features=1420, out_features=1292, bias=True)\n",
+      "    (5): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (6): Linear(in_features=1292, out_features=1164, bias=True)\n",
+      "    (7): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (8): Linear(in_features=1164, out_features=1036, bias=True)\n",
+      "    (9): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (10): Linear(in_features=1036, out_features=908, bias=True)\n",
+      "    (11): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (12): Linear(in_features=908, out_features=780, bias=True)\n",
+      "    (13): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (14): Linear(in_features=780, out_features=652, bias=True)\n",
+      "    (15): LeakyReLU(negative_slope=0.01, inplace=True)\n",
+      "    (16): Linear(in_features=652, out_features=512, bias=True)\n",
+      "  )\n",
+      ")\n",
+      "-------------------------------------------\n",
+      "-------------------------------------------\n"
+     ]
+    },
+    {
+     "data": {
+      "application/vnd.jupyter.widget-view+json": {
+       "model_id": "0dc5ee8a9f414714b2149c0abb397e62",
+       "version_major": 2,
+       "version_minor": 0
+      },
+      "text/plain": [
+       "VBox(children=(Label(value='1.504 MB of 1.504 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "<style>\n",
+       "    table.wandb td:nth-child(1) { padding: 0 10px; text-align: left ; width: auto;} td:nth-child(2) {text-align: left ; width: 100%}\n",
+       "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
+       "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
+       "    </style>\n",
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Encoder Training Loss</td><td>▁▁▁▁▁▁▁█▁▁▁▁▄▁▁▁▁</td></tr><tr><td>Encoder Validation Loss</td><td>▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>17</td></tr><tr><td>Encoder Training Loss</td><td>2e-05</td></tr><tr><td>Encoder Validation Loss</td><td>62315.76786</td></tr><tr><td>Learning Rate at Final Epoch</td><td>1e-05</td></tr></table><br/></div></div>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       " View run <strong style=\"color:#cdcd00\">amber-oath-495</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/ctgk58fh' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/ctgk58fh</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 4 artifact file(s) and 0 other file(s)"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "text/html": [
+       "Find logs at: <code>./wandb/run-20241216_120207-ctgk58fh/logs</code>"
+      ],
+      "text/plain": [
+       "<IPython.core.display.HTML object>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Hyperparameters for best model: \n",
+      "    batch_size  :  32\n",
+      "    epochs  :  500\n",
+      "    learning_rate  :  0.0001\n"
      ]
     }
    ],
@@ -694,7 +869,7 @@
     "sorted_chem_names = list(train_carls.columns[-8:])\n",
     "\n",
     "model_hyperparams = {\n",
-    "  'batch_size':[16],\n",
+    "  'batch_size':[32],\n",
     "  'epochs': [500],\n",
     "  'learning_rate':[.00001]\n",
     "  }\n",
diff --git a/models/carl_to_chemnet_encoder..pth b/models/carl_to_chemnet_encoder..pth
index 398810ec..493b3498 100644
Binary files a/models/carl_to_chemnet_encoder..pth and b/models/carl_to_chemnet_encoder..pth differ
diff --git a/models/functions.py b/models/functions.py
index d47979be..f6905237 100644
--- a/models/functions.py
+++ b/models/functions.py
@@ -437,9 +437,9 @@ def plot_emb_pca(
     plt.xticks([])
     plt.yticks([])
     if embedding_type != 'ChemNet':
-        plt.title(f'{embedding_type} vs. {results_type} Encoder Output PCA', fontsize=18)
+        plt.title(f'{embedding_type} vs. Encoder {results_type} Output PCA', fontsize=18)
     else:
-        plt.title(f'ChemNet vs. {results_type} Encoder Output PCA', fontsize=18)
+        plt.title(f'ChemNet vs. Encoder {results_type} Output PCA', fontsize=18)
 
     if log_wandb:
         plt.savefig('tmp_plot.png', format='png', dpi=300)
@@ -733,8 +733,8 @@ def train_model(
                 else:
                     epochs_without_validation_improvement += 1
 
-                # log losses to wandb, format losses in scientific notation for readability
-                wandb.log({"Encoder Training Loss": format(average_loss, '.2e'), "Encoder Validation Loss": format(val_average_loss, '.2e')})
+                # log losses to wandb
+                wandb.log({"Encoder Training Loss": average_loss, "Encoder Validation Loss": val_average_loss})
 
                 if (epoch + 1) % 10 == 0:
                     print('Epoch[{}/{}]:'.format(epoch+1, combo['epochs']))
diff --git a/models/ims_encoder.ipynb b/models/ims_encoder.ipynb
index 62ece8ad..92a99471 100644
--- a/models/ims_encoder.ipynb
+++ b/models/ims_encoder.ipynb
@@ -1167,7 +1167,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 30,
    "metadata": {},
    "outputs": [
     {
@@ -1176,7 +1176,7 @@
        "<module 'functions' from '/home/cmdunham/ChemicalDataGeneration/models/functions.py'>"
       ]
      },
-     "execution_count": 19,
+     "execution_count": 30,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -1188,7 +1188,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 29,
    "metadata": {},
    "outputs": [
     {
@@ -1219,7 +1219,7 @@
     {
      "data": {
       "text/html": [
-       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_122731-wy2m6ujt</code>"
+       "Run data is saved locally in <code>/home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_141144-w6xo7a6b</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1231,7 +1231,7 @@
     {
      "data": {
       "text/html": [
-       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">electric-valley-486</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
+       "Syncing run <strong><a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">solar-glade-493</a></strong> to <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1255,7 +1255,7 @@
     {
      "data": {
       "text/html": [
-       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt</a>"
+       " View run at <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b</a>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1274,145 +1274,314 @@
       "New run with hyperparameters:\n",
       "batch_size  :  64\n",
       "epochs  :  500\n",
-      "learning_rate  :  1e-05\n",
+      "learning_rate  :  0.0001\n",
       "Saved best model at epoch 1\n",
+      "Epoch[1/500]:\n",
+      "   Training loss: 0.0018502819477478872\n",
+      "   Validation loss: 0.00038148708901253775\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 2\n",
-      "Saved best model at epoch 3\n",
-      "Saved best model at epoch 4\n",
+      "Epoch[2/500]:\n",
+      "   Training loss: 0.0004829900686170026\n",
+      "   Validation loss: 0.00018166769941036474\n",
+      "-------------------------------------------\n",
+      "Epoch[3/500]:\n",
+      "   Training loss: 0.00032997282478314986\n",
+      "   Validation loss: 0.0002835051352017441\n",
+      "-------------------------------------------\n",
+      "Epoch[4/500]:\n",
+      "   Training loss: 0.0003257950492189793\n",
+      "   Validation loss: 10.280857228299437\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 5\n",
+      "Epoch[5/500]:\n",
+      "   Training loss: 0.8234902602931663\n",
+      "   Validation loss: 0.00011339400869966854\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 6\n",
+      "Epoch[6/500]:\n",
+      "   Training loss: 7.583950118798414e-05\n",
+      "   Validation loss: 5.6756721370174176e-05\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 7\n",
-      "Saved best model at epoch 10\n",
+      "Epoch[7/500]:\n",
+      "   Training loss: 8.165417523806912e-05\n",
+      "   Validation loss: 3.858435758220986e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[8/500]:\n",
+      "   Training loss: 0.0001049875839964319\n",
+      "   Validation loss: 0.00010268009956219982\n",
+      "-------------------------------------------\n",
+      "Epoch[9/500]:\n",
+      "   Training loss: 0.00018674225623896431\n",
+      "   Validation loss: 0.00018878623647100034\n",
+      "-------------------------------------------\n",
       "Epoch[10/500]:\n",
-      "   Training loss: 7.579736407794366e-05\n",
-      "   Validation loss: 5.115047107611551e-05\n",
+      "   Training loss: 0.00016656890004744767\n",
+      "   Validation loss: 4.9516607065585414e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[11/500]:\n",
+      "   Training loss: 0.0001971141003818893\n",
+      "   Validation loss: 0.0007067102104616225\n",
+      "-------------------------------------------\n",
+      "Epoch[12/500]:\n",
+      "   Training loss: 0.0001797738181977421\n",
+      "   Validation loss: 0.0017989705643368318\n",
+      "-------------------------------------------\n",
+      "Epoch 00013: reducing learning rate of group 0 to 1.0000e-05.\n",
+      "Epoch[13/500]:\n",
+      "   Training loss: 0.0007095902177131207\n",
+      "   Validation loss: 0.00022479546638630527\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 11\n",
       "Saved best model at epoch 14\n",
-      "Saved best model at epoch 17\n",
+      "Epoch[14/500]:\n",
+      "   Training loss: 0.00013625014023465666\n",
+      "   Validation loss: 2.4050625466002482e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 15\n",
+      "Epoch[15/500]:\n",
+      "   Training loss: 1.9558198771360155e-05\n",
+      "   Validation loss: 1.344978055092095e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[16/500]:\n",
+      "   Training loss: 1.2507914347088392e-05\n",
+      "   Validation loss: 1.961725792571315e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[17/500]:\n",
+      "   Training loss: 9.131270878842507e-06\n",
+      "   Validation loss: 1.55877480442702e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 18\n",
+      "Epoch[18/500]:\n",
+      "   Training loss: 9.961867444397855e-06\n",
+      "   Validation loss: 9.37319432357491e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[19/500]:\n",
+      "   Training loss: 8.743872805311963e-06\n",
+      "   Validation loss: 1.9184707317292415e-05\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 20\n",
       "Epoch[20/500]:\n",
-      "   Training loss: 3.5019522566080426e-05\n",
-      "   Validation loss: 0.0003292494768145128\n",
+      "   Training loss: 7.150765145849241e-06\n",
+      "   Validation loss: 8.850422350416307e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 21\n",
+      "Epoch[21/500]:\n",
+      "   Training loss: 5.703378856825615e-06\n",
+      "   Validation loss: 7.543047381605244e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[22/500]:\n",
+      "   Training loss: 8.013138734717863e-06\n",
+      "   Validation loss: 8.952159190409917e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[23/500]:\n",
+      "   Training loss: 6.19136276019242e-06\n",
+      "   Validation loss: 8.301584636471134e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[24/500]:\n",
+      "   Training loss: 7.92925344849412e-06\n",
+      "   Validation loss: 9.395087951323534e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[25/500]:\n",
+      "   Training loss: 5.1531985210129885e-06\n",
+      "   Validation loss: 1.1800227275697566e-05\n",
+      "-------------------------------------------\n",
+      "Epoch[26/500]:\n",
+      "   Training loss: 5.631712101714202e-06\n",
+      "   Validation loss: 7.911506403990098e-06\n",
+      "-------------------------------------------\n",
       "Epoch 00027: reducing learning rate of group 0 to 1.0000e-06.\n",
-      "Saved best model at epoch 28\n",
-      "Saved best model at epoch 29\n",
+      "Epoch[27/500]:\n",
+      "   Training loss: 7.251882259204902e-06\n",
+      "   Validation loss: 7.76747890932161e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[28/500]:\n",
+      "   Training loss: 3.7308577708959695e-06\n",
+      "   Validation loss: 7.582296652695683e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[29/500]:\n",
+      "   Training loss: 2.0162085395449903e-06\n",
+      "   Validation loss: 7.77820236975166e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 30\n",
       "Epoch[30/500]:\n",
-      "   Training loss: 4.805108672694499e-06\n",
-      "   Validation loss: 1.004061184560075e-05\n",
+      "   Training loss: 1.4638856039390636e-06\n",
+      "   Validation loss: 6.9505555191956495e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 31\n",
+      "Epoch[31/500]:\n",
+      "   Training loss: 1.2789631310145418e-06\n",
+      "   Validation loss: 6.720955559661201e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 32\n",
-      "Saved best model at epoch 33\n",
+      "Epoch[32/500]:\n",
+      "   Training loss: 1.1391979383675623e-06\n",
+      "   Validation loss: 6.372789032590015e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[33/500]:\n",
+      "   Training loss: 9.812955841452637e-07\n",
+      "   Validation loss: 6.456031829736958e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[34/500]:\n",
+      "   Training loss: 9.609353012338017e-07\n",
+      "   Validation loss: 6.528563722198428e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 35\n",
+      "Epoch[35/500]:\n",
+      "   Training loss: 8.965151095192851e-07\n",
+      "   Validation loss: 6.266986179050417e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 36\n",
+      "Epoch[36/500]:\n",
+      "   Training loss: 7.95339518516651e-07\n",
+      "   Validation loss: 6.121748041500425e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 37\n",
-      "Saved best model at epoch 38\n",
+      "Epoch[37/500]:\n",
+      "   Training loss: 8.176083215048865e-07\n",
+      "   Validation loss: 5.985950133323645e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[38/500]:\n",
+      "   Training loss: 7.456755162926602e-07\n",
+      "   Validation loss: 6.042196001552335e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[39/500]:\n",
+      "   Training loss: 6.801350315595314e-07\n",
+      "   Validation loss: 6.426411778391162e-06\n",
+      "-------------------------------------------\n",
       "Epoch[40/500]:\n",
-      "   Training loss: 2.945703872861096e-06\n",
-      "   Validation loss: 7.783493156380524e-06\n",
+      "   Training loss: 6.261854646038973e-07\n",
+      "   Validation loss: 6.055836071291355e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[41/500]:\n",
+      "   Training loss: 6.440675201697201e-07\n",
+      "   Validation loss: 6.016102545860138e-06\n",
       "-------------------------------------------\n",
       "Saved best model at epoch 42\n",
-      "Saved best model at epoch 44\n",
-      "Saved best model at epoch 46\n",
-      "Epoch 00049: reducing learning rate of group 0 to 1.0000e-07.\n",
-      "Saved best model at epoch 50\n",
+      "Epoch[42/500]:\n",
+      "   Training loss: 5.756359933220372e-07\n",
+      "   Validation loss: 5.902835907867815e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 43\n",
+      "Epoch[43/500]:\n",
+      "   Training loss: 5.719382984001071e-07\n",
+      "   Validation loss: 5.821734206216576e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[44/500]:\n",
+      "   Training loss: 5.583247692569031e-07\n",
+      "   Validation loss: 5.877522654728743e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 45\n",
+      "Epoch[45/500]:\n",
+      "   Training loss: 5.423317430883713e-07\n",
+      "   Validation loss: 5.771396636810559e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[46/500]:\n",
+      "   Training loss: 4.838645372867179e-07\n",
+      "   Validation loss: 6.271034002549869e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 47\n",
+      "Epoch[47/500]:\n",
+      "   Training loss: 5.15592343428446e-07\n",
+      "   Validation loss: 5.767118124119266e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[48/500]:\n",
+      "   Training loss: 4.3834841464230447e-07\n",
+      "   Validation loss: 5.878702004859095e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 49\n",
+      "Epoch[49/500]:\n",
+      "   Training loss: 4.1720017337245293e-07\n",
+      "   Validation loss: 5.563803711890839e-06\n",
+      "-------------------------------------------\n",
       "Epoch[50/500]:\n",
-      "   Training loss: 1.950272702908919e-06\n",
-      "   Validation loss: 7.308104989598736e-06\n",
+      "   Training loss: 3.975368744347383e-07\n",
+      "   Validation loss: 5.619411625761413e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[51/500]:\n",
+      "   Training loss: 3.835410507339094e-07\n",
+      "   Validation loss: 5.848775599524051e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 51\n",
       "Saved best model at epoch 52\n",
+      "Epoch[52/500]:\n",
+      "   Training loss: 3.842289073776335e-07\n",
+      "   Validation loss: 5.518406341879628e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 53\n",
+      "Epoch[53/500]:\n",
+      "   Training loss: 3.638580359641217e-07\n",
+      "   Validation loss: 5.502602111036042e-06\n",
+      "-------------------------------------------\n",
+      "Saved best model at epoch 54\n",
+      "Epoch[54/500]:\n",
+      "   Training loss: 3.4207596041690465e-07\n",
+      "   Validation loss: 5.4535120071764755e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[55/500]:\n",
+      "   Training loss: 3.305865027897607e-07\n",
+      "   Validation loss: 5.4755958692655074e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 56\n",
-      "Saved best model at epoch 57\n",
+      "Epoch[56/500]:\n",
+      "   Training loss: 3.2388758303537537e-07\n",
+      "   Validation loss: 5.424640079566394e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[57/500]:\n",
+      "   Training loss: 3.107785154388127e-07\n",
+      "   Validation loss: 5.6910841030827365e-06\n",
+      "-------------------------------------------\n",
       "Saved best model at epoch 58\n",
-      "Saved best model at epoch 59\n",
+      "Epoch[58/500]:\n",
+      "   Training loss: 3.0417785023397226e-07\n",
+      "   Validation loss: 5.306967057066296e-06\n",
+      "-------------------------------------------\n",
+      "Epoch[59/500]:\n",
+      "   Training loss: 2.9605457924575363e-07\n",
+      "   Validation loss: 5.541419589593202e-06\n",
+      "-------------------------------------------\n",
       "Epoch[60/500]:\n",
-      "   Training loss: 1.7704724045436322e-06\n",
-      "   Validation loss: 7.1334162785041194e-06\n",
+      "   Training loss: 2.8629057656309726e-07\n",
+      "   Validation loss: 5.537760388977791e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 62\n",
-      "Saved best model at epoch 63\n",
-      "Epoch 00064: reducing learning rate of group 0 to 1.0000e-08.\n",
-      "Saved best model at epoch 64\n",
-      "Saved best model at epoch 65\n",
-      "Saved best model at epoch 66\n",
-      "Saved best model at epoch 67\n",
-      "Saved best model at epoch 68\n",
-      "Saved best model at epoch 69\n",
-      "Saved best model at epoch 70\n",
-      "Epoch[70/500]:\n",
-      "   Training loss: 1.691590368407025e-06\n",
-      "   Validation loss: 7.071051679360719e-06\n",
+      "Epoch[61/500]:\n",
+      "   Training loss: 2.7941149634989196e-07\n",
+      "   Validation loss: 5.591474502817181e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 71\n",
-      "Saved best model at epoch 72\n",
-      "Saved best model at epoch 75\n",
-      "Saved best model at epoch 76\n",
-      "Saved best model at epoch 79\n",
-      "Epoch[80/500]:\n",
-      "   Training loss: 1.6865784254098848e-06\n",
-      "   Validation loss: 7.0582436983488306e-06\n",
+      "Epoch[62/500]:\n",
+      "   Training loss: 2.7869111311783624e-07\n",
+      "   Validation loss: 5.570087594186569e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 81\n",
-      "Saved best model at epoch 84\n",
-      "Saved best model at epoch 85\n",
-      "Saved best model at epoch 87\n",
-      "Saved best model at epoch 88\n",
-      "Saved best model at epoch 90\n",
-      "Epoch[90/500]:\n",
-      "   Training loss: 1.6809502857580552e-06\n",
-      "   Validation loss: 7.049325982048596e-06\n",
+      "Epoch[63/500]:\n",
+      "   Training loss: 2.7462285775510726e-07\n",
+      "   Validation loss: 5.7217946449254e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 93\n",
-      "Saved best model at epoch 95\n",
-      "Saved best model at epoch 96\n",
-      "Saved best model at epoch 97\n",
-      "Saved best model at epoch 99\n",
-      "Saved best model at epoch 100\n",
-      "Epoch[100/500]:\n",
-      "   Training loss: 1.6765387856307238e-06\n",
-      "   Validation loss: 7.040213757230931e-06\n",
+      "Epoch 00064: reducing learning rate of group 0 to 1.0000e-07.\n",
+      "Epoch[64/500]:\n",
+      "   Training loss: 2.716082580691312e-07\n",
+      "   Validation loss: 5.490519916295616e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 101\n",
-      "Saved best model at epoch 103\n",
-      "Saved best model at epoch 104\n",
-      "Saved best model at epoch 105\n",
-      "Saved best model at epoch 107\n",
-      "Saved best model at epoch 108\n",
-      "Epoch[110/500]:\n",
-      "   Training loss: 1.6722217330426907e-06\n",
-      "   Validation loss: 7.035689766429935e-06\n",
+      "Epoch[65/500]:\n",
+      "   Training loss: 2.626023258137926e-07\n",
+      "   Validation loss: 5.516880578327314e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 111\n",
-      "Saved best model at epoch 112\n",
-      "Saved best model at epoch 118\n",
-      "Epoch[120/500]:\n",
-      "   Training loss: 1.6678898170695367e-06\n",
-      "   Validation loss: 7.02710650341693e-06\n",
+      "Epoch[66/500]:\n",
+      "   Training loss: 2.612348280161802e-07\n",
+      "   Validation loss: 5.525215054367893e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 121\n",
-      "Saved best model at epoch 124\n",
-      "Epoch[130/500]:\n",
-      "   Training loss: 1.6639017916009257e-06\n",
-      "   Validation loss: 7.0222877414300445e-06\n",
+      "Epoch[67/500]:\n",
+      "   Training loss: 2.605064401025554e-07\n",
+      "   Validation loss: 5.538690987724161e-06\n",
       "-------------------------------------------\n",
-      "Saved best model at epoch 131\n",
-      "Saved best model at epoch 133\n",
-      "Saved best model at epoch 135\n",
-      "Saved best model at epoch 136\n",
-      "Saved best model at epoch 137\n",
-      "Epoch[140/500]:\n",
-      "   Training loss: 1.6592208918417297e-06\n",
-      "   Validation loss: 7.015908560992011e-06\n",
+      "Epoch[68/500]:\n",
+      "   Training loss: 2.5993086083020237e-07\n",
+      "   Validation loss: 5.547911123944965e-06\n",
       "-------------------------------------------\n",
-      "Validation loss has not improved in 10 epochs. Stopping training at epoch 147.\n"
+      "Validation loss has not improved in 10 epochs. Stopping training at epoch 68.\n"
      ]
     },
     {
      "data": {
-      "image/png": "",
+      "image/png": "",
       "text/plain": [
        "<Figure size 800x600 with 1 Axes>"
       ]
@@ -1422,7 +1591,7 @@
     },
     {
      "data": {
-      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAoAAAAH9CAYAAACKmc2hAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACdz0lEQVR4nOzddXhT1/8H8PeN1tPSUqUGpRQbUHQwGC2+4Qx3mTtsPzZmTIAx/zJjBkUmbAzbhg9nuLu2WB3qGjm/P7pmDRVaSJq0eb+eJw/k3nPu/dw0aT8559xzJCGEABERERHZDZm1AyAiIiKi6sUEkIiIiMjOMAEkIiIisjNMAImIiIjsDBNAIiIiIjvDBJCIiIjIzjABJCIiIrIzTACJiIiI7AwTQCIiIiI7wwTQhsTExECSJISEhFg7FCKqRbp27QpJkjBz5kxrh0JENoIJoAXo9Xr8+uuvGDduHMLDw+Hu7g6VSgVvb2888MADePXVV3Hy5Elrh1ntZs6cCUmSIEkSnJycEB8fX27ZuLg4Y9lt27aZNY5Vq1Zh5syZWLVqlVmPa4u2bdtmfB3v5hEXF1ctcR49ehQzZ87EZ599dk/HKf4SZWvXR1Vz5MgRvPDCC2jRogU8PT2hVqvh7++Pbt264aOPPkJ6erpFzx8TE4OZM2ea/XePOcXFxWHmzJn3nNSX9ztCoVCgbt26ePDBB/HJJ58gOzv7jsc6fvw4pk+fjnbt2sHHxwcqlQoajQZNmjTB+PHjsXr1ami12jseZ926dcY4goKCYDAY7ukaqRyCzGrPnj0iPDxcADA+lEqlqFOnjpDJZCbbBw8eLAoKCox1Fy5cKACI4OBg612ABb311lsm1//YY4+VWzY2NtZYbuvWrWaNY/z48QKAGD9+vFmPa4t2794tfHx8ynwolUrj+7O8MlevXq2WOM313i8+DgDh5eVV7nVV9/VZ24MPPigAiLfeesvaoVQoNzdXjB8/XkiSZPL7093d3WSbh4eHWLJkicXiqAmv19atW42vh7mO4+HhYfxsuLm5mfy+btCggYiNjS3zGJmZmWLUqFEmPyNJkoS7u7tQq9WljrN3794KYxoyZIhJnfXr19/TNVLZ2AJoRn/88Qe6du2K8+fPw9PTE3PmzMH58+dRWFiImzdvorCwEAcOHMArr7wCNzc3rFixArm5udYO22oWLFiA8+fPWzuMWq1jx45ITEws89GxY8c7lgkMDLTyFdy9AwcOlHtdteH6apvc3FxERUVh0aJFEEJg9OjROHDgAAoKCpCWlobs7GwsX74cTZo0QVpaGsaOHYtPPvnE2mHXKitWrDB+NjIyMpCQkIAXXngBAHDp0iUMGzasVJ20tDTcf//9+OmnnwAAI0aMwPbt25Gfn4+0tDTk5+fjxo0b+P7773Hffffh0qVL2LNnT7kxpKSkYM2aNZDL5XjyyScBAD/88IP5L5bYBWwuFy5cwJgxY1BQUIAmTZrg6NGjeOWVV9CwYUNjGblcjjZt2mDOnDmIjY3FgAEDrBix9QQGBuK+++6DTqfDjBkzrB0OEdmAZ555Bvv27QMAzJ8/H0uXLkWbNm0gSRIAwMnJCUOGDMHBgwfRo0cPAMDLL79s0920NZ2vry8+/fRTjBkzBkDRl6rin1Gx0aNH49SpU1AoFFi2bBl+/vlndOnSBSqVyljG398fkydPxtGjR/HVV1/BwcGh3HMuWbIEWq0WPXr0wP/93/9BkiSsXr0aN2/etMxF2jNrN0HWFsOGDRMAhIODgzh37lyl6xkMBuP/b+8GO3jwoBg6dKjw9fUVKpVKhIaGihdffFHcunWrwmNmZmaKOXPmiA4dOggPDw+hUqlEvXr1xPDhw8U///xTZp2SXa6xsbEiLi5OTJkyRQQGBgq1Wi3q168vXnvtNZGdnW2sc+LECTF69GhRr149oVarRVhYmHj33XdFYWFhmeco7gIODg4Wf/31l/F8+/btqzCeirqAd+3aJUaPHi2CgoKEWq0Wbm5uom3btuL9998XWVlZJmVLdnWU96hMd/Phw4eN5Y8dO1Zh2bFjxwoAIjo62mT7rVu3xBtvvCFatWolXF1djd2wzZs3F48//rjYvHnzHeO4V8XdXA8++GC5ZU6cOCEeffRRERYWJhwdHYWzs7No3ry5mDFjhkhJSSm33t69e8WoUaNESEiIUKvVwsnJSQQFBYkuXbqId955R1y7ds1Y9k4/k6p0w5XsAi6vu6oiJbv+DAaD+Pbbb0W7du2Eq6urcHFxER06dKhU1+Pp06fFU089JRo3bixcXFyEs7OzCA8PF8OHDxfLly8Xer2+VJ28vDzx6aefivvvv9/YdRYUFCTGjh0rjhw5UuH5dDqdmDdvnmjVqpVwcnISHh4e4sEHHxS//fZbqesqT1U+S8VKDqcwGAziu+++E506dRJ16tQRAMTChQvv+FoJIcTx48eNP7cJEybcsXxqaqrw9vYWAETbtm1L7a/M9Rb/Pir5/i/5/invUfJ9VfL3RkJCgnj66aeN73kfHx8xatQocebMmTLPX9ku3LJ+NwUHB1cYY1WGt5SMo7zffxs2bDCW+fzzz43b165da9z+zjvvVPqcZb3/izVp0kQAED///LMQ4r+f5WeffVbp41PlMAE0g8TEROP4vsmTJ9/1cUomgD/++KNxjJZGozEZP9i0adNyfyEfOXJE1KtXz1hWLpcLV1dXk3EZs2fPLlWvZML1+++/C3d3dwFAuLm5CblcbtzXuXNnUVhYKP7880/h5ORkjK/k2I/hw4eXGVvJBFCI/z7YUVFRFcZT1i8lvV4vnnvuOZNfei4uLiaxNmrUSMTFxRnrFI+Hc3BwMCbrt48J2717dyV+UkI0bdpUABAvvfRSuWWys7OFs7OzACBiYmKM269duyaCgoKMccpkMuHh4WESe0VJmbncKQGcO3euyfvOyclJqFQq43M/Pz9x+PDhUvViYmJM3g/FyUTJn1XJxKDkeCOZTFbqZ/Lhhx9W+prMlQC+/vrrYsCAAQKAUCgUpeJ/8803yz3G+++/b/K6OTg4lBoDnJaWZlLn+vXrolmzZsb9SqVSaDQak/fIvHnzyjxffn6+6NWrl0nZkmPmpk+fXmFCdDefpWLFCeC4ceOM47aK388ymazSCeATTzxhrHv58uVK1Xn77beN8d3+JfJuE8BffvnFZHyss7NzheNGi8+/YMEC4evrKwAIR0dH4eLiYvLzX7duXanz30sC2KZNG+Hh4WHcd3uMzz33XMUvXjlxlJcAnjp1ylhm1qxZxu0PPfSQ8W9AycaBu7Vnzx7j3528vDwhhBALFiwQAETz5s3v+fhkigmgGfz888/GD8eff/5518cp/uPl5OQk1Gq1mDJlivGXTU5Ojvjiiy+Mv5jeeOONUvXj4+ON34oHDx4sDh48aGyNS0pKEm+88YZQKBQCgFi5cqVJ3ZIJl7u7u+jWrZs4deqUEKJoYPa8efOMfxBef/11odFoxPDhw41/FLKyssRrr71mPMamTZtKxXd7Alj8YQdQ6hfknRLA119/XQAQ3t7e4ssvvxQ3b94UQghRWFgotm7dKlq1aiUAiMjIyFLfNs1xE8jcuXMFAOHv71/ut9klS5YY/4iUTNgnT54sAIiQkBCxefNmodPphBBFrThxcXHi66+/FtOnT7/r2CqrogTw+++/NyYCs2bNEgkJCcYYDx48KKKjowUAUa9ePZNry8nJMX7hGDNmjLh48aJxX3Z2tjh48KB4+eWXxV9//WVyPkvcBHIvCaCHh4fQaDQiJiZG5ObmCiGKEvd+/foZE5Xz58+Xqv/VV18Zz9+/f3+TlrucnByxceNGMXz4cJGRkWHcrtPpRPv27Y1/SJcuXWq8OezSpUuib9++xi9va9euLXXOF1980bj/vffeMx47KSlJPPnkk8bjlpcQmeOz5OLiIhQKhfjoo4+M58/KyhLx8fGVet2Lb5xr3bp1pcoLUdQ6Xfxav//++yb77jYBrEp9If5LzjQajQgKChIbN2409urs27dPNG/e3JjQlGz1FuLeEsCq1L+TyiSAJXtsvv76ayGEEFqt1pjoPvLII/cUQ7EpU6YIwLQhJTMz09jYsH//frOch4owATSD4l+gAMSNGzfu+jgl/3iVl5xMnTpVABBhYWGl9k2aNEkAEKNGjSr3HJ988okAIFq0aGGyvWTC1bRpU5Gfn1+qbnF3JgDRo0cPk+7rYp07dy71AS52ewIohBCDBg0SAETLli1NjldRAhgbGyvkcrlwdHQUR48eLfM6MzMzjS2htye75kgAr1+/bmzR2bBhQ5llevbsaUyESmrcuLEAIH766ae7Pr85lJcAZmZmGluAy7v7TqvVitatWwsA4tNPPzVu37dvnzHp1Wq1lY7FGncBDxo0qFT94tcEgNiyZUup/fn5+cLf318AEO+9957Jvlu3bhmT3xEjRpT5+SjLL7/8YjxnWe8lrVZrTBCbNWtmsu/GjRvGL3VlfSkUQoiRI0caj397QmOuzxKAclso76SwsNB4jClTplS6nl6vN7ZI3/4Zq+4EUKVSidOnT5fan5SUZOwOf+qpp0z21aQE8OGHHzaWKf5Sc/HixTJbBe9Wdna28fOzY8cOk32jR48WAMQTTzxxz+eh//AmEDMoOTi1Tp06Zjnm66+/Xub24htHLl68aHIHcX5+vvEurOnTp5d73HHjxgEAjh07hqSkpDLLvPjii1Cr1aW29+rVy/j/V155xTg4u6wyx48fLzeGkmbPng25XI6jR4/i559/rlSdmJgY6PV69O7dGy1atCizjKurKwYOHAgA2LBhQ6WOWxUBAQGIjo4GUDRo+XYJCQn4+++/AQBjx4412efu7m4sY4t+//13pKeno1WrViY/85IUCgVGjhwJwPT1Lb624jvfrSk1NRVJSUnlPm7dulVu3U6dOiEqKqrUdrVaXe57fPny5cjKyoJSqcQnn3xS5uejLMuWLQMA3H///ejZs2ep/QqFAm+99RYA4OTJkzhx4oTJOXU6HRwdHfHSSy+VefyK5okz12fJw8MDjz/+eLnnqUjJn4Onp2el68lkMnh4eACA1d9rQ4cORePGjUtt9/b2xhNPPAHgv59zTZGfn49jx45h1KhR+OuvvwAAUVFRaNmyJQDz/9379ddfkZWVhdDQUDzwwAMm+8aPHw8A+Pnnn5GXl3fP56IiCmsHQKXVqVMHYWFhZe7z9/c3/j8tLQ1OTk4AgEOHDiE/Px8AyvwjUpYrV67Ax8en1PZ27dqVWb5k2bZt21ZYJi0trVIxREREYOLEifj+++/xxhtvYOjQoVAqlRXW2b17NwBg48aN8PX1Lbdc8cSlV65cqVQsVTVu3Dhs3rwZK1euRE5ODpydnY37fvrpJ+j1evj7+6N79+4m9fr27Ys9e/bglVdewdmzZzF48GB07NgRbm5uFomzqopf3zNnzlT4+hb/Ii75+jZo0AARERE4e/Ys2rdvjyeffBK9evVC8+bNIZfLLRv4bWJjY+96VZ327duXu6/4M3h7AvnPP/8AAFq3bg0/P79Kn+vgwYMAUOp9UlJUVBTkcjn0ej0OHjyI5s2bm9Rt06ZNue+f8PBwBAQE4MaNG6X2meuz1LZtW5O7Pu1N8ZfB8vbNnj0bN2/eRGxsLEJDQ6sxsqop60tPsVatWlX6S/rdWLBgAYCiL8y3f3nq1q2b8T28fPnyUl+q6e6wBdAMSn5rrahVobJcXV3L3adQ/Jezl5xRveSqGhW1epRs9StvDsLyzl/y3HcqU5nZ3ovNnDkTjo6OuHz5MubPn3/H8sXXmpOTU+F15uTkACj/Ou/V4MGD4eLigpycHKxYscJkX3Gr4OjRoyGTmX7MXn75ZQwbNgxarRbfffcd+vTpA3d3dzRv3hwvv/wyzp07Z5F4K6v49c3Pz6/w9c3MzARg+vrK5XL88ssvCA0NxZUrV/DKK6+gVatWcHNzQ48ePfD111/XiLkvK/MZvP09npiYCAAIDg6u0rmSk5MBFLUql8fBwQFeXl4m5StbFwDq1atX5nZzfZa8vb0rPH9FSrYeVaUlz2AwGL9oVqXl0BIqev1L7iv5s7NFHh4e8PHxgY+PDwICAtCkSRM88sgjWLJkCfbt22fSCGDOv3vnzp3Drl27APzXS1WSTCYzJn3FiSLdOyaAZtC0aVPj/48cOWKVGPR6vfH/eXl5EEXjOyt8dO3a1Sqx3i4gIADPPvssAOC9996745JDxdc6ffr0Sl2npeYJc3Z2xuDBgwEAixcvNm4/ceIEjh07BqB09y8AKJVKLFu2DEePHsWbb76J6OhoODk54eTJk/joo4/QtGlTfPzxxxaJuTKKX9/hw4dX6vW9fTm1Fi1a4OzZs/j999/x2GOPoVmzZsjLy8PmzZvx1FNPISIiwqQbs7aobJevLTHXZ+leWneVSqVxvtTDhw9Xut6pU6dQWFgIwPR3MN29khNBX79+HadOncJvv/2GMWPGlOqZCQ4OhouLC4B7/7tXMqkLCwsrc2m6999/HwCwfft2XLp06Z7OR0WYAJpBVFSUsZVn5cqVVomhZPeNpbo8LemVV16Bh4cHkpOT75j8FF+rLVxncYK3ZcsWYxdbcetfy5YtjV11ZWnRogXefvtt/P3330hPT8fmzZvRpUsX6PV6vPzyy8YksrqZ4/VVqVQYPHgwvvnmG5w4cQIpKSmYP38+6tSpg2vXrhnH9NQmd/u6FbeeXb9+vdwy+fn5xtaxkq1txf8vq3u3pPL228pnqVu3bgCKEonY2NhK1SnZ6n57F2xxK23xsJiyZGRkVDXMclX0+pfcV/JnV7JHpbw4zRmjuSkUCnTp0gUAsGnTJmMrcVXpdDqTL9B3IoRgK6CZMAE0Ax8fHwwZMgRA0divqixvJoQwSwwlx+D88ccfZjlmdfLw8MArr7wCAPj444+RkpJSbtlOnToBADZv3lzhL/jyFCfr5njto6OjUa9ePRgMBvz000/Gf4GyuzLKo1Ao0K1bN/z1119Qq9UQQmDz5s33HN/dKH59Dx06ZLYbVTw9PfH4449j7ty5AIr+0Jfs7jPnz8RaipfWO3jwYJVetzZt2gCA8aahsmzbtg06nQ6A6fjb4roHDx4st+X8woUL5SaX9/pZMpfiGyWEEHjnnXfuWP7mzZv48ssvARSNubx93HLxzSHXrl0r9xi3r2hRUlXfj1u3br3jvjp16piM/yuOsaI4KxNjVeI0t6effhpAUaJalWX5DAaD8f9//fUXEhMToVQqcf36dWRlZZX7KG4cWLRokUmvF90dJoBm8t5778HFxQV5eXkYPHjwHb+Rp6WlYciQIWb7hufs7IxRo0YBAObOnYurV69WWN4cYxXN7dlnn0W9evWQlZWFd999t9xykyZNgkKhQGpqqvHuyPIUFhaW+sNYPFg+PT39nmOWyWQYPXo0gKKWv+KWQLlcbvx53K6goKDc46nVamN32u1jB6vL0KFD4e7uDq1Wi6lTp1b4x8VgMJi8jhVdGwA4Ojoa/1/y+sz5M7GWoUOHws3NDTqdDi+++GKl/yiPGDECALBnzx5s3Lix1H6dTmdMipo1a4ZmzZoZ9w0ZMgRyuRx5eXn46KOPyjx+RQnVvX6WzKVFixbGL0wxMTH45ptvyi2bn5+PkSNHIiUlBTKZDB9++GGZxwOK7louq2Vqy5YtFa5HW9X342+//Vbm2N3U1FTjtQwfPtxkX3h4uPHz8Pvvv5eqazAYMGfOnDvGWJU4ze2hhx4y3nT4zjvvYPny5Xes8+233+K7774zPi9e57f4Rg8XF5dyHyNGjIBMJsONGzcsMruD3bHE3DL2auXKlcZ5qby8vMT7778vLly4YNyv0+nE4cOHxRtvvGGcZ63kigCVmQvt9iXbSoqPjzfOUebv7y8WL14sMjMzjfuTk5PF8uXLxcCBA0XPnj0rfdxilZl3qqJrKGsewNsVT0Bc8lHW3FQlVwEYO3asOHHihHGfVqsVR44cEW+//bYIDAwUO3fuNKn73XffCfw72W95yzRVxcmTJ42xtGnTRgAQffr0Kbe8j4+PeOWVV8SePXtM5lu8cOGCGDp0qMC/Ew0XT8RdrOSca+ZQ0UTQMTExxnP16dNH7N271zgJsF6vF6dPnxYfffSRiIiIMFkaLSYmRnTs2FHMnz9fXLp0ybhdp9OJ9evXG+eTu//++03Od+HCBeP5li1bdtfXZM6l4MpT0fxx8+fPN55/wIABpSaC/vPPP0X//v0rnAj6xx9/NE7gfvnyZdG/f3/jMcuaCLp4FQ+ZTCZmz55t/MwnJyeLp59+2njc8q7rXj5L5phTs1h2drbx84N/5/Y7ePCgcT7F3Nxc8fvvvxtX4QEg5s6dW+axzp07Z5yns1+/fsZJmHNzc0VMTIxwc3Mzzs9X1s+xeFL7sLAwcf369XJjLo5Do9GIkJAQsWnTJmO8+/fvFy1atBAAhKurq7hy5Uqp+mPGjDHuX7ZsmXEC8LNnz4r+/fsbYyzr92BOTo7x780HH3xQ6Xknb1eZeQArkpqaapzbVJIkMWrUKLFjxw6TJUHj4+NFTEyMiIyMFCgxd2h8fLxxgYEFCxZU6nzFc80OHjy4yrGSKSaAZrZr1y4RFhZmksCoVKpSS0FJkiRGjhxp8iG51wRQiKI1SItn1S/+o1CnTh3jkmTFj+7du1fpuEJUTwKo0+lERETEHRNAg8Eg3njjDZMlxxwdHYWnp6fJElYAxK5du0zq3rp1S9StW9e438vLSwQHB4vg4GCxZ8+ecmOrSPEvtuJH8TqWZSlZrnjZrOLl6YrfGyUnVy5WnQmgEEJ8/fXXJku/qdVq4enpaVyNpvixdOlSY53b11ItrlPyve/v719m4t2tWzdjGVdXV+PPpKzXojxVmQjax8dH/PLLL2W+JnebAAohxOzZs02u19HRsVJLwZVMbFQqlfFLYvH75H//+1+Z58vLyxPdu3c3lpXL5cLDw6PSS8Hdy2fJnAmgEEVJTfGkv8UPpVJpcj1A0WpFJZdXLMubb75pchyNRmOcNHvgwIHGCfzL+jmeP3/e+JksXp6w+P1Y1jrWJZeCc3JyMlkKTq1Wl7tC1LVr14xf2ouvtXjZQVdXV7Ft27YKfw8WrypUfN6goCARHBwspk2bVunX/F4TQCGEyMjIEMOGDTP5GUmSVOp3GwDRuHFjcfDgQSGEEHPmzDFe953WuC82b948Y53k5OS7ipeKMAG0AJ1OJ37++WcxevRoERYWJtzc3IRSqRReXl7igQceEK+99po4e/ZsqXrmSACFKFqt4JtvvhE9e/YU3t7eQqFQCCcnJxEWFiaGDh0qvv3221IfNltJAIUQYsWKFXdMAIudOHFCPPXUU6Jx48bG5ai8vLxEx44dxcsvvyz++eefMuudOXNGjBgxQgQEBJgkNHf7C/Czzz4zHsPNzc24fFhZNm7cKF599VXRuXNnERwcLBwcHISDg4MICwsTEydONP5yvF11J4BCFL0vXnrpJdGiRQvjutAeHh6iTZs24tlnnxWbNm0yWR7s5s2bYvHixWLixImiRYsWxvefRqMR7dq1E++++26p5KdYWlqaePHFF0V4eLjJH407rcZQ0u0J6J0et69Va44EUIii9+Wjjz4qwsLCjGvDNmrUSIwcOVKsWLGizOUD8/LyxCeffCI6dOggNBqNUKlUIjAwUIwdO9akJbEsWq1W/O9//xMtW7YUjo6Owt3dXXTp0kX8+uuvlb6uu/ksmTsBLHbw4EHx7LPPimbNmgkPDw+hVCqFr6+v6Nq1q5g7d26lk4UlS5aIDh06CGdnZ+Hi4iLatGkj5s+fLwwGwx1/jnv27BH9+/cXPj4+xsTx9t+PJX9vJCQkiKeffloEBwcLlUolvL29xciRI8tcIaSka9euiSlTphh/F/n7+4tx48YZe48q+t2Un58vZs6cKZo3b25cLq2qPw9zJIDFjh49Kl566SXRpk0bUbduXaFQKISrq6to3LixGD9+vPjzzz+NS18KIUTDhg0FUHGPye3i4+ONX6Y+/vjje4rX3klC1OBR10RERFZSPPXP1q1bbWZaLaLK4k0gRERERHaGCSARERGRnWECSERERGRnmAASERER2RnFnYsQERHR7XgPJdVkbAEkIiIisjOVagE0GAyIj4+Hq6ur8bZ3IiIiIrIdQghkZWXB39//jsuJVioBjI+PR2BgoFmCIyIiIiLLuXbtGurVq1dhmUolgK6ursYDllyAmoiIiIhsQ2ZmJgIDA415W0UqlQAWd/u6ubkxASQiIiKyYZUZrsebQIiIiIjsDBNAIiIiIjvDBJCIiIjIzph1IujCwkLk5eWZ85BUTRwdHaFSqawdBhER1VB6vR5ardbaYdRqSqUScrncLMcySwJoMBhw8eJF5OXlcZ7AGkoIAUdHR4SFhd1x7iAiIqJiQggkJiYiPT3d2qHYBXd3d/j6+t5zvmWWBPDixYsoKCiAn58fnJ2dmQTWMEII5OTkICkpCRcvXkR4eLi1QyIiohqiOPnz9vaGk5MTcwALEUIgNzcXycnJAAA/P797Ot49J4DF3b5+fn7w9va+18ORlTg7OwMAEhISUFhYyO5gIiK6I71eb0z+PD09rR1Orefo6AgASE5Ohre39z11B99zX19xt29xAkE1V3HrLcdxEhFRZRSP+XNycrJyJPaj+LW+1/GWZhvsxSbfmo8/QyIiuhv8+1F9zPVac7Q/ERERkZ2p9Qng559/Xqk18YiIiKj2i4mJgbu7+z0fR5IkrFq16p6PYy1WSwAfeeQRSJKE0aNHl9o3btw4SJKERx55xAqRVd3nn38OSZIqfJw7d87aYRIREdUKEyZMwMCBA60dRo1m1RZAX19frFmzBjk5OcZtubm5WLVq1T3f3gwABQUF93yM2xkMhlIDLydNmoSrV68aHy1btsSIESNMtjVo0MDssRARERHdDasmgM2aNYOfnx+WLFli3LZkyRL4+fmhadOmJmV///13tG7dGq6urnB3d0dUVBROnz4NoCgpO3PmDCRJwnfffYe2bdtCrVbj22+/LXXO+Ph4NGvWDD179kReXh70ej1mzJiBgIAAODg4oFGjRoiJiTGWX7t2LSRJwvLly9G0aVOo1Wps2rTJ5JjOzs4IDAw0PpRKJZycnBAYGIg1a9agefPmpZLGHj16YNCgQQCAadOmISIiAh999BF8fX3h4OCAhx56CDdv3jSp8+mnn6J+/fpQq9UIDQ3F3Llzjfvy8/Mxfvx41K1bF2q1Gv7+/pgxY0YVfhpEREQ13yeffILmzZsb/zY/9dRTyM7OLlVu1apVaNiwIRwcHNCrVy9cu3bNZP/q1asRGRkJBwcH1K9fH2+//TZ0Ol11XYbFWX0M4JgxY7B48WLj80WLFmHMmDGlymVnZ+P555/H3r17sW7dOshkMgwcOBBarRY6nQ5CCADAzJkz8dRTT+HQoUPo27evyTEuXbqETp06ISIiAmvXroWjoyNee+01/PLLL/j8889x5MgRPPPMM3j88cexbt06k7qvvfYaZs2ahWPHjqFNmzaVvr4JEyZAr9fjl19+MW67ceMGtm7dismTJxu3Xb16Fb///jtWrlyJVatW4dSpU5g0aZJx//z58zFnzhzMnDkTx44dw9tvv405c+bgiy++AADMmTMHGzduxNKlS3HixAnExMQgJCSk0nESERHVBjKZDPPmzcOpU6ewaNEibNmyBf/3f/9nUiY3NxezZs3C4sWLsXv3bqSnp2PEiBHG/Tt37sS4cePw/PPP4/Tp0/jmm28QExODWbNmVfflWI6ohIyMDAFAZGRklNqXnp4ujh07JnJycipzKKMhQ4aI7t27ixs3bgiVSiXOnTsnzp07J9RqtYiPjxfdu3cXQ4YMKbd+fHy8ACD27NkjtFqtOHv2rAAg3n33XWEwGIRWqxUFBQVi3rx5wsXFRRw7dkz4+vqKiRMnCr1eL4QQIjc3Vzg4OIjNmzebHHvYsGGiX79+Qggh/vrrLwFA/Pjjj5W+trZt24pJkyYZn48ZM0Z06dLF+Pytt94S9erVM8YxdepUIZfLxeXLl41lli9fLmQymbh69aoQQojAwEDxzTffmJzn5ZdfFi1bthRCCDFhwgTRoUMH4zHvRk5Ojjh27JhIT0+/62MQEZH9yMvLE6dPnxZ5eXnVet7x48eLAQMGVKrsb7/9Jjw9PY3PFy5cKACIvXv3GredOXNGABD79u0TQgjRrVs3MXv2bJPjLFmyRPj5+RmfAxArV668+4u4SxW95hXla7czy1Jw98Lf3x9du3bFt99+CyEEunbtWub4v5MnT+LVV1/FkSNHkJ6eDoPBAACIi4tD+/btjeXat28PSZIgl8shhIAQAgUFBejatSsGDRqEH374wVj29OnTyM/PR79+/UzOpdVq0bhxY5Nt999//11f45NPPokuXbogNjYWoaGh+OmnnzBixAiTNXd9fX0RGhpqfN61a1cYDAacPHkSGo0G165dw3PPPYcXXnjBWEav18PFxQUAMGXKFDz88MOoX78+oqKi0L9/f2MXMxERkb3YvHkz5syZg7NnzyIzMxM6nQ75+fnIzc01TqKsUCjQtm1bY52IiAi4u7vjzJkzaNeuHY4dO4bdu3ebtPjp9fpSx6nJrJ4AAkU3UUydOhUA8Nlnn5VZpl+/fqhXrx6++uorBAYGwmAwoE2bNtBqtSaTIhYnRMV33wohoFKp8MADD2DTpk3GJAwAMjMzARSNLwwKCjI5n4ODg8nze5lKpmPHjmjUqBG+++47PPTQQ7h06RKeeOKJStcvjvOzzz5D586dTfYVLwPTqVMnxMbGYsWKFdi0aRPGjRuHTp06Yf369XcdNxERUU0SFxeHvn374sknn8SsWbNQp04d7Nq1C5MnT0ZhYWGlE7fs7Gy8/fbbGDx4cKl9t+cHNZVNJIBDhgzBs88+C0mSymy1SkpKQlxcHObPn49evXoBADZu3Fjp40uShBUrVmDAgAGIiorCtm3bEBISglatWkGlUiEuLg59+vQx2/WUZfz48fj6669x48YNdOzYsdRdwYmJiYiLizOO29u+fTtkMhmaNWuGevXqoW7dundMHD08PDB58mRMnjwZK1aswJAhQ4zrBRIREdV2hw4dgsFgwMcff2zsZfv1119LldPpdDh48CDatWsHADh37hzS09ONvX+RkZE4d+4cwsLCqi/4amYTCaBCoTDOk6dQlA7Jy8sL7u7umD9/PurVq4fLly/jtddeAwBjN+/tircXtw4qFAqsWrUK/fv3R1RUFHbs2IHAwEA88cQTmDFjBvR6PaKjo5GWloZt27ZBo9HgmWeeMds1Tp48GW+99RZ+/vlnfP3116X2q1QqjB49Gh9//DEyMjIwbdo0PPTQQwgMDAQAvPrqq3j11Vfh7u6O/v37Iy8vD3v37sWtW7cwc+ZMzJw5E/7+/mjXrh3kcjmWLVsGLy8vLs5NRES1UkZGBo4ePWqyzcvLC1qtFp9//jn69euH3bt3Y/78+aXqKpVKPPvss5g3bx4UCgWeeeYZdOjQwZgQvvnmm+jbty+CgoLwyCOPQCaT4dixYzh58iTee++96rg8i7P6XcDFPDw84OHhUeY+uVyOmJgYHD9+HJGRkXjppZdMpkDR6/Um5YUQ0Ov1JgkgUPQDX7NmDcLDw9G1a1fcuHEDn376KaZNm4aPP/4YLVq0QL9+/bB+/XqzZ/2enp7o06cPnJycMGrUqFL7g4KCMGDAAPTv3x8DBgxAREQEFixYYNz/4osv4n//+x+WLl2K1q1bo0ePHliyZImxJdHNzQ2ffvopOnbsiI4dO+LatWtYvXq1sYuYiIioNtm2bRtatWpl8liyZAk++eQTzJ07F82aNcOPP/6IOXPmlKrr5OSE6dOnY9SoUejUqRNcXFywbNky4/5evXrhzz//xMaNG9G2bVt06NABn376KYKDg6vzEi1KEmU1n90mMzMTGo0GGRkZcHNzM9mXkZGBK1euICwszCqDIvV6PfR6vXHMH/Bf659cLrepBOj+++9HREQEFi5caLJ92rRp+Ouvv3D27FkrRVYkNzcXFy9eRHBwMDQajVVjISIi25efn28cW19bxsbZuope84rytdvZRBfwvZDL5ZAkCQaDwdgVXHwXcMm7bK0pJSUF69evx/79+/HNN99YOxwiIiKyczU+AQSKJn20lWSvLC1btkRmZiZef/113HfffdYOh4iIiOxcrUgAbd2NGzcq3P/xxx/j448/rqZoiIiIyN7ZbrMZEREREVkEE0AiIiIiO8MEkIiIiMjOMAEkIiIisjNMAImIiIjsDBNAIiIiIjvDBPAOJEnC0qVLrR0GERERkdnYfQJ47do1TJgwAfXq1YNKpYKvry+io6OxZs0aq8Z17tw5SJKEOnXqID093WRfREQEpk2bVuljff7553B1dTVzhERERDXXhAkTjMvIKpVK+Pj4oEePHliwYAEMBoOxXEhIiLFcycf7778PAIiLizOuQHb7vL8JCQlQKBSQJAlxcXHVeXl3ZDMJoFarrfC5JZw7dw6tW7fGrl27MGvWLBw6dAh//fUXunTpgueff97i56+M3NxcvP3229YOg4iIyGL0BoE9l25i9dEb2HPpJvQGUS3n7d27NxISEhAXF4d169YhKioKzz//PPr27QudTmcs98477yAhIcHk8eyzz5ocKyAgAIsXLzbZtmjRIgQEBFTLtVSVTSSAQgisX78eHTp0gIuLCzp06ID169cb1/a1lMceewySJOHw4cMYP348mjdvjtatW2PmzJk4cOCAsVxKSgp69uwJBwcHBAcH46effjI5zsGDB9GlSxc4OTnB09MTgwYNQkJCgnF/u3btMGHCBEyePBlubm7w9PTEJ598gszMTDzyyCNwdnZGUFAQli9fXirGiRMn4ttvv61wNZG8vDw8/vjj8Pb2hqOjI+677z6sXbsWALB27Vo899xzyM7ONn5rqUrrIRERkSWtP5mAB+Zuwcjv9uL5X45i5Hd78cDcLVh/MuHOle+RWq2Gr68vAgICEBkZiRkzZmD16tVYt24dYmJijOVcXV3h6+tr8nB2djY51vjx47Fw4UKTbQsXLsT48eMtfh13w+oJoFarxZ9//okBAwZg3759yMnJwb59+zBgwAD8+eefFmsJTE5Oxs6dO41J2e28vLyM/587dy4eeeQRHDp0CN26dcOjjz6K5ORkAEBqaip69uyJ++67D//88w/++OMPpKSkYNCgQSbHW758OTw9PfHPP/9g8uTJ+L//+z/069cPHTt2xL59+/Dggw/i0UcfRVZWlkm9sWPHIigoCDNmzCj3WiZOnIgDBw5gyZIlOHToEAYNGoRBgwbh5MmTiI6OxrvvvgsXFxdcvXoVV69exZtvvnkvLx0REZFZrD+ZgCeXHkZCRr7J9sSMfDy59HC1JIG3i46ORosWLbBixYoq1evfvz/S0tKwa9cuAMCuXbuQlpaGfv36WSLMe2b1BFCpVGLWrFmlWvuEEJg9ezaUSqVFznvmzBkIIdC4ceM7lh0xYgQee+wxNG3aFJ999hlyc3Oxc+dOAMAHH3yApk2b4osvvkDLli3RsWNHLF68GPv27cOJEyeMx4iIiMAHH3yAZs2aYfbs2VCpVPD09MTUqVON29LT001aHoGim1BmzZqFn376CadPny4V24ULF7B8+XKsWLECvXr1QpMmTfD222+jdevWmD9/PhwcHKDRaAAAgYGBCAwMND4nIiKyFr1B4O0/TqOsvr7ibW//cbrauoNLioiIMBmzN336dLi4uJg8ivOAYkqlEmPGjMGCBQsAAAsWLMCYMWMslsfcK4W1AwCAkydPVmm7OZQc4HknLVq0MP7fzc0NLi4uSExMBACcOHECe/fuhZOTU6l6586dQ/PmzQEATZo0MW5XKBRwd3dHs2bNjNuKxwgUH7ekwYMHo3Xr1njllVdK3Zxy+PBh6PV6k+MDQGFhITw8PCp9jURERNVpf+ytUi1/JQkACRn52B97C/c38Ky+wFDUCCVJkvH5yy+/jAkTJpiUKWts36RJk9CxY0fMnj0bv/32G/bs2WMyltCW2EQC2KxZM+zbt6/M7ZbStGlTSJKEM2fO3LFsWdl7cQKZk5OD6OhofPLJJ6XKBAYGlnuM4ruOislkMpPj3m7u3LmIjo7GP//8Y7I9Ozsbcrkce/fuhVwuN9lXVtc2ERGRLUjOKj/5u5ty5nTmzBmEhoYan3t5eSEsLOyO9Zo3b46IiAiMHDkSjRs3RrNmzXD06FELRnr3rN4FrNVq8dprr5lk2kBRgjRjxgyLjQH09vbGAw88gB9++AGZmZml9qemplbqOC1btsT58+cRHh6Opk2bmjzMmYA9+OCD6NmzJ6ZPn26yvV27dtDr9UhISCh1/uIEVKVSVanFk4iIyNK8XR3MWs5ctmzZghMnTmDIkCF3VX/SpEnYtm0bJk2aZObIzMvqCaBSqUTfvn2xevVqk7uAV69ejb59+1q07/ybb76BwWBAZGQkFi1ahJMnT+LIkSOYNWsW2rVrV6ljTJ06FRkZGejfvz927NiB06dPY8WKFXjkkUfM3uz7wQcfYM+ePSbjEpo3b44BAwZg0qRJWLx4Mc6ePYvt27djxowZWLZsGQCgQYMGyM3NxZo1a5CQkFDqRhMiIqLq1i60Dvw0DpDK2S8B8NM4oF1oHYvFUFBQgMTERNy4cQOHDx/G7NmzMWDAAPTt2xfjxo0zlsvKykJiYqLJo6zGIwB49NFHkZKSgilTplgsbnOwegIIFLX29e7dG3v27EFWVhb27NmD3r17l2oVNLfGjRvj4MGD6NSpE2bMmIHIyEj07t0bW7duxRdffFGpY4SEhGDHjh3Q6/Xo27cvIiMj8dJLL8Hd3d3YrWsuzZs3x7Bhw1BQUGCyfdmyZRg2bBheffVVNG/eHEOHDsXBgweNzdfdu3fH6NGjMX78ePj7+2PmzJlmjYuIiKiq5DIJb/UrGr9++1/74udv9WsCucxyucD69evh5+eHkJAQ49//efPmYfXq1SbDqt588034+fmZPP7v//6vzGMqFAp4eXlBobCJUXblkkQlJtvLzMyERqNBRkZGqW7NjIwMXLlyBWFhYWXeCEE1R25uLi5evIjg4GDeKUxERHeUn5+P2NhYhIaGwsHh7rpq159MwNt/nDa5IcRP44C3+jVB72Z+5gq11qjoNa8oX7udbaenREREVKv1buaHHk18sT/2FpKz8uHtWtTta8mWP2ICSERERFYml0nVPtWLvbOJMYBEREREVH2YABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ2xmQRQp9Nh7dq1+Pbbb7F27VrodDqLn/ORRx5Bjx49jP+XJAmjR48uVW7cuHGQJAmPPPKIcVt8fDzGjBkDPz8/qFQqeHl5oXPnzti0aZPF4yYiIqJ7M2HCBEiSBEmSoFQq4ePjgx49emDBggUwGAzGciEhIcZyJR/vv/8+ACAuLs5ku0qlQlhYGN577z1UYrVdq7GJlUAWL16MV199FfHx8cZt/v7+mDNnDsaNG1dtcfj6+mLNmjXIycmBs7MzgKL1cVetWgU/P9P1CPv37w+tVovvvvsO4eHhSEhIwIYNG5CSklJt8RIREdUKBj1w5R8gOwlw8QGCOwIyucVP27t3byxcuBB6vR5JSUlYv349nn/+eSxfvhxr1qyBQlGUJr3zzjt49NFHTeq6urqaPN+8eTOaNm2KgoIC7Nq1C1OmTIGfnx8mT55s8eu4G1ZPABcvXowJEyYgKioKS5YsQevWrXHo0CHMmjULEyZMAIBqSwKbNWuGK1euYMmSJXjiiScAAEuWLIGfnx+CgoKM5VJTU3Ho0CGsXbsWffr0AQCEh4fjwQcfrJY4iYiIao3Ta4D104HM/xqB4OYP9J4LNOlv0VOr1Wr4+voCAAICAhAZGYkOHTqgW7duiImJwZQpUwAUJXvF5crj6elpLBMcHIyFCxfi8OHDNpsAWrULWKfT4dVXX0VUVBQ2btyI6OhoaDQaREdHY+PGjYiKisKMGTOqpTu42JgxY7B48WLj80WLFmHMmDEmZTQaDZycnPD7778jLy+v2mIjIiKqVU6vAX4dZ5r8AUBmQtH202uqPaTo6Gi0aNECK1asuOtjHDx4EIcOHUL79u3NGJl5WTUB3LVrF+Lj4zFr1izI5aZNvXK5HO+99x5u3LiBXbt2VVtMU6ZMwaFDh3D+/HmcP38ehw8fNn4DKKZUKvHVV1/ht99+g4eHByIjI/HMM89g37591RYnERFRjWbQF7X8oaxxcv9uW/9KUblqFhERgbi4OOPz6dOnw8XFxeSxc+dOkzodO3aEi4sLVCoV2rZti2HDhlXrMLaqsmoXcEJCAoCirteyFG8vLlcd/P390bVrV3z77bcQQqBr166lxv8BwPjx4zF06FBs3LgRu3fvxubNmzF//nx8+umnePbZZ6stXiIiohrpyj+lW/5MCCDzRlG50M7VFhYACCEgSZLx+csvv2wcllYsICDA5PmyZcvQuHFjaLVanDx5Es8++yw8PDyMN4vYGqsmgBqNBgCwf/9+REdHl9q/f/9+k3LVZdKkSZg6dSoA4LPPPiu3nJOTEwYOHIiBAwcCAIYPH445c+YwASQiIrqT7CTzljOjM2fOIDQ01Pjcy8sLYWFhFdYJDAw0lmncuDEuXbqEN954AzNnzoSDg4NF470bVu0C7tmzJ/z9/TFr1izo9aZNvHq9HrNnz0ZAQAB69uxZrXENGTIEWq0WOp0OgwYNqnS9xo0bc0wgERFRZbj4mLecmWzZsgUnTpzAkCFD7uk4crkcOp0OhYWFZorMvKzaAqhQKDBnzhxMmDABPXv2xIwZM4x3Ac+ePRtbt25FTEyM8Tbs6ozr3Llzxv/fLikpCQMGDMD48eMRGRkJjUaDPXv24Isvvqj2ZJWIiKhGCu5YdLdvZgLKHgcoFe0P7mixEAoKCpCYmGgyDcycOXPQt29fk/F7WVlZSExMNKnr5OQENzc34/ObN28iMTEROp0OJ06cwP/+9z9ERUWZlLElVp8GpvgFfvXVV9G9e3fj9oCAAMTExFhtAKWHh0e5+9zc3NCmTRt88cUXuHr1KnQ6HXx9fTFmzBjMmjWrGqMkIiKqoWTyoqlefh0HQIJpEvjv+Lve71t0PsD169fDz88PCoUCHh4eaNGiBebNm4fx48dDJvuvk/TNN9/Em2++aVL38ccfx/z5843Pi3MYuVwOPz8/PPTQQzadE0iiEtNUZ2ZmQqPRICMjo1Qmm5GRgStXriAsLAxOTk53HYhOp8PGjRtx/fp11KtXDz179qz2lj97l5ubi4sXLyI4OLjax10SEVHNk5+fj9jYWISGht79OLcy5wEMKEr+LDwPYE1U0WteUb52O5vJsBQKBR566CFrh0E1SFa+FquOxuPI1TTIJQmdw+uid1NfqBQ2s8IhERHdSZP+QMTDVlkJxJ7ZTAJIVBW7LqTiqR8PIadQj/vqaVCoM+C3Q9cR4O6ImIlt0dDH9c4HISIi2yCTV/tUL/aOCSDVOJdTsvHo4oNoF1oH7w9pDj+NIwDgfFIWnvv5CMb+sB+bpnaBq4PSypESERHZJvaVUY0T808cnNUKfDO2tTH5A4BwH1f8MKEtUrILsPLIDStGSEREZNvM1gJYiXtJyMbVlJ/hptNJGNjSHw7K/8aHJGfmY+neK1h/KhFKmYRPN52Hv8YR3Rp7m8zmTkRERGZoAXR0dIQQAjk5OeaIh6woJycHQgg4OjreubAV5Wv18HBWGZ+fuJ6Bnp/twA+7YtEy0B1Bnk4o1BkwZfFB/N/y4zAYakZiS0REVF3uuQVQpVLB0dERSUlFS7U4OzuzxaWGKU7gk5KS4OjoCJVKdedKVhTh64bt51PwdFQYCnUGPLbkIILqOOHRzvWx4vB1XEzOhpNKgc5hXlh+6Druq6fB2PtDrB02ERGRzTBLF3BYWBguXryIhIQEJn81VHHL353WOrQFYzoE4+mfDmP10RuQJAkJGfloX78Onv35COq6qmAQQLcIb+y6mAqZJOGrbZcwpkMw35tERET/MksCKJPJEB4ejsLCQq6FW0PVhJa/Yg8198WQyHp4YdlR1HN3hMZBiVVH4hHi6YS4m7l4uVcjPB0VhrxCPYbM/wen4zMRm5qD+nVdrB06ERGRTTDrNDAqlarGJBFUc0mShA8fuQ9tQjzwwfqzyMjXAgC8XR0w46HG6NnUFwDgqJJjdPsgvLbyJP48noDnujW0ZthEREQ2g9PAUI0kk0kY2S4IswY2BwA82jkUvz5xvzH5K7b9XAoclXKcTci0RphERGSjJkyYAEmS8MQTT5Ta9/TTT0OSJEyYMMGk7O2P3r17G+scO3YM/fv3h7e3NxwcHBASEoLhw4cjOTm5ui6pSmxqImh9diFyDiYh/8wtCJ0BSj9nuHTwg6oeV3WgsnVv7A0AWH00HpMfqA9fTdG6iEIILNl7BRtPJyHE0wkyGcf/ERHZKr1Bj8PJh5GSm4K6TnUR6R0JeTUsBRcYGIhffvkFn376qXEGjPz8fPz0008ICgoyKdu7d28sXLjQZJtarQYApKSkoFu3bujbty82bNgAd3d3xMXFYc2aNTY7S4rNJICF17OQuvAkDAV6ODb2hMxRgfzzacg9mAS3HsFw6xZ054OQ3VEp5WgVqMGJ+Ex0+WAroiLqIqdAj8NX05BbqEd9L2dcTs3BY10aWDtUIiIqw+Yrm/H+/veRlJtk3Obj5INX2r2C7sHdLXruyMhIXLp0CStWrMDo0aMBACtWrEBQUBBCQ0NNyqrVavj6+pZ1GOzevRsZGRn4/vvvoVAUpVahoaGIioqyaPz3wia6gA2FeqTGnIKijiP8XmkHz9GN4TG4IXz/ry3cugchc9MV5J26ae0wyUY91y0cOr3AffU02H4+BbsupsJBKUPrYA9cvVX0zetSSlaNmeiaiMhebL6yGVO3TTVJ/gAgOTcZU7dNxeYrmy0ew6RJk0xa9hYsWICJEydW6Ri+vr7Q6XRYuXJljflbYxMJYN6xFBhytKgzohHkLv/dRCLJJLh2C4IqxA3Zu7m0F5UtKsIb03s3wsEraSjUGdCjiTfCfVxx7Fo6HJRyjL8/GD/sisOyA9esHSoREf1Lb9Dj/f3vQ6B0wlS8be7+udAb9BaNY8yYMdi1axeuXLmCK1euYPfu3RgzZkypcn/++SdcXFxMHrNnzwYAdOjQATNmzMCoUaPg5eWFPn364MMPPzTOkWyLbCIBzL+UDlWgKxSepVegkCQJTi3rouByBoS+ZmTVVP1aB9cBADQL0GDH+VTsvXwLOoNAdoEef59NRqtAd3y783KN+WZGRFTbHU4+XKrlryQBgcTcRBxOPmzROOrWrYuHH34YMTExWLhwIR5++GF4eXmVKhcVFYWjR4+aPEreQDJr1iwkJiZi/vz5aNq0KebPn4+IiAicOHHCovHfLdsYAygAVDRI37hPAOBgfiptx/kUaByVOHkjA80DNKjjrMK5pCwU6gzQ6g04ci0dAHA9LQ+BdZysGywRESElN8Ws5e7FpEmT8MwzzwAAvvzyyzLLODs733GxBE9PTwwdOhRDhw7F7Nmz0apVK3z00UdYtGiR2WO+VzaRAKqD3ZD+5yXoMwog16hL7c87kQpVoCskuU00WJIN0hkMyC3QoX5dZ5y4ngFJAoobjEt+tyjQWbYrgYiIKqeuU12zlrsXvXv3RmFhISRJQq9evcxyTJVKhQYNGvAu4Io4RXojY+MV3Fp+Hp5jm0CmKrr1WwiBnH0JKLiQjjojGlk5SrJlHk4qaA0CF5P//aCV6Ok1lPj/hpOJCIvmtEJERNYW6R0JHycfJOcmlzkOUIIEHycfRHpHWjwWuVyOM2fOGP9floKCAiQmJppsUygU8PLywp9//olffvkFI0aMQHh4OIQQ+OOPP7B27dpSU8fYCptIAGUOCniObYybi04h8f39cLyvbtE0MOduQRufA5eO/nBsYflvAFRzBXtWrlv3i60X8HQ0VwQhIrI2uUyOV9q9gqnbpkKCZJIESv8O95rebnq1zAcIAG5ubhXuX79+Pfz8/Ey2NWrUCGfPnkWTJk3g5OSEadOm4dq1a1Cr1WjYsCG+//57jB071pJh3zVJVGJUfGZmJjQaDTIyMu74At0L3a18ZP8Tj/yztyC0Bij9iyaCVod7QJI49o/Kd+xaOgZ8ubtSZY/P7Ak3B6WFIyIiqv3y8/MRGxuL0NBQODg43NUxypoH0NfJF9PbTbf4PIA1UUWveVXyNZtoASymqOMA9771gb71rR0K1TD31dNUuuybq47jsxGtLRgNERFVVvfg7ogKjLLKSiD2zKYSQKK7VZUW4lVHE/HZCAsGQ0REVSKXydHWt621w7ArNSYBFDoD8k7dRN7pm0Xdw75OcG7nC4X73TU5k33LzNeyG5iIiOxWjUgAdWn5SF1wErqUPCjruUDurET27nhkbbsG9/4N4NLB39ohkg1wUcmQXWioVNmb2YVMAImIyG7ZfAIoDAKpMacgdAZ4P9cKKn8XAIChQI+M9bFIX3UJCg8HODSqY+VIydr6tfDFzwfiK1V278VEhHo1sHBEREREtsnmZ1bOP3sLuqRc1BkZYUz+AECmlsO9fwOoglyRteO6FSMkW+HjVnopwfK8uuqsBSMhIiKybTUiAVR4O0IdVPp2ZkmS4NTaBwWXMiC0XOHB3h2IS7N2CERERDWCzSeAQi8gU5ffUy1zkBvLkX1LyiqsUvmzCRkWioSIiMi22XwCqPJ3RuGNbOgzy/7jnn/mFuR1HCCpOV+QvfNyUZW7z10v4YE8BR7OUaJbrhL+Ohl6f7arGqMjIiKyHTafADpF+kBSyJC++iKEzvQOz/xzt5B7PBUuHfy4UghhcGS90hsF0ClPgSlZarQqUMBfJ0PTQjlGZ6sxNEcFbSGHDhARkf2x+QRQ5qhAneGNkHf2FpI+PYTMrVeRvS8BN5ecRmrMKTiEe8ClE6eBIaB/i9Lvg5aFcnQsUCJRboAagEZIUAIwQCBYJ8Nvsw9AGDh8gIjI3kyYMAGSJEGSJCiVSvj4+KBHjx5YsGABDIb/GpxCQkIgSRJ++eWXUsdo2rQpJElCTEzMPZeXJAnOzs6IjIzEb7/9ZtZrLYvNJ4AA4NjUE95PtYSyniuytlxD+qqL0KbmwX1AA3iObQxJXiMugyzMQSnHA2FexueSANrlK5AuGeCnlyMfwH6VDrsddEiRCUiQcCsxF7t/v2C9oImICEKvR86+/cj48y/k7NsPoa+e3pnevXsjISEBcXFxWLduHaKiovD888+jb9++0Ol0xnKBgYFYuHChSd29e/ciMTERzs7OpY5b1fLvvPMOEhIScOTIEbRt2xbDhw/HP//8Y6arLFuNyZxUAS7wHBkB/3c6ImDWA/B9sTVcOvgz+SMTkzqFGP9fVy9BI2TQCAk3ZQZ8qcnHDicd9jrosNi1ADvVWkgATmy9gcJ8XbnHJCIiy8ncuBEXu3XH1fHjEf/SS7g6fjwuduuOzI0bLX5utVoNX19fBAQEIDIyEjNmzMDq1auxbt06k1a60aNHY/v27bh27Zpx24IFCzB69GgoFKVvVK1qeVdXV/j6+iI8PBxffvklHB0d8ccff5j3Ym9T47InSZIgyTjej8rWItDd+H8lit4nEiSsdSqEKPm2kYC9ah0MEDAYBK6duVW9gRIRETI3bsSN51+ALjHRZLsuKQk3nn+hWpLA20VHR6NFixZYsWKFcZuPjw969eqFRYsWAQByc3OxbNkyTJo0qcxjVLV8SQqFAkqlEoWFVZvZoqpqXAJIVBFPF7Xx/7dkBggUje/LkJUe5+dvkEH2b5KozefNIERE1Uno9UiaPQcQZYzD/ndb0uw51dYdXFJERATi4uJMtk2aNAkxMTEQQmD58uVo0KABWrZsWe4xqloeAAoLCzFnzhxkZGQgOjr63i+kAkwAqdbxdC5a4zdPBuRJRb9EGhXKoDAA0bkKPJvugKnpDhiRrYLu3wTR3cfJavESEdmj3IOHSrX8mRACusRE5B48VH1BGU8tSs0u8vDDDyM7Oxs7duzAggUL7tiaV5Xy06dPh4uLC5ycnDB37ly8//77ePjhh81yLeWx+bWAiariZnYBbuVojc+PqfToUCChW74K3fJhbPEDYGwdBAAnTflzCBIRkfnpUlLMWs6czpw5g9DQUJNtCoUCY8eOxVtvvYV9+/Zh5cqVFR6jKuVffvllTJgwAS4uLvDx8amWqe3YAki1SlpuIUp2JhxW61AIQPr3ARRNAZMLA0rOKrnmf0erK0QiIgKgqFvXrOXMZcuWLThx4gSGDBlSat+kSZOwfft2DBgwAB4eHnc8VmXLe3l5ISwsDL6+vtU2rzFbAKlW8XJRQy5J0P87fiRXBhxU6dCpUAkDBAABGSQ4/lteggQBgYzkPKRcy0LdQFerxU5EZE+c2rSGwtcXuqSksscBShIUPj5watPaYjEUFBQgMTERer0eSUlJWL9+PebMmYO+ffti3Lhxpco3btwYqampcHKq3LChqpavTmwBpFrF3UkFjZPSZFu4ruhtrvv3oS/RRmiAMLYEXtifVD1BEhERJLkcPjNe/ffJba1e/z73mfEqJLnllnpdv349/Pz8EBISgt69e2Pr1q2YN28eVq9eDXk55/X09ISjo2OZ+8xRvrqwBZBqlfNJWbiVUwiFDCheOVD17/wvCpiOAQRg8iz+Unq1xEhEREXcevYE/vcZkmbPMbkhROHjA58Zrxbtt5CYmBiTuf7Kc/vdwLdLT0+3aHlLYQJItcqxa+kAgMkPhOKbHbEAgDSZgEb/X/InULQKSLHi50mxmdUeLxGRvXPr2ROu3boV3RWckgJF3bpwatPaoi1/xASQahmFvCixi2rkY0wA9zjoEJLz3y+S4nF/UomJogEAAshOz4eLu0P1Bk1EZOckuRzO7dtZOwy7wjGAVKt0bOAFuUzCmcRMtArUAACuKwwmU77c3gJY0p6Vl6olTiIiImtiAki1io+bAwa09MdHG85hTIfgoo0STKaGKS/5A4Dz+5KQl2XZ5XeIiIisjQkg1TrvDWyGVkEemPbbcfi6FS0NV5WFhPb9edkygREREdkIJoBU6zipFFg8qR0WTmyLtqGeCNA44KbJtM8VO7U93oLRERERWR9vAqFaSSaTENXIG1GNvAEABzbGYv+K2ErXL8zXQeXAjwcREdVObAEkuxAZFVSl8jdvZFsoEiIiIutjAkh2Qa6s2nxSl48mWygSIiIi62MCSFSGE9tuWDsEIiIii2ECSHZBGMpYaLwCeq3AzXh2AxMR1VYTJkyAJEmQJAlKpRI+Pj7o0aMHFixYAIPhvxsHQ0JCjOWcnZ0RGRmJ3377zbh/5syZkCQJvXv3LnWODz/8EJIkoWvXrtVxSVXCBJDsgl5X+buAix38K878gRARUSkGg8CNc2k4fyARN86lwVDFL+13q3fv3khISEBcXBzWrVuHqKgoPP/88+jbty90Op2x3DvvvIOEhAQcOXIEbdu2xfDhw/HPP/8Y9/v5+WHr1q24fv26yfEXLFiAoKCqjUGvLrzNkeyCXFn17zrxl25ZIBIiIirp0pFk7Fx2ATnpBcZtzu5qdB7eEA1aeVv03Gq1Gr6+vgCAgIAAREZGokOHDujWrRtiYmIwZcoUAICrqyt8fX3h6+uLL7/8EkuXLsUff/yBjh07AgC8vb3RunVrLFq0CK+99hoA4J9//kFqaiqGDh2K06dPW/Q67obdtQBqU/OQ/udlJH5+BAkfHkDKDyeQvT8R4i5aiKjmkCQJvmEuVaqTm667cyEiIrprl44kY/03J02SPwDISS/A+m9O4tKR6r8hLzo6Gi1atMCKFSvK3K9QKKBUKlFYaLpq1KRJkxATE2N8vmDBAowePRoqlcqS4d41u0oAcw4nIenjg8jZlwBdfDb0N/NRcCEd6SsuIP6dPcg9lmLtEMmCHhwZYe0QiIjoXwaDwM5lFyoss+vXC9XWHVxSREQE4uLiSm0vLCzEnDlzkJGRgejoaJN9ffv2RWZmJnbs2IGcnBz8+uuvmDRpUjVFXHV2kwAWxmcjbfl5KP2dIbQGQADyOmo4NPMEVDKIQgNu/XwWucc5/Udt5e7jbO0QiIjoXwkX0ku1/N0uO60ACRfSqyegEoQQkKT/1o2fPn06XFxc4OTkhLlz5+L999/Hww8/bFJHqVRizJgxWLhwIX777TeEh4fjvvvuq+7QK81uxgBm/xMPmasK2sRcQALqjIiAQ5M6KLiQDnWwGzLWxQIGIG3FRTg2r2vyg6faQaGo2lyAAJB6PRte9arWdUxERHeWk1lx8lfVcuZ05swZhIaGGp+//PLLmDBhAlxcXODj41NujjBp0iS0b98eJ0+etOnWP8COWgALLqZD6e0E6AWc2/sCEEj84ABuLj6NjL+Kkj8AEPl65J9Ps2qsZDvWzT9ule4HIqLaztlNbdZy5rJlyxacOHECQ4YMMW7z8vJCWFgYfH19K2wgatq0KZo2bYqTJ09i1KhR1RHuXbObBBACMORoAQAKL0fc+vmcMelT+DhB5qI0Fk37/XyV542jmqH9wOAqlc9MzUfc8VQLRUNEZL/8GrrD2b3i5M7FQw2/hu4Wi6GgoACJiYm4ceMGDh8+jNmzZ2PAgAHo27cvxo0bd1fH3LJlCxISEuDu7m7eYM3MbhJAVYgb9GlFzchZO65D5qqEQauHx5CGkLmqYMjWGssaMrXI+PuKtUIlC2rdq36V6zABJCIyP5lMQufhDSss88CwhpDJLDcka/369fDz80NISAh69+6NrVu3Yt68eVi9ejXk8qoPGwIAZ2dnm0/+AEASQtyxqSszMxMajQYZGRlwc3OrjrjMruBKJlK+PmayzbG1N/IOlX/Th99r7SF3tc3bt+nuFORq8f3UnVWqo1TLMW52Rzg4K+9cmIjIjuTn5yM2NhahoaFwcHC4q2OUNQ+gi4caDwyz/DyANVFFr3lV8jW7uQlEHewGzUOhyFgba9xWUfIHAAmz96HenM6WDo2qkUxR9UZvbYEeZ3YnoFVP25zNnYioJmvQyhuhLeoW3RWcWQBnt6JuX0u2/JEddQEDgGuXenAf0KDyFQRw/Y2qtRaRbVOq5KgbVLW7eh01Klw8zOmBiIgsRSaTENDIA+FtfRHQyIPJXzWwqwQQAJw7+EHuWYVmai2Q/LPtLeFCd+/+QWFVKq8vNECbz1VBiIio9rC7BFCSJHgMqXjQ6e0Kj91E9gmuElJbBDauU6Xyeq0e7j5OFoqGiIio+tldAggADvXdAaeq3d2T/uNZ5J+7ZZmAqNoFRGgqXVavE2jaOcCC0RAREVUvu0wAAcCjf9W6AQEgdckZGPLYFVgbNO8aWOmyMjkQ1LRqrYZERES2zG4TQOeW3oBjFS9fZ0DOoSTLBETVKripZ6XLSjKJSwMSEVGtYrcJIAD4v9qhynUy/rzMVsBaQKGs/BAAvZarwhARUe1i1wmgTCWHql3dKtdL/uEEl4qrBRq2rfwEowaDwYKREBERVS+7TgABwGtgeJXr6K5nI2HufuQe553BNVn0uMaVLnv1JG8AIiKqTSZMmICBAwca/y9JRcN9VCoVwsLC8M4770Cn+6/Hb8OGDejQoQNcXV1Rt25dDBkyBHFxcdYJ3gzsPgGUyWRw7FWvyvUMGYW49dNZ5BzmmMCaSqGUQ17J1d0uHWWyT0RUm/Xu3RsJCQm4cOECpk2bhpkzZ+LDDz8EAMTGxmLAgAGIjo7G0aNHsWHDBqSmpmLw4MFWjvru2X0CCAB1uobcVT2H+7yQsTYWQlfUPajPKkRhfDb0mQV3qEm2IqBR5e7uzUjJtXAkRET2y2DQ49qp4zizezuunToOg0Ff7TGo1Wr4+voiODgYTz75JLp37441a9YAAA4dOgS9Xo/33nsPDRo0QGRkJF566SUcPXoUWq222mM1B7tZC7gikiRB1bwOCk9UrZsv/3gqACD7n3gUXEpH/vk04N+hgeqG7tD0CoGqnqu5wyUz8m/gXqnu3YQLGSjM00HlyI8MEZE5Xdj3D7bEfIvsW6nGbS51vBA94TE0bN/RanE5Ojri5s2bAIDWrVtDJpNh4cKFmDBhArKzs7FkyRJ0794dSmUlu5JsDFsA/+U1vPLjwf5TlO1lbIiDLq0AHoMbwvvplvB4JByGLC1SvjmOgrgM8wZKZqXxLnuFD6WDDI5uSpSc/WXnr+erKSoiIvtwYd8/WPPJbJPkDwCyb6VizSezcWHfP9UekxACmzdvxoYNGxAdHQ0ACA0NxcaNGzFjxgyo1Wq4u7vj+vXr+PXXX6s9PnNhAvgvmUIGn5daV7FWUXYgySV4P9MSzm19oQp0hXMbH3g/3RJKfxekrbwIIXjHsK0KbuYJqYxPgTbfgMI8HYQAVA5FU8ZcPJQMg553AxMRmYPBoMeWmG8rLLN10bfV1h38559/wsXFBQ4ODujTpw+GDx+OmTNnAgASExPx6KOPYvz48Thw4AC2b98OlUqFRx55pMb+jWcCWILS6+7WexWFBkBnmhhIShncegRBl5SLwmtZ5giPLECplsPD1xkAIFdIUDr+Nz+gg3NRs369xh4AAF2hAXnZNXOsBxGRrblx5lSplr/bZd1MxY0zp6olnqioKBw9ehQXLlxAXl4eFi1aBGfnor8PX375JTQaDT744AO0atUKXbp0wdKlS/H3339j37591RKfuTEBvI3/e53uqp7uVn6pbergovVmdTdL7yPb8cCwhgCK1vzV5euNLX66QgO6jAjHjfPpxrIKVdXWkCYiorJlp6eZtdy9cnZ2RlhYGIKCgqBQmI73zs3NhUxmmjLJ5UV/D2rqPLFMAG8jU9zdS5L8xdFS23TpRYmfTM2kwZYFRtSBs7saAODh54yW3YPQY1IT9JjUFCe3X0dBjg4KlQz1Ijyg5k0gRERm4eLuYdZylvTwww/jwIEDeOedd3DhwgUcPnwYEydORHBwMFq1amXt8O4KE8Ay1Hu/813Vu7Xqosnz7H/iIXNSwKGhuxmiIksa/kZbyBQSbsXnYP+fsdi08DT+/OIYbiXkQqmWQ1doQOs+IdYOk4io1gho3BQudbwqLOPq6YWAxk0tcn6DwVCqpa880dHR+Omnn7Bq1Sq0atUKvXv3hlqtxvr16+Ho6GiR+CyNCWA5HNpVfpmwYrl7E2Ao0EOfo0XG+jjk7EmAa9dASFVYd5asw9FZhQlzOsHd578PslwhgyQBBiHQY1IT1Gtk/W+hRES1hUwmR/SExyosEzX+MchklvkbmpycDF9fXwBATEwMVq1aVWH5ESNG4PDhw8jOzkZycjJWr16NiIgIi8RWHdifVQ7PgeG4sT+5yvXi391TNDuMBLj1CIZL5wDzB0cW4eiqwqiZHZAUm4lLR1KgK9DDw88Zjdr7QO1UM+d5IiKyZQ3bd0T/qTNKzQPo6umFqPGWmQcwLS0Nu3fvxrZt2/DEE0+Y/fg1BRPAckgyCV7PtUDqvGNVq6gTcOsZDOf2fpA7M2moaSRJgm99DXzra6wdChGRXWjYviMatG1fdFdwehpc3D0Q0LipxVr+Jk2ahAMHDmDatGkYMGCARc5REzABrICDvxskTweIKt7Fa9DqrZr83bx5EwcOHMDFixdhMBjg7++Pdu3aISgoyGoxERERlUcmkyOw6X3Vcq6VK1dWy3lsHccA3kHAy22rXCdnT4IFIqmc8+fP4+uvv8bx48cRGhqKiIgIJCQkYMGCBdixY4fV4iIiIiLbwRbASvCZ1hpJHx+qdHmRr4c+Vwt5NY8by87Oxm+//YYGDRrgkUceMa5P2KNHD2zfvh1btmyBv78/wsLCqjUuIiIisi1sAawEZV0nOET5VqlO5t9XLRRN+Q4fPgwhBAYOHGgc5Lpjxw5cuHABnTt3hp+fX42dsZyIiIjMhy2AleTVqyGuH0gFsnWVKp93IhUe/RpYOCpTV65cQXBwMFauXInz589DqVRCqVQiNzcXHh4eCAsLw7FjVbyphYiIiGodJoBVUO/1+3H9lZ0VF1LIAIOAobB6Fq++XXx8PIQQaNeuHTQaDZydneHm5oYtW7bgyJEjpZayISIiIvvDBLCKfN5oh6R395e5T1LJIAoNgAQoXFXVHBng5uaGS5cuQaVSYf/+/VAqldBqtVCpVOjYsSPi4+ONC1sTERGR/WICWEVKZzWUgc7QXssp2iADJIUcklIGQ44WCh8n6JJy4dLJv9pjS00tmkRTqVRiwoQJ8Pf3R2ZmpnHCS6BoQWsiIiKyb+wPvAt1hkYAUtH/JbUcMlclFF4OkNdRQ5eUC7mHGs7t/ao1JoPBgMTERDg4OKCwsBAxMTFYuXIlduzYgVOnThnLabVaFBQUVGtsREREtkKSpAofM2fORFxcXLn79+7dC6Bo+bjibTKZDPXq1cPEiRORnGy6itiff/6JBx98EK6urnByckLbtm0RExNjhSs3xRbAu6D0dkLdJ1vg5qJTMOTooM/TQ//vZNHKQBfUndIckiRVa0wJCQnQarWQy+V48skncfToUZw/fx7p6enIz8+HQqGATld0A8snn3yCvn37onnz5tUaIxERUVmEQaAgNgOGrELIXFVQh2ogySzzdzQh4b+5epctW4Y333wT586dM25zcXEx9qht3rwZTZs2Nanv6elp/L+bmxvOnTsHg8GAY8eOYeLEiYiPj8eGDRsAAJ9//jleeOEFTJ8+HV9//TVUKhVWr16NJ554AidPnsRHH31kkWusDCaAd0kd5Aa/1zog/0IaCq9kQlLK4djcC0ovR6vEU9y1m5+fj9OnTyM6Ohrp6elISUlBp06doFarsWXLFri5uUGj0eD333+Ho6Mj5wQkIiKryjuZivQ/LkGfUWjcJteo4N6vARybeZn9fL6+/03rptFoipYA9TWd6q04AfT09Cy1r6SSdf39/fHcc8/hjTfeQF5eHlJTUzFt2jS88MILmD17trHOtGnToFKp8Nxzz2Ho0KFo3769OS+v0tgFfA8kmQTHRnWg6RkCt6hAqyV/AODu7g4AiIiIwObNm/H555/j+PHj0Ov12L17N7Zs2QIAyMzMxLVr1yBJEjZu3Gi1eImIiPJOpuLm0jMmyR8A6DMKcXPpGeSdTLVSZHfH0dERBoMBOp0Oy5cvh1arxUsvvVSq3OOPPw4XFxf8/PPPVoiyCBPAWqJu3boIDAxEeno6vL29cfPmzQrLCyGQnJyMa9euVVOERERE/xEGgfQ/LlVYJv2PyxAGUU0RldaxY0e4uLiYPMpz4cIFzJ8/H23atIGrqyvOnz8PjUYDP7/S9wSoVCrUr18f58+ft2T4FWICWIv06tULKSkpSE5Ohr+/PxSKO/fwsxWQiIisoSA2o1TL3+30GQUoiM2opohKW7ZsGY4ePWryKCkjIwMuLi5wcnJCo0aN4OPjgx9//NE6wVYRxwDWIvXq1YO/vz+SkpIQHx9vss/FxQXZ2dml6ly7dg1paWnw8PCorjCJiIhgyKo4+atqOUsIDAyscKy8q6srDh8+DJlMBj8/Pzg6/jcULDw8HBkZGYiPj4e/v+nUcIWFhbh06RKioqIsFvudsAWwlsnNzUVkZCQef/xx47Y6deqUmfwV+/zzz5GUlFQd4REREQEAZJVcMKGy5axBJpMhLCwM9evXN0n+AGDIkCFQKpX4+OOPS9WbP38+cnJyMHLkyOoKtRS2ANYyjo6OyMjIMBlzcOvWrQrrGAwGLF++HE899VS1T19DRET2SR2qgVyjqrAbWK5RQx2qqcaoTN28eROJiYkm29zd3eHg4HDHukFBQfjggw8wbdo0ODg4YOzYsVAqlVi9ejVmzJiBadOmWe0OYIAtgLVOs2bNcO7cuTsmfbdLSUnBpUsVD8YlIiIyF0kmwb1fgwrLuPerb7H5ACuje/fu8PPzM3msWrWq0vVfeOEFrFy5Ejt37kSbNm3QrFkz/PTTT/j666+tOgcgAEhCiDveXpOZmQmNRoOMjAy4ublVR1x0l/Lz8/HNN99ACAGtVoucnJxK1w0ICMCjjz5qweiIiKg2yc/PR2xsLEJDQyvVKlaWsucBVMO9X32LzANY01X0mlclX2MXcC3j4OCA8ePH47fffsONGzeqVPfGjRvQ6/WQy+UWio6IiMiUYzMvODTxrLaVQKgIu4BrIXd3d0yZMgWdO3euct1FixZZICIiIqLySTIJDg3c4dTSGw4N3Jn8VQMmgLWUJEnw9vaucr2rV69aIBoiIiKyJUwAa7GQkBDIZLIqj8uYOXOmZQIiIiIim8AEsBZzdXVFixYtoNVqrR0KERER2RAmgLVcnz59EBQUVOV633zzjQWiISIiIlvABLCWU6lUGDt2bJXrJSQkWCAaIiIisgVMAO2ATCbD/fffX+V6qampFoimcgrzdDi18wZ2/34RB9fGIi2x8vMZEhERUcWYANqJBx54oMp1vvjiC+Tm5logmoqd25uAmFd2Y/vP5xF7LAVHNl3DTzP3YeMPp6DT6qs9HiIiotqGE0HbCWdnZ3To0AF79+6tUr2ff/4ZEydOhExWPd8V4k6kYvOiM2jU3hcdBjSAi4caeq0B5/YnYscv5yHJgB4Tm1ZLLERERLUVWwDtSO/evatc59q1a7h8+bIFoinbwbVx8A9zR7dxjeHioQYAyJUyNOnkj87DGuL8viSkJ1V/qyQREdUuEyZMgCRJkCQJSqUSPj4+6NGjBxYsWACDwWAsJ0lSqfV/Y2JijHUlSYKLiwtat26NFStWmJTr2rWrsYyDgwOaNGmCr776qjou746YANqZl156qcp1Tp06ZYFISsu6lY+k2Ew0ezCgzFngG3XwhdJBjktHkqslHiIiqh4GgwGxsbE4ceIEYmNjTRIwS+rduzcSEhIQFxeHdevWISoqCs8//zz69u0LnU5XYV03NzckJCQgISEBR44cQa9evTBs2DCcO3fOpNyjjz6KhIQEnD59GsOGDcPTTz+Nn3/+2ZKXVSnsArYzLi4uVa6Tk1M9N2Bo84vG97m4q8vcr1DK4eCsRGE+xwESEdUWp0+fxvr165GZmWnc5ubmht69e6NJkyYWPbdarYavry8AICAgAJGRkejQoQO6deuGmJgYvPfeewCAQYMGAQCCg4MRFxcHoKhlsLiur68v3nvvPXz00Uc4fvw4GjVqZDyHk5OTsdzMmTPx008/Yc2aNRg5cqRFr+1O2AJohxo0aFCl8vHx8RaKxJSLhxpypQzxF9PL3J+ZmoesW/lw93aqlniIiMiyTp8+jV9//dUk+QOAzMxM/Prrrzh9+nS1xxQdHY0WLVpgxYoVOHDgAABg4cKFSEhIMD6/nV6vx6JFiwAAkZGRFR7f0dERhYWF5g36LjABtENdunSpUvns7GykpKRYKJr/qBwVaNjWB8f+vobMm3km+wwGgT2rLkHloEBY66qvcUxERLbFYDBg/fr1FZZZv359tXUHlxQREYG4uDjUrVsXAODu7g5fX1/jcwDIyMiAi4sLXFxcoFKp8OSTT+Lbb78tt5FFr9dj6dKlOH78OKKjo6vlOirCLmA7FBwcjKCgIFy9erXSdf7++2+MGDHCglEV6TCgPuLPp2H5+wdxX1Q9+IW5IzutACe3X0dSbCZ6TG4KpVpu8TiIiMiyrly5Uqrl73aZmZm4cuUKQkNDqymqIkIISFLpseglubq64vDhwwCA3NxcbN68GU888QQ8PT3Rr18/Y7mvvvoK33//PQoLCyGXy/Hiiy/iySeftGj8lcEE0E5NmDAB8+bNQ3p6eqXKX7hwwbIB/ctZo8bgl1tj/5rLOLT+CnSFsQAA/4bu6Pd8SwRG1KmWOIiIyLKys7PNWs6czpw5c8ekUyaTISwszPj8vvvuw8aNGzF37lyTBHD06NF47bXX4OjoCD8/v2qbVu1OmADaKZlMhmeeecY4wBUAFAoF9Ho9hBCQyWQmze56vR5nz55FRESExWNz1qgRNbYxOg1tiNyMQigd5HDWlH1jCBER1UyVvSnxbm5evBdbtmzBiRMn8OKLLwIAlEol9PrK3Xwol8uRl2c6hEmj0ZgkiraCCaAdUygUcHBwQH5+PoCi8RhCCCgUijJvf1+9ejUaNmwIubx6umBVDgqoHPgWJSKqjYKDg+Hm5lZhN7CbmxuCg4MtFkNBQQESExOh1+uRlJSE9evXY86cOejbty/GjRsHAAgJCcHff/+NTp06Qa1Ww8PDA0BRN3FiYiIAIC8vD5s2bcKGDRvw5ptvWixec7KNdkiympKtfMX/L2/uo7y8PJw/f75a4iIiotpNJpPdcYGC3r17W7TLdP369fDz80NISAh69+6NrVu3Yt68eVi9erWxsePjjz/Gpk2bEBgYiFatWhnrZmZmws/PD35+fmjcuDE+/vhjvPPOO3jttdcsFq85SUIIcadCmZmZ0Gg0yMjIgJubW3XERdVk7ty5pZqrFQoFVCqVyTrAKpUKarUaLVu2RLdu3ao7TCIiskH5+fmIjY1FaGgoHBwc7uoY1pwHsCaq6DWvSr7G/jU7FxERgSNHjkClUhnnJdLpdKVaAdu1a4dDhw5VW/cvERHZhyZNmiAiIgJXrlxBdnY2XFxcEBwcbDM3S9RWfHXt3AMPPABJklBYWGhyy3vJ/4eGhsLf3x95eXlo2LChNcIkIqJaTCaTITQ0FM2bN0doaCiTv2rAFkAbZyjUI/doMvLPpgF6A5QBLnBu7weFme6K9fT0xKhRo/DLL7+Y3OVUPDKgU6dOaNSoEZYtW4bg4GAEBASY5bxERERkPUwAbZg2MQepC05Cn1UIdagGklqO7F3xyNp+HR6DG8K5tY9ZztOwYUNMmzYNBw8exP79+5GdnQ2lUomQkBDExsZi9+7d8PPzw9ChQ81yPiIiIrIuJoA2ylCoR+qCk5A5K1H38fug8HQs2l6gQ/ofl5G2/DwUXo5QB5vnphwnJyd06dIFXbp0QVJSEg4fPoybN2/Cw8MDnTt3Rnh4OMf/ERER1RJMAG1U3tEU6LMKTZI/AJCpFfAY3BCFVzORveuG2RLAknx8fNCnTx+zH5eIiGqnSkwoQmZirteaoyxtVP65W1CFaEySv2KSTIJTKx/kn71lhciIiIiKKJVKADCZNowsq/i1Ln7t7xZbAG2U0AvI1OV3ucpUMgg9v3EREZH1yOVyuLu7Izk5GUDRcKKSs0iQ+QghkJubi+TkZLi7u9/zsCwmgDZKVc8FWTuuw5Cvg6yM5dDyzt6Cql71ro9IRER0O19fXwAwJoFkWe7u7sbX/F4wAbRRzm19kbn1GtLXXILHI+GQZP99o8o5nISCC+nwGN7IihESEREVzRvr5+cHb29vaLVaa4dTqymVSrPdkMkE0EbJNWrUGRqOW7+eQ+HVLDhFekNSy5F/5hYKLqbDqY0PnFrWtXaYREREAIq6gzlbRM3BBNCGObX0hryOA7J33UDWtusQegNUAS6oM7wRHFvW5TgLIiIiuitMAG2cOsgN6lHmn+qFiIiI7BengSEiIiKyM0wAiYiIiOwME0AiIiIiO8MEkIiIiMjOMAEkIiIisjNMAImIiIjsDBNAIiIiIjvDBJCIiIjIzjABJCIiIrIzTACJiIiI7AwTQCIiIiI7wwSQiIiIyM4wASQiIiKyM0wAiYiIiOwME0AiIiIiO8MEkIiIiMjOMAEkIiIisjNMAImIiIjsDBNAIiIiIjvDBJCIiIjIzjABJCIiIrIzTACJiIiI7AwTQCIiIiI7wwSQiIiIyM4wASQiIiKyM0wAiYiIiOwME0AiIiIiO6OwdgBElqBNTob+5k3IPT2h9Pa2djhEREQ2hQkg1Sp5p04h+cOPkLt3r3Gbw33N4fvmW3Bs1tSKkREREdkOdgFTrZF39CiujByF3H37AEmCMjgYMjc35B8/gbhhw5C1Y4e1QyQiIrIJTACpVhBC4Mb0VyAKC+HaswfCtm1F2Ib1CN+7BwHz/gdIEm48/wIMBoO1QyUiIrI6JoBUK+SfPAXtlStQBgYi4OOPofTxAQBIMhncevaE1zNPQ+TlIX3ZMitHSkREZH1MAKlWKLh4EQDgPmokJEXpoa11xo4FAGT/vaVa4yIiIrJFvAmEagVJrS76V/rvO43QapF/+jREYSGErGi7YBcwERERE0CqHVyiowBJQvry31Bn/DjcilmEWwsWQJeSUlRAkgAAjs2bWzFKIiIi28AuYKoV5A4OcO7UCYUXL+Fy335InjsXLl0fRL35X8O1T29ACABA5rp10KenWzdYIiIiK5OE+PcvYwUyMzOh0WiQkZEBNze36oiLqMr02dm41LsP9KmpgCRBcnSEyM39r4BMBggB584PoN68eZA5OFgvWCIiIjOrSr7GFkCqNeQuLnDr3RtwcADkcpPkT3J0hLJePUAI5OzYict9+6Hw6lUrRktERGQ9TACpVtGlpMCxUSNAp4NLzx4AAM9HH0X4vr0I27gBdR59FABgyM3FtcefgNDprBkuERGRVTABpFpF7u6OgkuXIPfygj41FU5t2qDu1BchU6kAADKlApDLIXNzRWFsLLK3bbNuwERERFbABJBqFU2/vjBkZ0Ph54u8w0egGTgA0r93ABdcuoRbS5ZCGRgIbXwCVGENkL1zl5UjJiIiqn6cBoZqFcfWrSH38kLByVNFG2QyaDMycG3yFBScPAkAMGRlAQB0ySnQ52RbK1QiIiKrYQsg1SqSJMF72lTjtC8JM17DxfYdjMlfSYbMTOQdPARDXl51h0lERGRVTACp1tE8/DDUDRtCcnS8Y1ldYiIyVq+phqiIiIhsBxNAqnUklQquffpAVLJlL2PVKssGREREZGOYAFKtk/bLL0idN6/S5fOuxFkuGCIiIhvEBJBqFUNhIVI+/wKaQQMrXyktnfMBEhGRXWECSLVK7t690N+8iToTJ1ap3tlmzS0UERERke1hAki1ij49HQCgCgqC5OpapbpXn33OAhERERHZHiaAVKsoAwIAAHnHj8PrySerVDdn0ybkHj9uibCIiIhsChNAqlUcIyOhCg1F6pdfwX3w4CrXv/bc8xaIioiIyLYwAaRaRZIk+L75BnIPH8b1J56ocn1DYiIMhYUWiIyIiMh2MAGkWsf5/vsRvOCHu66vT0szYzRlyzt5CqnffIuUr75C9s5dEAaDxc9JRERUjGsBU63k1LYtQn75Gdl79+LahKrdEVyQkgKlj49F4tLdvIkbL05F7v79kLm6QlIqkXrrc6hCQhDwv8/g0KiRRc5LRERUElsAqVZz6dChynWuTZpsgUgAUViIq5OnoCD2Mup98TnC9/yDhrt3IfinnyA5OeLqhInQJiZa5NxEREQlMQGkWk/24INVq5CZaZE4MjduQsHZswj86mu4du8OSaGAJElwimyFoB9+gNDrkbZ0qUXOTUREVBITQKr1Gn79lbVDAABkrlsHx8hIODZvVmqfwsMDmn79kLF2rRUiIyIie8MEkGo9mazqb3NLLA1nyMyE0t+/3P1Kf38YMrPMfl4iIqLbMQEku1B//boqldempJg9BmVQIPKOHIHQ68vcn3vkMJRBgWY/LxER0e2YAJJdUIeEVKm8Lj7e7DF4DB0K7Y0bSP/111L7cg8fRvaWrfAYOtTs5yUiIrodp4Ehu9Fg105ceqBzpcoq/PzMfn7Hli3hMWokEt9+B3nHT0AzoD8ktRrZf/+NWz/+BKfISGiGDDH7eYmIiG7HBJDshsrLC/D1Be401YpMBlUFY/Xuhc/rr0MVHIybixYhY+XKotO5ucFj5EjUffYZyFQqi5yXiIioJCaAZFfq//A9Lj/ct8IymmGW64aVZDLUGT8eHmPGoPDyZQi9HqqQEMgcHCx2TiIiottxDCDZFXWDBvB+/fXyCygUyFj2K24tXmzROCS5HOqGDeEQEcHkj4iIqh0TQLI7nmNGI+S3XyE5OhZtkMuhrF8fgT98j0YHD6DO+PFImj0H2du3WzdQIiIiC2EXMNklbWIiRF4eQn5fDsemTU32eU//P+QdO4abC2PgUtVVRIiIiGoAtgCSXcrZsRPq8PBSyR8ASJIEzcCByN27F4b8fCtER0REZFlMAMkuCa0WsuIu4DLInJyKyllgRRAiIiJrYwJIdsmhWTPknToFbVJymfuzt26BKjQUMmfnao6MiIjI8pgAkl3SDOgPmVqNxHfegaGw0GRf1pYtyNywER6jRkGSJCtFSEREZDm8CYTsktzVFf4ff4Qbzz6Hy737QDNwIOQeHsjetRM5O3bCtXt3eIwcYe0wiYiILEISQog7FcrMzIRGo0FGRgbc3NyqIy6iapF/7hxuLYxB1pYtEPn5UIeHw2PEcGgGDYIkl1s7PCIiokqrSr7GBJCIiIioFqhKvsYxgERERER2hgkgERERkZ1hAkhERERkZ3gXMBFZRIG+APsS9iGzMBNBrkFo7tWc0+oQEdkIJoBENk4UFiJr+3Zor16FzNUVrt27Q1GnjrXDKpcQAj+e+RHfHv8WaQVpxu0NPRrizQ5voqV3S+sFR0REAHgXMJFNy9qyBQlvvQV9SipkLi4w5OVBksngMW4svKdOtcmpar4/8T3+d/h/GBo+FGMaj4Gvsy+OphzFV0e/wrlb57Cw90I082pm7TCJiGod3gVMVAvk7N2L688+B8fm9yF0zWo0OngADXfthOcTj+PWwhgkf/iRtUMsJT0/HfOPzceEphPw5v1vor57fTgpndDRvyO+7/k9gtyCMO/wPGuHSURk95gAEtmolHmfw7F5c9Sb9z84hIcDABQeHqj79NOo+/zzuLV0ablrGVvLxisboTfoMaHphFL7HBQOGNdkHPYk7EFSTlL1B0dEREZMAIlskPbGDeQdPow648ZCUpQequsxcgQkmQxZGzZYIbrypealoo5DHXg6epa5P8wjDABwM/9mdYZFRES3YQJIZIP0GRkAAGVgYJn75W5ukLu7Q5+eXo1R3ZmXoxdu5d9Cal5qmfsvpF0wliMiIuthAkhkgxS+voBcjrzjx8vcr42Phy41FcqAgGqOrGK9QnpBLpNj4cmFpfbl6/Kx+PRidPTvCG8nbytER0RExZgAEtkgRZ06cI2Oxq2FMaVa+YQQSPn8C8gcHeHWu5d1AiyHRq3BUy2fwuLTizHzn5k4n3Ye2YXZ2Hl9JyZvmIzrWdfxXORz1g6TiMjucR5AIhvlPW0q4kaMROzw4fCcMgVOkZHQxsfj1pIlyNmxE36z3oPM2dnaYZYyselEOMgd8M3xb/D7hd+N2yPqROC7nt+hqWdTK0ZHREQA5wEksmkFsbFIfn8usnfsAP79qKrCGqDus8/BrVdPK0dXMa1eiwOJB5BZmIlAt0A0qdOEK4EQEVlQVfI1JoBENYA2MRHaGzcgc3WFumFDJlJERFRKVfI1dgET1QBKX18ofX2tHQYREdUSvAmEiIiIyM4wASQiIiKyM0wAiYiIiOwMxwASUY0ghMCJ1BNIyUtBXce6aO7VnDfDEBHdJSaAVDsJAeSkAEIgR3LGvv37cfz4ceTk5MDNzQ2tWrVCmzZt4ODgYO1IqRJ2XN+Bjw5+hNiMWOO2QJdAjIwYiYcbPIw6DnWsGB0RUc3DaWCodhECOLQQ2Ps1kHoeaXDDQtko5EtOaN4yEl5eXkhMTMTJkyfh6emJ8ePHw9kGJ1Om/2y/th3PbX0OHfw6YErzKUjJTcFXx77ClcwrAAAZZIgOisbU1lMR6Fb22slERPagKvkaxwBS7SEE8OeLRQ/vJsCwxVjp9TzkCgWe1n+HfoYNuL9DBwwaNAhPPPEEsrOzsW7dOmtHTRUwCAPmHpiLjv4d8VW3r5Cal4pXdr4CHycffPLgJ2hVtxXc1G44ffM0xqwbg2uZ16wdMhFRjcAEkGqPy1uLWv/6zQP6f4HE49txNTUbPXR/Q6MSwJElwKmVAIC6deuiS5cuOH36NLKysqwcOAGA3qDH1cyriMuIg9agBQAcST6Ca1nX8Nh9j6HQUIj39r6H3iG98V3P79AjpAdebPMi0gvS8Uq7V+CocMSnhz+18lUQEdUMHANItcfBhYB3U6BeO+CjhrihawCgBxp5GID0ooQCKx4F/FsBdUIRERGB9evXIzExEa6urlYN3Z4ZhAFLTy/Fj2d+RHxOPACgrmNdDGs0DPVc6gEAGnk0wt9X/0ZWYRaebfUsZJLMuB0AcnW5GNdkHD448AFu5d/imEAiojtgAki1R8o5oH5XIKYPoMuHrOUo4GgKtI/ugFwhAd93AxJPAEsGAc8dgVZblBTK5XLrxm3HhBCY+c9MrLq4Cv0a9MPDoQ9DJpNhU9wmfHP8GzTzbAYAuJxxGdeyrsHT0dNknN/ljMsAAE9HT4RqQqEXeiTkJDABJCK6AyaAVHuonID4I0BeGnDfcNSPGgPp2Gc4fvw42rVrB9RtDKReANJigesHcOxcJtRqNerVq2ftyO3WvsR9WHlxJd7t9C4Ghg00bu/g1wFd6nXBM1uegbvaHT+c+AGtfVojsyAT2YXZcFG5QAiBBScXwM/ZD2192mLbtW0AADcVb1QjIroTJoBUezTuD2x5t+j/7R+HRqNBs2bNsHnzZtRxkqPB6T8ghXWDOPcXTv6zCf+c0+P++++HSqWybtx27PfzvyPMPQwDGgwote/BwAfRxqcN0vPTsfnqZmgNWugMOiw7twydAjrh+xPfY9OVTfigyweQJAk/nv0Rzb2aI9CVdwITEd0JE0Bbl3YFOLgAiNsFQABB9wNtJwN16ls7MtsTOR7YNgfQFwIpF4CA1ujbty+ybyVi6fI/4CMbBq/MekiEF26e0aJp06aIjo62dtR27UrmFUR6R5Y7oXNrn9ZYdXEV3u/8Pj45+AkMMOCzw5/hs8OfwcvRC+93fh9NPZti+o7pOJh4EF92+7Kar4CIqGZiAmjLzv4F/DYRUDgAjfoAkgQc/RHY9w0w+Bug2RBrR2hbnD2B+58Bdn0CrHoc2Pkh1JAw9uZFXHRqi+P+w5Fz7RTqIQH9Hn4YwW16ciUJK3NRuSApN6nc/Um5SXBVueKBgAeQlJOEDXEbcCP7BjIKM5CWl4YPD3yIm/k3oVFrMLfLXHSu17kaoyciqrmYANqqW7FFyV94L2DQfED172TF2jxgzXPAiseK7nj1jrBunLam81Rg75eArgDQBAFeYZB1ewPhjR5C+MEY4OICwD0EaNvL2pESgF7BvTBn/xxczbyKILcgk32peanYELcBfUL64KEVDyFXl4sOfh3g4eCBfYn7oDfoAQA9g3tiauupCHANsMYlEBHVSJwH0FYd+L7opoZB3/yX/AGA0hEY8CXg5Ans/9Z68dkqtSswbCkgyYHLW4BTq4A9XwEfNwLWvQSoXIAJf1g7SvpXvwb94O/ij8c3PY59CfsghIAQAkeTj+KxTY/BUeGIDVc2IMAlAD8+9CNGNx6Nw8mHoTfoIZfkuJl/E5uvbMagNYOw68Yua18OEVGNwaXgbNX8zoDffUXJXlnWvgxc2go8e7B646opkk4DG18H4nYCBh2gdAYa9wX6fAA48D1sS25k38CLW1/EmVtn4OngCbkkR3JeMvyd/SGTZLiefb1Sx1HJVFg9cDXqufKubiKyT1XJ19gFbKuEAGQV/HhkSkAYqi+emsanCTB2hbWjoEoIcAnAsr7LcDDpIPYl7INBGODr7IvPDn+GQn0hIupEYOb9MzF161TE58aXe5xCQyGWnl6KV9q/Uo3RExHVTOwCtlVB7YFz6wBdYel9Bj1w5g8gqEP1x0VkAZIkoa1vWzzT6hk8F/kcNl3ZhLqOdRHuEY6G7g2RVpBWYfJXbNnZZdUQLRFRzccE0NZk3AB2fATkpALZSUVLl/072B0AYDAUdW1mXAPaPWq9OIks5FrWNexN2IspzaegRd0W2HVjF57/+/lK1dVBh0qMaiEisnvsArYVQgA7PgS2vV807YtXw6IbFk6vAuZsAlqPB+RK4PRqIC0OeOijojVtiWqZa1nXAACtvFuhmVcz/HjmRwhUPqnL1+fDUeFoqfCIiGoFJoC24uACYOssoMvLQMfnim5U0BUCOz4Adn4MHF4MOHoUTQQ9ZAFQr7W1IyayCI1KAwBIyElAW9+2CHELQWxmbKXrswWQiOjOmADaAr0O2PkJcN8IIPr1/7YrVEXP1a7A3+8CU/4GXH2sFydRNWjs2RiBroH46cxPaOPTBnGZcVWqfz37OsI9wi0THBFRLcExgLYg4SiQeR1oM6ns/ZHjAIMW2PIOcPzXonGCRLWUTJLhqZZPYfPVzXh377tV6v4FABl/rRER3RFbAG1BYU7Rv85epfdlJQKrny76/5GlRQ9JDjQdBPT9lHPaUa3Ut35f5Gpz8fHBj6tcN1gTbIGIiIhqF35VtgVeDQFJBsRuN92enwHE9AXijxY9H7kMmH4F6DMXuLAR+GkYoNdWe7hE1WFYo2HY9MimKtdTypQWiIaIqHZhAmgL3PyB8D5F4wAzE/7bfmgRkH4FcAsA6tQHGvYsWhbOxQcIfgC4uqeoDFEt5aZmCzcRkSUwAbQVfd4vWtnjm87A1tnAufXAni8BuQq4eREY+DVwagUw2x/4dSxwfm1RvbXTgHd9gNTL1o2fyAY8HPKwtUMgIqoROAbQVrgHAVM2F80F+M8XgPbfcYHejYEhPwA3LwO/Ty67rj4f+KIV4N0SeHxz0XyBRHZoapup1g6BiKhGYAugLXHzL7qxY3osMO084NMM8AoHvJsAf1XiD1vyUeBdL2DXZ0UTSxPVAp4qz0qX9Xb2tmAkRES1BxNAW6RQF833FzkOOPsXcGolkJNc+fqb3wLWv2q5+IiqSa42F4WijPWwyxDqGmrhaIiIag8mgLas1Zii1r8/nqt63X1fAwlnzR8TUTVacnoJ8vX5lSr7SKNHLBwNEVHtwQTQlqmcgXGrgaCOd1f/m/bsCqYaSwiB5ReWo3+D/qivqV9hWVelKwaEDaimyIiIaj4mgLbOqQ4w+te7n/D5bfdyk8B8rR5/HIvHl1svYsneK0jJKrj7OInMLE+Xh8ScRLT1bYuY3jEIcQ0ps5xSUmJRn0XQqDXVGyARUQ3Gu4BrioHfAL+MvLu6b7sDMzNMNq09kYDXV53ErZxC1HFWIStfi3f+OIXx94fg1YcaQy6T7j1monuglCuhkBRIzUuFh4MH1gxagx3XdyDmVAwScxLhqnJFUm4SogKj0NCjobXDJSKqUZgA1hQRDwGdpwM7595d/VOrgKYDAQDbz6fgmZ8Oo08zP0zrGY76dV2QkavF0n1X8Mmm8xAA3ujbxFyRE90VpUyJqKAorLiwAqMiRkEpV+LBwAfxYOCDAIC9CXvx6MZH0Sukl5UjJSKqedgFXJN0mwHgLruCfxsP/DkVyLiBTzaeQ9uQOvh8ZCvUr+sCANA4KfF0VBim9gjHon/ikJxZuYH3RJY0qdkkXM26imnbp+FG9g0AgEEYsP3adkzfMR0t6rZAe7/2Vo6SiKjmkYS4810CmZmZ0Gg0yMjIgJsbl2ayupl3OdZJkkMAmFk4BvePfBW9m/mVKpKRp0Xb9zbjtYcbY3zHkHsKk8gctl/bjld3vYrswmzU19RHZmEmUvJS0ManDT7p+gk8HDysHSIRkU2oSr7GLuCaaGbGXSSBMkDoAUmOt5WLkHLeEWj6PiCZjvXTOCrh5qhEeq7WfPES3YMHAx/E5kc2Y33cepxPOw+VXIXowGi0qNsCksSxqkREd4MJYE1V1SRQ5QwUZiGv1RRoDy1B3ePzUagoxAqfF3D5Zi6cVQr0ae4LtUKGmzkFCPJ0tFzsRFXkpHTC4IaDrR0GEVGtwQSwJqtKEtjjbeCvqXB68Hl8f90TU5JnQ3V4AXZo3XDWIwo3cwrx6ebz8Nc4wFWtQO+mpbuHiYiIqHbgTSA13cwMYNKOisuM+g04FAOEdgE0AWgUGgQAOC4aYEbdXfhydCTmDmmOht4uiM/IR6iXMxxVcsvHTkRERFbBBLA2CGpRlAg26me63dkXqNcW2P0ZkHIOiH4TAJB1Yh0yJDecrxMNj7QT6PO/nXhi6WGoFDJM7hSKY9czcCEpq/qvg4iIiKoFu4BrkxFLgN3/A3Z8DBRmAjmJRQ/PMGDM70BgW6Rf2IOuOetxLXwcHgnwgmGvI1ZO7gg3RyXqezlDqxdYfvg6/jqRgBd8XK19RURERGQBbAGsTSQJeOAF4KWzQOeXAOnfH2/jAUBmPLD6aWh+GYAzIghprZ4Gjv8KWcMeaBXkgQZ1XSBJElQKGTxdVMjO11n1UoiIiMhy2AJYG6mcgW5vAA2igCWDgV2fABCAJgi6B17GC1sDMX/b60BaHDDkO5OqCRl5iEvNQf0HXKwSOhEREVkeWwBrs5AHgMkbAWcvQJIDng2gTDqKTYoXEZ68DqndPwMCWhuLGwwCH6w/B0elHP1b+lsvbiIiIrIotgDWdv4tgWcPA8eXARc3A9o8GNo9gXHHm+DC3xqMyz2PDvU9kZSZj6V7r+DQ1TR8OqwlXNR8axAREdVWXArOTqVmF+DTTeex8sgN5BbqAQDtQurgmegwdAmva+XoiIiIqKqqkq8xAbRzuYU6JGUWwFkth7erg7XDISIiorvEtYCp0pxUCoR68W1ARERkT3gTCBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2hgkgERERkZ1hAkhERERkZ5gAEhEREdkZJoBEREREdoYJIBEREZGdYQJIREREZGeYABIRERHZGSaARERERHaGCSARERGRnWECSERERGRnmAASERER2RkmgERERER2RmHtAErKyMhAbm6utcOgWszJyQkajcbaYRAREVmVzSSAGRkZ+OKLL6DVaq0dCtViSqUSzzzzDJNAIiKyazaTAObm5kKr1WLw4MGoW7eutcOhWiglJQUrVqxAbm4uE0AiIrJrNpMAFqtbty78/PysHQYRERFRrcWbQIiIiIjsDBNAIiIiIjvDBJCIiIjIzjABJCIiIrIzNSYBjIuLgyRJkCQJvr6+0Ol0ZZY7c+aMsVxISEip/VevXsVTTz2Fhg0bwsHBAS4uLggNDcXDDz+MuXPn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",
+      "image/png": "",
       "text/plain": [
        "<Figure size 800x600 with 1 Axes>"
       ]
@@ -1468,12 +1637,12 @@
     {
      "data": {
       "application/vnd.jupyter.widget-view+json": {
-       "model_id": "5c943ca84d8d4350a3fe829379d5d82e",
+       "model_id": "eb4bbb0ceb3349db95e21499a072b969",
        "version_major": 2,
        "version_minor": 0
       },
       "text/plain": [
-       "VBox(children=(Label(value='10.640 MB of 10.640 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
+       "VBox(children=(Label(value='1.025 MB of 1.025 MB uploaded\\r'), FloatProgress(value=1.0, max=1.0)))"
       ]
      },
      "metadata": {},
@@ -1487,7 +1656,7 @@
        "    .wandb-row { display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; width: 100% }\n",
        "    .wandb-col { display: flex; flex-direction: column; flex-basis: 100%; flex: 1; padding: 10px; }\n",
        "    </style>\n",
-       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>147</td></tr><tr><td>Encoder Training Loss</td><td>1.66e-06</td></tr><tr><td>Encoder Validation Loss</td><td>7.01e-06</td></tr><tr><td>Learning Rate at Final Epoch</td><td>0.0</td></tr></table><br/></div></div>"
+       "<div class=\"wandb-row\"><div class=\"wandb-col\"><h3>Run history:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>▁</td></tr><tr><td>Learning Rate at Final Epoch</td><td>▁</td></tr></table><br/></div><div class=\"wandb-col\"><h3>Run summary:</h3><br/><table class=\"wandb\"><tr><td>Early Stopping Ecoch</td><td>68</td></tr><tr><td>Encoder Training Loss</td><td>2.60e-07</td></tr><tr><td>Encoder Validation Loss</td><td>5.55e-06</td></tr><tr><td>Learning Rate at Final Epoch</td><td>0.0</td></tr></table><br/></div></div>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1499,7 +1668,7 @@
     {
      "data": {
       "text/html": [
-       " View run <strong style=\"color:#cdcd00\">electric-valley-486</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/wy2m6ujt</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 4 artifact file(s) and 0 other file(s)"
+       " View run <strong style=\"color:#cdcd00\">solar-glade-493</strong> at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder/runs/w6xo7a6b</a><br/> View project at: <a href='https://wandb.ai/catemerfeld/ims_encoder_decoder' target=\"_blank\">https://wandb.ai/catemerfeld/ims_encoder_decoder</a><br/>Synced 6 W&B file(s), 2 media file(s), 3 artifact file(s) and 0 other file(s)"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1511,7 +1680,7 @@
     {
      "data": {
       "text/html": [
-       "Find logs at: <code>./wandb/run-20241215_122731-wy2m6ujt/logs</code>"
+       "Find logs at: <code>./wandb/run-20241215_141144-w6xo7a6b/logs</code>"
       ],
       "text/plain": [
        "<IPython.core.display.HTML object>"
@@ -1527,7 +1696,7 @@
       "Hyperparameters for best model: \n",
       "    batch_size  :  64\n",
       "    epochs  :  500\n",
-      "    learning_rate  :  1e-05\n"
+      "    learning_rate  :  0.0001\n"
      ]
     }
    ],
@@ -1545,7 +1714,7 @@
     "model_hyperparams = {\n",
     "  'batch_size':[64],\n",
     "  'epochs': [500],\n",
-    "  'learning_rate':[.00001]\n",
+    "  'learning_rate':[.0001]\n",
     "  }\n",
     "\n",
     "encoder_path = '../models/ims_to_chemnet_encoder.pth'\n",
diff --git a/models/ims_to_chemnet_encoder.pth b/models/ims_to_chemnet_encoder.pth
index b5f79f84..4f43b7b1 100644
Binary files a/models/ims_to_chemnet_encoder.pth and b/models/ims_to_chemnet_encoder.pth differ
diff --git a/models/tmp_plot.png b/models/tmp_plot.png
index b16f78d9..d40b2fbd 100644
Binary files a/models/tmp_plot.png and b/models/tmp_plot.png differ
diff --git a/models/wandb/debug-internal.log b/models/wandb/debug-internal.log
index edaa553f..2151484c 120000
--- a/models/wandb/debug-internal.log
+++ b/models/wandb/debug-internal.log
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq/logs/debug-internal.log
\ No newline at end of file
+run-20241216_121326-x65c1r28/logs/debug-internal.log
\ No newline at end of file
diff --git a/models/wandb/debug.log b/models/wandb/debug.log
index 0ae693ab..4c94d453 120000
--- a/models/wandb/debug.log
+++ b/models/wandb/debug.log
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq/logs/debug.log
\ No newline at end of file
+run-20241216_121326-x65c1r28/logs/debug.log
\ No newline at end of file
diff --git a/models/wandb/latest-run b/models/wandb/latest-run
index 3dcf7892..dff3c417 120000
--- a/models/wandb/latest-run
+++ b/models/wandb/latest-run
@@ -1 +1 @@
-run-20241215_125940-dcv1gljq
\ No newline at end of file
+run-20241216_121326-x65c1r28
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml b/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
index 1bfd159a..9c602c66 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
@@ -57,6 +57,7 @@ _wandb:
       - 53
       - 55
       3:
+      - 2
       - 16
       - 23
       4: 3.8.10
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log b/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
index 11569b90..67557d80 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
@@ -28,3 +28,4 @@ Epoch[30/500]:
    Training loss: 1.5108762595443828e-05
    Validation loss: 1.532883205113239e-05
 -------------------------------------------
+Saved best model at epoch 31
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json b/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
index c8a05c43..f192de43 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
@@ -1 +1 @@
-{"Encoder Training Loss": "1.71e-05", "Encoder Validation Loss": "6.01e-06", "_timestamp": 1734285585.0968778, "_runtime": 1609.8468878269196, "_step": 32}
\ No newline at end of file
+{"Encoder Training Loss": "1.53e-05", "Encoder Validation Loss": "8.98e-06", "_timestamp": 1734285633.84122, "_runtime": 1658.591229915619, "_step": 33, "_wandb": {"runtime": 1685}}
\ No newline at end of file
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
index a5660a45..9f887d7d 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug-internal.log
@@ -808,3 +808,228 @@
 2024-12-15 12:59:56,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
 2024-12-15 12:59:56,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
 2024-12-15 13:00:00,780 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:05,781 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:10,781 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:11,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:11,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:15,854 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:20,854 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:25,855 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:25,982 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:00:26,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:26,716 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:31,780 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:33,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:33,842 DEBUG   SenderThread:273237 [sender.py:send():378] send: history
+2024-12-15 13:00:33,842 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:33,842 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:34,188 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:00:36,843 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:41,716 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:41,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:42,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:47,841 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:52,842 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:55,982 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:00:56,717 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:56,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:58,824 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:00,621 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:00,621 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:00,624 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: pause
+2024-12-15 13:01:00,625 INFO    HandlerThread:273237 [handler.py:handle_request_pause():724] stopping system metrics thread
+2024-12-15 13:01:00,625 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:00,626 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:00,626 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:00,626 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:00,627 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:00,729 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:01,780 INFO    wandb-upload_0:273237 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpycmcvee1
+2024-12-15 13:01:02,436 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MTI5NTgxNg==', 'versionIndex': 9}}}
+2024-12-15 13:01:02,437 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:04,438 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:09,438 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:11,717 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:11,717 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:13,196 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: resume
+2024-12-15 13:01:13,196 INFO    HandlerThread:273237 [handler.py:handle_request_resume():715] starting system metrics thread
+2024-12-15 13:01:13,196 INFO    HandlerThread:273237 [system_monitor.py:start():194] Starting system monitor
+2024-12-15 13:01:13,196 INFO    SystemMonitor:273237 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2024-12-15 13:01:13,196 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started cpu monitoring
+2024-12-15 13:01:13,197 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started disk monitoring
+2024-12-15 13:01:13,198 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started gpu monitoring
+2024-12-15 13:01:13,198 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started memory monitoring
+2024-12-15 13:01:13,199 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started network monitoring
+2024-12-15 13:01:13,300 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:13,300 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:13,305 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: pause
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [handler.py:handle_request_pause():724] stopping system metrics thread
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:13,306 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:01:13,306 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:13,307 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:13,307 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:13,389 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'COMMITTED', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'versionIndex': 10}}}
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:13,401 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:13,401 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:15,402 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:20,403 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,417 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: resume
+2024-12-15 13:01:24,417 INFO    HandlerThread:273237 [handler.py:handle_request_resume():715] starting system metrics thread
+2024-12-15 13:01:24,417 INFO    HandlerThread:273237 [system_monitor.py:start():194] Starting system monitor
+2024-12-15 13:01:24,417 INFO    SystemMonitor:273237 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started cpu monitoring
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started disk monitoring
+2024-12-15 13:01:24,418 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started gpu monitoring
+2024-12-15 13:01:24,419 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started memory monitoring
+2024-12-15 13:01:24,419 INFO    SystemMonitor:273237 [interfaces.py:start():188] Started network monitoring
+2024-12-15 13:01:24,487 DEBUG   SenderThread:273237 [sender.py:send():378] send: telemetry
+2024-12-15 13:01:24,575 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:01:24,575 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:01:24,649 INFO    SenderThread:273237 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'state': 'COMMITTED', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NDkyMA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU5OTYxNQ==', 'versionIndex': 10}}}
+2024-12-15 13:01:24,649 DEBUG   SenderThread:273237 [sender.py:send():378] send: exit
+2024-12-15 13:01:24,649 INFO    SenderThread:273237 [sender.py:send_exit():585] handling exit code: 0
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:send_exit():587] handling runtime: 1685
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:24,650 INFO    SenderThread:273237 [sender.py:send_exit():593] send defer
+2024-12-15 13:01:24,650 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,650 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 0
+2024-12-15 13:01:24,650 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 0
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 1
+2024-12-15 13:01:24,651 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 1
+2024-12-15 13:01:24,651 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 1
+2024-12-15 13:01:24,651 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 2
+2024-12-15 13:01:24,651 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 2
+2024-12-15 13:01:24,651 INFO    HandlerThread:273237 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:01:24,651 DEBUG   SystemMonitor:273237 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:01:24,652 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:01:24,652 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:01:24,744 INFO    HandlerThread:273237 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:01:24,744 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 2
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 3
+2024-12-15 13:01:24,745 DEBUG   SenderThread:273237 [sender.py:send():378] send: stats
+2024-12-15 13:01:24,745 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,745 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 3
+2024-12-15 13:01:24,745 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 3
+2024-12-15 13:01:24,745 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 4
+2024-12-15 13:01:24,745 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,745 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 4
+2024-12-15 13:01:24,746 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 4
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 5
+2024-12-15 13:01:24,746 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,746 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 5
+2024-12-15 13:01:24,746 DEBUG   SenderThread:273237 [sender.py:send():378] send: summary
+2024-12-15 13:01:24,746 INFO    SenderThread:273237 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:24,747 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 5
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 6
+2024-12-15 13:01:24,747 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,747 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 6
+2024-12-15 13:01:24,747 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,747 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 6
+2024-12-15 13:01:24,749 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,819 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 7
+2024-12-15 13:01:24,820 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:24,820 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 7
+2024-12-15 13:01:24,820 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:24,820 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 7
+2024-12-15 13:01:25,200 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:01:25,200 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+2024-12-15 13:01:25,577 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:26,547 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 8
+2024-12-15 13:01:26,548 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:26,548 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:26,548 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 8
+2024-12-15 13:01:26,548 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 8
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [job_builder.py:build():432] Attempting to build job artifact
+2024-12-15 13:01:26,548 INFO    SenderThread:273237 [job_builder.py:_get_source_type():565] is repo sourced job
+2024-12-15 13:01:26,549 INFO    SenderThread:273237 [job_builder.py:_get_program_relpath():583] run is notebook based run
+2024-12-15 13:01:26,550 INFO    SenderThread:273237 [job_builder.py:build():541] adding wandb-job metadata file
+2024-12-15 13:01:26,553 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 9
+2024-12-15 13:01:26,554 DEBUG   SenderThread:273237 [sender.py:send():378] send: artifact
+2024-12-15 13:01:26,554 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:26,556 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 9
+2024-12-15 13:01:26,577 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:27,034 INFO    wandb-upload_2:273237 [upload_job.py:push():85] Skipped uploading /home/cmdunham/.local/share/wandb/artifacts/staging/tmpoeboqaj1
+2024-12-15 13:01:27,130 INFO    wandb-upload_0:273237 [upload_job.py:push():88] Uploaded file /tmp/tmpzh_sg04w/wandb-job.json
+2024-12-15 13:01:27,201 INFO    Thread-12 :273237 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+2024-12-15 13:01:27,316 INFO    wandb-upload_1:273237 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpu31fyxzj
+2024-12-15 13:01:28,036 INFO    SenderThread:273237 [sender.py:send_artifact():1467] sent artifact job-https___github.com_CateMerfeld_ChemicalDataGeneration.git__home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzYwMDkxMw==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMjk5NTQ1MQ==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MTI5NTg0MQ==', 'versionIndex': 12}}}
+2024-12-15 13:01:28,037 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,037 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 9
+2024-12-15 13:01:28,037 INFO    SenderThread:273237 [dir_watcher.py:finish():358] shutting down directory watcher
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():388] scan: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log output.log
+2024-12-15 13:01:28,201 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-metadata.json wandb-metadata.json
+2024-12-15 13:01:28,202 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json wandb-summary.json
+2024-12-15 13:01:28,203 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml config.yaml
+2024-12-15 13:01:28,203 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/requirements.txt requirements.txt
+2024-12-15 13:01:28,206 INFO    SenderThread:273237 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/diff.patch diff.patch
+2024-12-15 13:01:28,208 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 10
+2024-12-15 13:01:28,208 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,210 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,210 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 10
+2024-12-15 13:01:28,210 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,211 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 10
+2024-12-15 13:01:28,211 INFO    SenderThread:273237 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:01:28,398 INFO    wandb-upload_2:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/output.log
+2024-12-15 13:01:28,424 INFO    wandb-upload_1:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/wandb-summary.json
+2024-12-15 13:01:28,478 INFO    wandb-upload_3:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/requirements.txt
+2024-12-15 13:01:28,512 INFO    wandb-upload_0:273237 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/files/config.yaml
+2024-12-15 13:01:28,579 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:28,580 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,713 INFO    Thread-11 :273237 [sender.py:transition_state():613] send defer: 11
+2024-12-15 13:01:28,713 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,713 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 11
+2024-12-15 13:01:28,713 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 11
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [file_pusher.py:join():175] waiting for file pusher
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 12
+2024-12-15 13:01:28,714 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,714 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 12
+2024-12-15 13:01:28,714 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 12
+2024-12-15 13:01:28,714 INFO    SenderThread:273237 [file_stream.py:finish():601] file stream finish called
+2024-12-15 13:01:28,785 INFO    SenderThread:273237 [file_stream.py:finish():605] file stream finish is done
+2024-12-15 13:01:28,785 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 13
+2024-12-15 13:01:28,785 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,786 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 13
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 13
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:transition_state():613] send defer: 14
+2024-12-15 13:01:28,786 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:01:28,786 INFO    HandlerThread:273237 [handler.py:handle_request_defer():184] handle defer: 14
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send():378] send: final
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send():378] send: footer
+2024-12-15 13:01:28,786 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:01:28,786 INFO    SenderThread:273237 [sender.py:send_request_defer():609] handle sender defer: 14
+2024-12-15 13:01:28,787 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:01:28,787 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:01:28,788 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: internal_messages
+2024-12-15 13:01:28,789 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: server_info
+2024-12-15 13:01:28,789 DEBUG   SenderThread:273237 [sender.py:send_request():405] send_request: server_info
+2024-12-15 13:01:28,829 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: get_summary
+2024-12-15 13:01:28,829 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: sampled_history
+2024-12-15 13:01:28,873 DEBUG   HandlerThread:273237 [handler.py:handle_request():158] handle_request: shutdown
+2024-12-15 13:01:28,873 INFO    HandlerThread:273237 [handler.py:finish():882] shutting down handler
+2024-12-15 13:01:29,789 INFO    WriterThread:273237 [datastore.py:close():296] close: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [sender.py:finish():1545] shutting down sender
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:01:29,834 INFO    SenderThread:273237 [file_pusher.py:join():175] waiting for file pusher
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
index 09ed09d9..0b9da94d 100644
--- a/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
+++ b/models/wandb/run-20241215_123255-9rg0y8kk/logs/debug.log
@@ -28,3 +28,36 @@ config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder',
 2024-12-15 12:32:56,626 INFO    MainThread:272367 [wandb_run.py:_redirect():2294] Wrapping output streams.
 2024-12-15 12:32:56,626 INFO    MainThread:272367 [wandb_run.py:_redirect():2319] Redirects installed.
 2024-12-15 12:32:56,627 INFO    MainThread:272367 [wandb_init.py:init():838] run started, returning control to user process
+2024-12-15 13:01:00,323 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:00,622 INFO    MainThread:272367 [wandb_init.py:_pause_backend():429] saved code: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:00,623 INFO    MainThread:272367 [wandb_init.py:_pause_backend():431] pausing backend
+2024-12-15 13:01:13,195 INFO    MainThread:272367 [wandb_init.py:_resume_backend():436] resuming backend
+2024-12-15 13:01:13,199 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:13,301 INFO    MainThread:272367 [wandb_init.py:_pause_backend():429] saved code: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:13,301 INFO    MainThread:272367 [wandb_init.py:_pause_backend():431] pausing backend
+2024-12-15 13:01:24,416 INFO    MainThread:272367 [wandb_init.py:_resume_backend():436] resuming backend
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Current SDK version is 0.17.0
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Configure stats pid to 272367
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from /home/cmdunham/.config/wandb/settings
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from /home/cmdunham/ChemicalDataGeneration/models/wandb/settings
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Loading settings from environment variables: {'notebook_name': '/home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb'}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program': '<python with no main file>'}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_setup.py:_flush():76] Applying login settings: {}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:_log_setup():520] Logging user logs to /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_130124-zvr1gl37/logs/debug.log
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:_log_setup():521] Logging internal logs to /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_130124-zvr1gl37/logs/debug-internal.log
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():560] calling init triggers
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():567] wandb.init called with sweep_config: {}
+config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder', 'gpu': True, 'threads': 1, 'architecture': 'carl_encoder', 'optimizer': 'AdamW', 'loss': 'MSELoss', 'dataset': 'carls', 'target_embedding': 'ChemNet', 'batch_size': 16, 'epochs': 500, 'learning_rate': 1e-05}
+2024-12-15 13:01:24,486 INFO    MainThread:272367 [wandb_init.py:init():585] re-initializing run, found existing run on stack: 9rg0y8kk
+2024-12-15 13:01:24,487 INFO    MainThread:272367 [wandb_run.py:_finish():2103] finishing run catemerfeld/ims_encoder_decoder/9rg0y8kk
+2024-12-15 13:01:24,487 ERROR   MainThread:272367 [jupyter.py:save_history():437] Run pip install nbformat to save notebook history
+2024-12-15 13:01:24,487 INFO    MainThread:272367 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/carl_encoder.ipynb
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_init.py:_jupyter_teardown():447] saved code and history: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_carl_encoder.ipynb>
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_init.py:_jupyter_teardown():448] cleaning up jupyter logic
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_atexit_cleanup():2343] got exitcode: 0
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_restore():2326] restore
+2024-12-15 13:01:24,576 INFO    MainThread:272367 [wandb_run.py:_restore():2332] restore done
+2024-12-15 13:01:29,875 INFO    MainThread:272367 [wandb_run.py:_footer_history_summary_info():3994] rendering history
+2024-12-15 13:01:29,875 INFO    MainThread:272367 [wandb_run.py:_footer_history_summary_info():4026] rendering summary
+2024-12-15 13:01:29,883 INFO    MainThread:272367 [wandb_run.py:_footer_sync_info():3953] logging synced files
diff --git a/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb b/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb
index 2adade58..703ef30d 100644
Binary files a/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb and b/models/wandb/run-20241215_123255-9rg0y8kk/run-9rg0y8kk.wandb differ
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml b/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
index 9bba9e25..2146a972 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
@@ -51,7 +51,13 @@ _wandb:
       - 5
       - 53
       - 55
+      2:
+      - 1
+      - 5
+      - 53
+      - 55
       3:
+      - 2
       - 16
       - 23
       4: 3.8.10
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/output.log b/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
index 69098ed0..041cb874 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
@@ -5,3 +5,161 @@ New run with hyperparameters:
 batch_size  :  64
 epochs  :  500
 learning_rate  :  1e-05
+Saved best model at epoch 1
+Saved best model at epoch 3
+Saved best model at epoch 5
+Saved best model at epoch 6
+Saved best model at epoch 10
+Epoch[10/500]:
+   Training loss: 6.062117196524913e-05
+   Validation loss: 2.5157226914506485e-05
+-------------------------------------------
+Saved best model at epoch 16
+Epoch[20/500]:
+   Training loss: 3.836389096422698e-05
+   Validation loss: 3.4220929445914785e-05
+-------------------------------------------
+Epoch 00022: reducing learning rate of group 0 to 1.0000e-06.
+Saved best model at epoch 23
+Saved best model at epoch 25
+Saved best model at epoch 26
+Saved best model at epoch 28
+Saved best model at epoch 30
+Epoch[30/500]:
+   Training loss: 3.855743158063026e-06
+   Validation loss: 8.046485016957117e-06
+-------------------------------------------
+Saved best model at epoch 31
+Saved best model at epoch 33
+Saved best model at epoch 35
+Saved best model at epoch 36
+Saved best model at epoch 38
+Saved best model at epoch 39
+Epoch[40/500]:
+   Training loss: 2.919524466804444e-06
+   Validation loss: 7.174230290925792e-06
+-------------------------------------------
+Saved best model at epoch 44
+Saved best model at epoch 50
+Epoch[50/500]:
+   Training loss: 2.4900585302915096e-06
+   Validation loss: 6.865450313225437e-06
+-------------------------------------------
+Saved best model at epoch 51
+Saved best model at epoch 52
+Saved best model at epoch 56
+Saved best model at epoch 57
+Epoch[60/500]:
+   Training loss: 1.988277059460727e-06
+   Validation loss: 6.922447922581916e-06
+-------------------------------------------
+Saved best model at epoch 62
+Saved best model at epoch 66
+Epoch[70/500]:
+   Training loss: 1.7999362886212595e-06
+   Validation loss: 6.703472853398182e-06
+-------------------------------------------
+Epoch 00072: reducing learning rate of group 0 to 1.0000e-07.
+Saved best model at epoch 73
+Saved best model at epoch 74
+Saved best model at epoch 75
+Saved best model at epoch 76
+Saved best model at epoch 77
+Epoch[80/500]:
+   Training loss: 1.4018745428183461e-06
+   Validation loss: 6.301226249601113e-06
+-------------------------------------------
+Saved best model at epoch 81
+Saved best model at epoch 86
+Saved best model at epoch 88
+Epoch[90/500]:
+   Training loss: 1.3755189488438296e-06
+   Validation loss: 6.26250037320687e-06
+-------------------------------------------
+Saved best model at epoch 94
+Saved best model at epoch 97
+Epoch[100/500]:
+   Training loss: 1.357571042490301e-06
+   Validation loss: 6.241341628034666e-06
+-------------------------------------------
+Epoch 00103: reducing learning rate of group 0 to 1.0000e-08.
+Saved best model at epoch 104
+Epoch[110/500]:
+   Training loss: 1.3124875471580616e-06
+   Validation loss: 6.216660300070231e-06
+-------------------------------------------
+Saved best model at epoch 114
+Saved best model at epoch 116
+Epoch[120/500]:
+   Training loss: 1.3100540886607512e-06
+   Validation loss: 6.215319378581918e-06
+-------------------------------------------
+Saved best model at epoch 122
+Saved best model at epoch 127
+Epoch[130/500]:
+   Training loss: 1.3081989530715537e-06
+   Validation loss: 6.213808371677237e-06
+-------------------------------------------
+Saved best model at epoch 135
+Saved best model at epoch 138
+Epoch[140/500]:
+   Training loss: 1.306183789149586e-06
+   Validation loss: 6.213237135927134e-06
+-------------------------------------------
+Saved best model at epoch 143
+Saved best model at epoch 144
+Epoch[150/500]:
+   Training loss: 1.3043894720132094e-06
+   Validation loss: 6.21092617688571e-06
+-------------------------------------------
+Saved best model at epoch 151
+Saved best model at epoch 152
+Saved best model at epoch 159
+Epoch[160/500]:
+   Training loss: 1.3023760058408425e-06
+   Validation loss: 6.211286370383594e-06
+-------------------------------------------
+Saved best model at epoch 162
+Saved best model at epoch 163
+Saved best model at epoch 169
+Epoch[170/500]:
+   Training loss: 1.3006324228045428e-06
+   Validation loss: 6.2069493762839155e-06
+-------------------------------------------
+Saved best model at epoch 175
+Saved best model at epoch 178
+Saved best model at epoch 179
+Epoch[180/500]:
+   Training loss: 1.2989472866717774e-06
+   Validation loss: 6.204989705647433e-06
+-------------------------------------------
+Validation loss has not improved in 10 epochs. Stopping training at epoch 189.
+-------------------------------------------
+-------------------------------------------
+Dataset:  IMS
+Target Embeddings:  ChemNet
+-------------------------------------------
+-------------------------------------------
+Encoder(
+  (encoder): Sequential(
+    (0): Linear(in_features=1676, out_features=1548, bias=True)
+    (1): LeakyReLU(negative_slope=0.01, inplace=True)
+    (2): Linear(in_features=1548, out_features=1420, bias=True)
+    (3): LeakyReLU(negative_slope=0.01, inplace=True)
+    (4): Linear(in_features=1420, out_features=1292, bias=True)
+    (5): LeakyReLU(negative_slope=0.01, inplace=True)
+    (6): Linear(in_features=1292, out_features=1164, bias=True)
+    (7): LeakyReLU(negative_slope=0.01, inplace=True)
+    (8): Linear(in_features=1164, out_features=1036, bias=True)
+    (9): LeakyReLU(negative_slope=0.01, inplace=True)
+    (10): Linear(in_features=1036, out_features=908, bias=True)
+    (11): LeakyReLU(negative_slope=0.01, inplace=True)
+    (12): Linear(in_features=908, out_features=780, bias=True)
+    (13): LeakyReLU(negative_slope=0.01, inplace=True)
+    (14): Linear(in_features=780, out_features=652, bias=True)
+    (15): LeakyReLU(negative_slope=0.01, inplace=True)
+    (16): Linear(in_features=652, out_features=512, bias=True)
+  )
+)
+-------------------------------------------
+-------------------------------------------
\ No newline at end of file
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json b/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
index e7e0fc30..72251430 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+++ b/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
@@ -1 +1 @@
-{"Encoder Training Loss": "2.79e-04", "Encoder Validation Loss": "4.53e-04", "_timestamp": 1734285595.8409977, "_runtime": 15.32132363319397, "_step": 1}
\ No newline at end of file
+{"Encoder Training Loss": "1.30e-06", "Encoder Validation Loss": "6.20e-06", "_timestamp": 1734286923.4541435, "_runtime": 1342.934469461441, "_step": 192, "Early Stopping Ecoch": 189, "Learning Rate at Final Epoch": 1.0000000000000004e-08, "PCA of Predicted Chemical Embeddings": {"_type": "image-file", "sha256": "5b0f98947828b919538e3f5a7593fe83e437daf535cde2b46dd8db90f1c7d07c", "size": 159523, "path": "media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png", "format": "png", "width": 2400, "height": 1800}, "_wandb": {"runtime": 1343}}
\ No newline at end of file
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
index 028a4811..73e42de6 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug-internal.log
@@ -62,3 +62,1654 @@
 2024-12-15 12:59:57,093 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
 2024-12-15 12:59:57,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
 2024-12-15 12:59:57,218 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:02,219 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:02,791 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:02,792 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:02,792 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:02,793 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:02,875 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:04,876 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:07,794 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:09,590 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:09,590 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:09,590 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:09,591 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:09,877 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:12,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:12,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:13,245 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:13,878 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:00:16,566 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:16,566 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:16,566 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:16,567 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:16,879 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:18,568 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:18,879 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:23,517 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:23,518 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:23,518 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:23,519 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:23,880 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:24,519 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:24,881 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:27,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:27,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:30,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:30,304 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:30,305 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:30,305 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:30,306 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:30,882 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:35,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:37,129 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:37,130 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:37,130 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:37,131 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:37,884 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:40,946 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2024-12-15 13:00:40,947 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:00:40,947 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:42,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:42,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:43,923 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:43,924 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:43,924 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:43,924 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:44,885 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:46,925 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:50,936 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:50,937 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:50,937 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:50,939 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:51,886 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:00:51,939 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:52,886 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:00:56,940 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:00:57,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:00:57,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:00:57,734 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:00:57,735 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:00:57,735 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:00:57,735 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:00:57,887 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:02,736 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:04,506 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:04,507 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:04,508 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:04,510 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:04,890 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:08,510 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:10,948 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:01:11,322 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:11,323 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:11,323 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:11,323 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:11,891 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:12,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:12,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:14,190 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:18,111 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:18,112 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:18,112 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:18,114 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:18,894 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:20,115 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:24,898 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:24,899 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:24,899 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:24,899 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:25,896 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:25,900 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:27,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:27,094 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:31,247 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:31,842 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:31,843 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:31,843 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:31,844 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:31,897 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:34,898 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:01:36,845 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:38,642 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:38,642 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:38,642 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:38,643 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:38,899 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:40,948 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:01:41,949 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:42,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:42,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:45,441 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:45,441 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:45,441 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:45,442 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:45,901 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:47,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:52,216 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:52,217 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:52,217 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:52,217 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:52,902 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:01:53,218 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:57,094 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:01:57,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:01:58,251 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:01:58,998 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:01:58,999 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:01:58,999 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:01:59,000 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:01:59,904 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:00,904 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:04,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:05,775 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:05,776 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:05,776 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:05,776 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:05,905 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:09,777 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:10,949 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:02:12,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:12,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:12,569 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:12,570 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:12,570 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:12,570 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:12,906 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:14,907 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:15,571 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:19,560 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:19,561 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:19,561 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:19,561 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:19,908 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:20,908 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:21,561 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:26,343 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:26,343 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:26,343 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:26,344 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:26,910 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:27,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:27,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:27,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:32,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:33,310 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:33,311 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:33,311 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:33,311 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:33,911 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:34,911 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:37,312 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:40,253 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:40,254 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:40,254 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:40,255 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:40,913 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:40,949 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:02:42,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:42,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:02:42,913 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:43,252 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:47,047 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:47,048 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:47,048 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:47,048 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:47,914 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:49,049 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:53,999 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:02:53,999 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:02:53,999 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:02:54,001 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:02:54,915 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:02:55,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:02:56,916 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:02:57,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:02:57,095 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:00,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:00,794 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:00,794 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:00,794 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:00,795 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:00,916 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:05,795 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:07,730 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:07,731 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:07,731 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:07,733 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:07,918 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:08,918 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:10,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:03:10,951 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:12,095 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:12,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:14,663 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:14,664 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:14,664 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:14,664 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:14,919 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:16,665 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:16,920 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:21,410 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:21,411 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:21,411 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:21,412 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:21,921 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:22,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:27,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:27,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:28,203 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:28,389 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:28,389 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:28,390 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:28,390 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:28,922 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:30,923 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:33,391 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:35,146 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:35,147 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:35,147 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:35,148 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:35,924 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:39,149 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:40,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:03:42,074 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:42,074 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:42,075 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:42,075 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:42,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:42,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:03:42,925 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:44,240 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:44,926 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:49,089 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:49,090 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:49,090 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:49,091 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:49,927 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:50,091 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:50,927 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:03:55,092 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:03:55,827 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:03:55,827 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:03:55,827 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:03:55,828 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:03:55,928 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:03:57,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:03:57,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:00,170 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:02,845 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:02,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:02,846 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:02,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:02,929 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:04,930 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:05,847 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:09,776 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:09,777 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:09,777 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:09,777 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:09,931 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:10,931 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:10,951 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:04:10,952 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:12,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:12,096 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:16,173 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:16,678 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:16,678 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:16,678 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:16,680 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:16,932 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:18,932 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:21,722 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:23,502 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:23,503 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:23,503 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:23,503 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:23,933 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:27,096 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:27,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:27,260 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:30,297 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:30,297 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:30,297 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:30,298 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:30,935 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:32,299 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:37,087 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:37,088 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:37,088 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:37,088 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:37,936 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:38,089 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:40,952 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:04:42,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:42,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:43,248 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:44,165 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:44,165 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:44,165 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:44,166 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:44,938 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:46,938 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:04:49,166 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:50,975 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:50,975 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:50,976 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:50,976 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:51,940 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:04:54,976 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:04:57,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:04:57,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:04:57,752 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:04:57,753 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:04:57,753 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:04:57,753 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:04:57,941 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:00,754 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:04,527 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:04,527 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:04,527 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:04,528 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:04,943 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:06,529 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:10,953 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:05:11,304 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:11,305 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:11,305 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:11,305 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:11,944 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:12,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:12,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:12,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:17,225 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:18,083 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:18,083 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:18,084 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:18,084 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:18,946 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:23,084 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:25,022 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:25,023 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:25,023 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:25,024 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:25,947 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:26,947 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:27,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:27,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:28,226 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:32,017 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:32,017 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:32,018 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:32,018 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:32,949 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:32,949 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:34,018 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:38,922 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:38,922 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:38,922 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:38,924 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:38,950 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:39,924 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:40,950 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:05:40,953 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:05:42,097 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:42,097 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:45,215 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:45,729 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:45,730 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:45,730 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:45,730 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:45,951 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:50,731 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:52,497 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:52,498 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:52,498 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:52,498 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:52,953 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:05:56,499 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:05:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:05:57,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:05:59,283 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:05:59,283 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:05:59,284 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:05:59,284 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:05:59,954 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:02,284 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:06,239 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:06,240 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:06,241 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:06,241 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:06,956 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:08,242 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:08,956 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:10,954 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:06:12,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:12,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:13,181 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:13,181 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:13,181 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:13,182 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:13,958 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:14,182 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:14,958 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:19,183 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:19,983 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:19,983 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:19,984 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:19,984 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:20,959 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:24,985 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:26,800 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:26,800 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:26,800 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:26,801 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:26,961 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:27,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:27,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:30,241 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:33,575 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:33,576 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:33,576 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:33,576 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:33,963 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:34,963 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:35,618 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:40,353 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:40,354 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:40,355 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:40,355 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:40,955 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:06:40,957 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:40,964 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:42,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:42,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:06:46,168 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:47,369 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:47,369 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:47,370 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:47,370 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:47,966 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:48,966 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:06:51,370 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:54,116 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:06:54,116 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:06:54,116 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:06:54,117 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:06:54,968 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:06:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:06:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:06:57,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:00,928 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:00,929 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:00,929 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:00,929 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:00,969 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:02,930 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:07,723 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:07,723 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:07,724 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:07,724 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:07,971 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:08,724 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:10,955 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:07:12,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:12,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:14,215 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:14,729 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:14,729 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:14,729 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:14,730 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:14,972 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:16,973 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:19,731 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:21,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:21,487 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:21,487 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:21,487 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:21,974 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:25,488 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:27,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:27,098 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:28,269 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:28,269 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:28,269 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:28,270 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:28,975 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:31,270 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:35,026 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:35,027 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:35,027 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:35,027 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:35,978 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:37,028 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:40,956 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:07:41,793 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:41,794 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:41,794 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:41,794 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:41,979 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:42,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:42,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:42,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:42,979 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:47,167 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:48,594 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:48,594 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:48,595 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:48,595 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:48,980 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:52,595 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:07:55,421 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:07:55,422 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:07:55,422 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:07:55,422 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:07:55,982 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:07:56,982 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:07:57,098 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:07:57,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:07:58,184 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:02,417 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:02,418 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:02,418 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:02,418 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:02,983 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:03,419 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:04,984 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:08,419 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:09,282 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:09,282 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:09,283 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:09,283 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:09,985 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:10,957 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:08:10,985 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:12,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:12,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:14,195 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:16,201 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:16,201 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:16,201 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:16,201 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:16,987 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:16,987 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:19,202 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:23,170 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:23,170 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:23,170 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:23,170 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:23,988 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:24,989 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:25,171 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:27,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:27,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:30,119 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:30,119 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:30,119 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:30,120 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:30,990 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:30,990 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:31,120 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:36,121 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:36,916 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:36,917 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:36,917 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:36,917 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:36,991 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:40,957 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:08:41,957 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:42,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:42,099 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:43,717 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:43,718 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:43,718 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:43,718 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:43,993 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:47,719 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:50,513 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:50,514 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:50,514 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:50,514 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:50,994 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:52,995 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:08:53,515 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:57,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:08:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:08:57,517 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:08:57,518 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:08:57,518 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:08:57,518 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:08:57,996 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:08:58,518 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:08:58,997 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:03,519 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:04,258 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:04,258 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:04,259 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:04,259 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:04,998 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:09,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:10,958 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:09:11,058 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:11,058 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:11,058 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:11,059 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:12,000 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:12,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:15,240 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:17,838 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:17,838 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:17,838 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:17,839 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:18,001 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:20,839 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:24,644 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:24,645 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:24,645 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:24,645 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:25,003 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:26,645 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:27,099 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:27,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:31,619 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:31,620 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:31,620 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:31,620 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:32,005 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:32,621 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:33,005 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:37,622 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:38,424 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:38,431 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:38,431 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:38,431 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:39,006 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:40,958 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:09:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:42,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:43,216 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:45,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:45,379 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:45,379 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:45,379 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:46,008 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:47,008 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:09:48,380 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:52,152 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:52,153 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:52,153 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:52,153 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:53,009 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:54,154 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:09:57,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:09:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:09:58,966 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:09:58,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:09:58,967 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:09:58,967 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:09:59,011 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:09:59,967 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:01,011 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:04,969 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:05,715 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:05,715 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:05,715 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:05,716 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:06,012 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:10,716 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:10,959 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:10:12,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:12,591 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:12,592 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:12,592 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:12,592 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:13,014 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:16,593 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:19,377 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:19,377 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:19,377 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:19,378 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:20,015 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:22,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:26,326 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:26,326 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:26,327 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:26,327 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:27,017 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:27,018 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:27,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:27,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:28,232 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:33,142 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:33,143 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:33,143 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:33,143 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:34,019 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:34,144 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:39,144 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:39,953 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:39,954 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:39,954 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:39,954 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:40,020 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:40,959 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:10:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:42,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:10:44,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:46,981 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:46,981 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:46,981 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:46,982 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:47,022 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:49,022 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:10:49,982 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:53,742 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:10:53,742 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:10:53,742 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:10:53,743 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:10:54,023 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:10:55,743 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:10:57,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:10:57,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:00,563 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:00,563 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:00,563 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:00,563 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:01,025 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:01,564 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:06,564 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:07,372 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:07,373 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:07,373 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:07,373 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:08,027 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:09,027 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:10,960 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:11:11,960 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:12,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:12,100 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:14,184 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:14,184 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:14,184 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:14,185 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:15,029 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:17,185 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:20,967 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:20,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:20,967 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:20,967 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:21,030 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:22,968 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:27,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:27,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:27,825 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:27,826 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:27,826 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:27,826 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:28,032 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:28,826 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:29,032 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:33,827 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:34,762 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:34,763 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:34,763 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:34,763 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:35,034 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:37,035 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:11:39,764 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:40,960 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:11:41,566 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:41,566 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:41,567 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:41,567 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:42,036 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:42,100 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:42,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:11:45,229 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:48,399 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:48,399 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:48,399 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:48,400 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:49,037 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:50,400 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:55,249 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:11:55,249 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:11:55,249 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:11:55,250 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:11:56,039 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:11:56,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:11:57,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:11:57,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:02,072 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:02,072 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:02,072 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:02,073 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:02,073 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:03,041 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:07,074 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:08,804 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:08,805 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:08,805 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:08,805 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:09,042 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:10,961 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:12:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:15,656 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:15,656 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:15,656 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:15,656 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:16,044 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:17,044 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:12:17,698 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:22,446 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:22,446 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:22,446 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:22,447 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:23,046 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:23,447 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:27,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:27,101 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:29,206 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:29,210 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:29,211 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:29,211 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:29,211 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:30,047 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:34,212 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:36,011 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:36,012 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:36,012 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:36,012 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:36,049 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:40,013 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:40,961 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:12:42,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:43,017 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:43,017 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:43,017 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:43,018 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:43,050 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:45,018 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:45,051 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:12:49,789 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:49,789 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:49,789 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:49,790 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:50,052 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:50,790 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:55,790 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:12:56,846 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:12:56,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:12:56,846 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:12:56,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:12:57,054 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:12:57,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:12:57,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:12:59,055 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:01,260 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:03,625 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:03,626 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:03,626 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:03,626 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:04,056 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:06,627 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:10,462 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:10,463 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:10,463 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:10,463 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:10,962 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:13:11,058 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:11,963 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:12,101 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:17,255 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:17,258 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:17,258 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:17,258 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:17,258 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:18,059 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:22,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:24,048 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:24,048 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:24,049 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:24,049 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:24,060 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:25,060 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:27,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:27,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:27,259 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:30,846 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:30,846 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:30,847 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:30,847 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:31,062 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:32,847 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:37,798 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:37,799 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:37,799 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:37,799 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:38,063 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:38,800 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:39,063 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:13:40,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:13:42,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:44,180 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:44,599 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:44,599 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:44,599 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:44,599 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:45,065 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:49,600 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:51,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:51,412 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:51,412 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:51,413 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:52,066 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:13:55,413 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:13:57,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:13:57,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:13:58,212 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:13:58,212 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:13:58,212 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:13:58,212 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:13:59,068 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:01,213 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:05,004 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:05,005 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:05,005 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:05,005 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:05,069 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:07,006 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:10,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:14:11,915 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:11,916 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:11,916 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:11,917 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:12,071 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:14,071 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:14:17,262 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:18,711 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:18,712 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:18,712 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:18,712 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:19,072 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:22,713 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:25,529 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:25,530 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:25,530 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:25,530 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:26,074 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:27,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:27,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:28,198 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:32,444 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:32,445 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:32,445 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:32,445 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:33,075 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:33,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:34,075 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:14:38,486 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:39,250 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:39,251 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:39,251 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:39,252 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:40,077 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:40,964 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:14:42,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:42,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:44,175 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:46,066 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:46,067 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:46,067 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:46,067 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:46,078 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:50,068 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:52,880 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:52,881 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:52,881 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:52,881 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:14:53,079 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:14:55,882 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:14:57,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:14:57,103 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:14:59,676 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:14:59,677 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:14:59,677 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:14:59,677 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:00,081 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:01,678 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:06,636 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:06,636 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:06,636 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:06,637 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:07,082 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:07,637 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:08,083 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:10,964 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:15:12,102 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:12,102 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:13,237 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:13,415 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:13,416 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:13,416 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:13,416 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:14,084 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:18,417 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:20,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:20,192 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:20,192 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:20,193 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:21,085 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:24,193 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:27,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:27,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:27,306 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:27,306 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:27,306 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:28,087 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:29,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:30,087 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:33,945 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:33,946 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:33,946 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:33,946 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:34,088 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:34,946 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:39,947 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:40,835 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:40,836 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:40,836 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:40,837 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:40,965 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:15:41,090 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:42,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:42,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:15:44,090 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:15:45,315 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:47,614 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:47,615 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:47,615 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:47,615 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:48,091 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:50,616 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:54,408 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:15:54,408 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:15:54,408 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:15:54,409 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:15:55,093 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:15:56,409 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:15:57,157 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:15:57,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:01,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:01,443 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:01,443 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:01,444 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:01,444 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:02,094 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:04,094 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:06,444 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:08,456 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:08,456 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:08,457 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:08,457 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:09,095 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:10,096 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:10,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:16:11,966 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:12,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:12,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:15,285 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:15,286 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:15,286 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:15,286 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:16,097 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:17,287 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:22,117 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:22,118 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:22,118 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:22,118 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:23,098 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:23,118 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:27,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:28,246 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:28,929 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:28,930 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:28,930 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:28,931 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:29,100 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:33,931 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:35,750 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:35,750 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:35,751 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:35,751 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:36,101 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:39,752 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:40,966 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:16:42,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:42,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:42,576 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:42,577 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:42,577 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:42,577 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:43,102 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:45,578 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:49,359 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:49,360 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:49,360 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:49,361 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:50,104 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:51,361 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:52,104 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:16:56,337 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:16:56,338 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:16:56,338 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:16:56,339 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:16:57,106 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:16:57,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:16:57,158 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:16:57,284 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:16:58,106 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:02,285 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:03,411 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:03,411 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:03,411 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:03,412 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:04,107 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:06,108 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:07,412 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:10,208 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:10,209 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:10,209 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:10,209 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:10,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:17:11,109 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:12,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:12,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:13,297 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:17,000 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:17,000 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:17,000 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:17,000 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:17,110 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:19,001 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:23,802 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:23,803 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:23,803 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:23,803 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:24,111 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:24,803 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:27,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:30,262 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:30,597 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:30,598 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:30,598 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:30,598 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:31,113 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:35,599 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:37,369 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:37,370 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:37,370 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:37,370 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:38,114 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:40,967 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:17:40,969 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:42,158 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:42,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:44,181 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:44,181 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:44,181 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:44,182 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:45,117 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:46,182 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:51,146 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:51,147 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:51,147 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:51,147 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:52,118 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:17:52,148 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:54,118 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:17:57,148 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:17:57,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:17:57,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:17:57,915 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:17:57,916 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:17:57,916 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:17:57,916 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:17:58,119 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:00,119 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:02,917 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:04,735 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:04,736 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:04,736 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:04,736 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:05,120 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:08,737 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:10,968 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:18:11,719 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:11,719 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:11,719 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:11,720 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:12,122 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:12,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:12,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:14,122 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:14,224 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:18,690 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:18,691 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:18,691 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:18,691 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:19,123 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:19,692 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:20,123 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:18:24,693 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:25,494 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:25,494 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:25,494 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:25,495 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:26,125 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:27,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:30,271 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:32,279 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:32,280 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:32,280 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:32,280 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:33,126 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:35,281 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:39,052 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:39,052 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:39,052 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:39,053 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:39,128 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:40,968 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:18:40,970 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:42,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:42,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:45,835 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:45,835 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:45,836 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:45,836 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:46,129 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:46,836 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:51,836 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:52,619 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:52,619 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:52,619 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:52,620 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:18:53,130 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:18:57,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:18:57,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:18:57,274 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:18:59,570 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:18:59,571 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:18:59,571 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:18:59,571 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:00,132 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:02,133 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:02,572 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:06,344 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:06,344 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:06,345 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:06,345 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:07,134 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:08,134 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:08,345 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:10,969 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:19:12,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:12,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:13,120 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:13,121 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:13,121 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:13,121 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:13,135 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:14,122 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:19,122 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:19,900 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:19,900 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:19,901 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:19,901 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:20,137 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:24,901 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:26,665 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:26,665 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:26,666 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:26,666 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:27,138 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:27,159 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:27,159 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:30,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:33,591 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:33,592 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:33,592 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:33,592 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:34,140 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:35,592 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:40,583 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:40,583 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:40,583 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:40,584 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:40,970 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:19:40,972 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:41,142 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:42,142 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:19:42,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:42,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:46,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:47,396 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:47,396 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:47,396 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:47,396 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:48,143 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:51,397 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:19:54,171 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:19:54,172 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:19:54,172 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:19:54,172 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:19:55,145 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:19:57,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:19:57,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:19:57,252 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:01,125 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:01,125 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:01,126 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:01,126 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:01,146 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:02,147 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:03,126 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:07,962 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:07,963 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:07,963 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:07,963 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:08,148 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:08,964 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:10,149 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:10,970 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:20:12,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:12,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:14,325 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:14,688 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:14,689 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:14,689 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:14,690 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:15,150 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:16,150 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:20:19,734 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:21,452 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:21,452 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:21,452 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:21,453 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:22,151 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:25,453 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:27,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:27,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:28,172 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:28,173 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:28,173 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:28,174 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:29,153 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:31,174 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:35,062 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:35,062 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:35,062 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:35,063 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:35,155 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:37,063 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:40,971 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:20:41,848 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:41,849 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:41,849 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:41,849 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:42,156 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:42,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:42,160 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:42,245 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:47,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:48,637 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:48,637 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:48,637 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:48,639 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:49,158 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:52,639 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:20:55,429 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:20:55,429 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:20:55,430 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:20:55,430 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:20:56,159 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:20:57,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:20:57,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:20:58,307 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:02,222 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:02,223 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:02,223 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:02,223 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:03,161 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:04,224 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:09,011 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:09,011 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:09,011 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:09,012 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:09,162 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:10,012 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:10,971 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:21:12,160 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:12,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:15,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:15,756 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,756 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,756 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,757 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:15,797 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,797 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,798 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:15,798 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:15,798 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:16,164 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:18,164 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:21:20,799 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:25,799 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:27,161 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:27,161 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:31,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:36,308 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:40,972 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:21:41,973 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:42,168 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:42,169 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:47,330 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:50,678 DEBUG   SenderThread:272628 [sender.py:send():378] send: files
+2024-12-15 13:21:50,679 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png with policy now
+2024-12-15 13:21:50,721 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:21:50,721 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:21:50,722 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:21:50,722 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:21:50,967 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/jydm7jsu-media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media
+2024-12-15 13:21:51,174 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images
+2024-12-15 13:21:51,456 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/nq6t8k9q-media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:21:52,722 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:21:57,214 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: stop_status
+2024-12-15 13:21:57,215 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: stop_status
+2024-12-15 13:21:58,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:03,378 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:03,454 DEBUG   SenderThread:272628 [sender.py:send():378] send: files
+2024-12-15 13:22:03,454 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png with policy now
+2024-12-15 13:22:03,497 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: partial_history
+2024-12-15 13:22:03,497 DEBUG   SenderThread:272628 [sender.py:send():378] send: history
+2024-12-15 13:22:03,497 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: summary_record
+2024-12-15 13:22:03,498 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:03,680 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/qke0jba1-media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:04,104 DEBUG   SenderThread:272628 [sender.py:send():378] send: telemetry
+2024-12-15 13:22:04,177 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:04,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_created():271] file/dir created: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:04,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images
+2024-12-15 13:22:04,235 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: log_artifact
+2024-12-15 13:22:04,236 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: log_artifact
+2024-12-15 13:22:04,455 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /tmp/tmplik1iourwandb/tlljv2ee-media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:05,237 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:06,178 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:09,160 INFO    wandb-upload_0:272628 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpaoijr38g
+2024-12-15 13:22:09,683 INFO    SenderThread:272628 [sender.py:send_request_log_artifact():1455] logged artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzY0OTgwNQ==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjUwMzMyOTE5OQ==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU1ODI1OA==', 'versionIndex': 6}}}
+2024-12-15 13:22:09,684 DEBUG   SenderThread:272628 [sender.py:send():378] send: exit
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:send_exit():585] handling exit code: 0
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:send_exit():587] handling runtime: 1343
+2024-12-15 13:22:09,684 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:09,684 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:09,685 INFO    SenderThread:272628 [sender.py:send_exit():593] send defer
+2024-12-15 13:22:09,685 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:09,685 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,685 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 0
+2024-12-15 13:22:09,686 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 0
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 1
+2024-12-15 13:22:09,686 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 1
+2024-12-15 13:22:09,686 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 1
+2024-12-15 13:22:09,686 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 2
+2024-12-15 13:22:09,686 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 2
+2024-12-15 13:22:09,686 INFO    HandlerThread:272628 [system_monitor.py:finish():203] Stopping system monitor
+2024-12-15 13:22:09,686 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2024-12-15 13:22:09,687 DEBUG   SystemMonitor:272628 [system_monitor.py:_start():183] Publishing last batch of metrics
+2024-12-15 13:22:09,688 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined cpu monitor
+2024-12-15 13:22:09,688 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined disk monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined gpu monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined memory monitor
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [interfaces.py:finish():200] Joined network monitor
+2024-12-15 13:22:09,781 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,781 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 2
+2024-12-15 13:22:09,781 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 3
+2024-12-15 13:22:09,781 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,781 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 3
+2024-12-15 13:22:09,782 DEBUG   SenderThread:272628 [sender.py:send():378] send: stats
+2024-12-15 13:22:09,782 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,782 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 3
+2024-12-15 13:22:09,782 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 4
+2024-12-15 13:22:09,782 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,782 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 4
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 4
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 5
+2024-12-15 13:22:09,783 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,783 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 5
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send():378] send: summary
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:_save_file():1389] saving file wandb-summary.json with policy end
+2024-12-15 13:22:09,783 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 5
+2024-12-15 13:22:09,783 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 6
+2024-12-15 13:22:09,784 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,784 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 6
+2024-12-15 13:22:09,784 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,784 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 6
+2024-12-15 13:22:09,787 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: status_report
+2024-12-15 13:22:09,861 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 7
+2024-12-15 13:22:09,861 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:09,861 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 7
+2024-12-15 13:22:09,862 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:09,862 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 7
+2024-12-15 13:22:10,180 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:22:10,180 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:10,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: keepalive
+2024-12-15 13:22:10,238 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:11,583 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 8
+2024-12-15 13:22:11,583 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:11,584 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:11,584 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 8
+2024-12-15 13:22:11,584 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:11,584 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 8
+2024-12-15 13:22:11,584 INFO    SenderThread:272628 [job_builder.py:build():432] Attempting to build job artifact
+2024-12-15 13:22:11,585 INFO    SenderThread:272628 [job_builder.py:_get_source_type():565] is repo sourced job
+2024-12-15 13:22:11,585 INFO    SenderThread:272628 [job_builder.py:_get_program_relpath():583] run is notebook based run
+2024-12-15 13:22:11,586 INFO    SenderThread:272628 [job_builder.py:build():541] adding wandb-job metadata file
+2024-12-15 13:22:11,589 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 9
+2024-12-15 13:22:11,590 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:11,590 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 9
+2024-12-15 13:22:11,590 DEBUG   SenderThread:272628 [sender.py:send():378] send: artifact
+2024-12-15 13:22:12,032 INFO    wandb-upload_0:272628 [upload_job.py:push():85] Skipped uploading /tmp/tmpvedrit2e/wandb-job.json
+2024-12-15 13:22:12,035 INFO    wandb-upload_1:272628 [upload_job.py:push():85] Skipped uploading /home/cmdunham/.local/share/wandb/artifacts/staging/tmpfeoa8t65
+2024-12-15 13:22:12,181 INFO    Thread-40 :272628 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:12,242 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:12,281 INFO    wandb-upload_2:272628 [upload_job.py:push():88] Uploaded file /home/cmdunham/.local/share/wandb/artifacts/staging/tmpe6to8c_p
+2024-12-15 13:22:12,910 INFO    SenderThread:272628 [sender.py:send_artifact():1467] sent artifact job-https___github.com_CateMerfeld_ChemicalDataGeneration.git__home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb - {'id': 'QXJ0aWZhY3Q6MTM3MzY0OTkxMw==', 'state': 'PENDING', 'artifactSequence': {'id': 'QXJ0aWZhY3RDb2xsZWN0aW9uOjQ4MDgzNzAwNA==', 'latestArtifact': {'id': 'QXJ0aWZhY3Q6MTM3MzU1ODI4Mw==', 'versionIndex': 60}}}
+2024-12-15 13:22:12,911 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:12,911 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 9
+2024-12-15 13:22:12,911 INFO    SenderThread:272628 [dir_watcher.py:finish():358] shutting down directory watcher
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():388] scan: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log output.log
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-metadata.json wandb-metadata.json
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json wandb-summary.json
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml config.yaml
+2024-12-15 13:22:13,182 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/requirements.txt requirements.txt
+2024-12-15 13:22:13,184 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/diff.patch diff.patch
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png media/images/PCA of Predicted Chemical Embeddings_192_5b0f98947828b919538e.png
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [dir_watcher.py:finish():402] scan save: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png media/images/PCA of Predicted Chemical Embeddings_191_bf0adac2724016e651d2.png
+2024-12-15 13:22:13,189 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 10
+2024-12-15 13:22:13,190 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,192 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,194 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 10
+2024-12-15 13:22:13,195 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,195 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 10
+2024-12-15 13:22:13,195 INFO    SenderThread:272628 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:22:13,243 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:13,243 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,399 INFO    wandb-upload_0:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/output.log
+2024-12-15 13:22:13,457 INFO    wandb-upload_3:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/requirements.txt
+2024-12-15 13:22:13,462 INFO    wandb-upload_1:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/wandb-summary.json
+2024-12-15 13:22:13,475 INFO    wandb-upload_2:272628 [upload_job.py:push():130] Uploaded file /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/files/config.yaml
+2024-12-15 13:22:13,675 INFO    Thread-39 :272628 [sender.py:transition_state():613] send defer: 11
+2024-12-15 13:22:13,676 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,676 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 11
+2024-12-15 13:22:13,676 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,676 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 11
+2024-12-15 13:22:13,676 INFO    SenderThread:272628 [file_pusher.py:join():175] waiting for file pusher
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 12
+2024-12-15 13:22:13,677 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,677 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 12
+2024-12-15 13:22:13,677 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 12
+2024-12-15 13:22:13,677 INFO    SenderThread:272628 [file_stream.py:finish():601] file stream finish called
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [file_stream.py:finish():605] file stream finish is done
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 13
+2024-12-15 13:22:13,769 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,769 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 13
+2024-12-15 13:22:13,769 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,769 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 13
+2024-12-15 13:22:13,770 INFO    SenderThread:272628 [sender.py:transition_state():613] send defer: 14
+2024-12-15 13:22:13,770 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: defer
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send():378] send: final
+2024-12-15 13:22:13,770 INFO    HandlerThread:272628 [handler.py:handle_request_defer():184] handle defer: 14
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send():378] send: footer
+2024-12-15 13:22:13,770 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: defer
+2024-12-15 13:22:13,770 INFO    SenderThread:272628 [sender.py:send_request_defer():609] handle sender defer: 14
+2024-12-15 13:22:13,771 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: poll_exit
+2024-12-15 13:22:13,771 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: poll_exit
+2024-12-15 13:22:13,773 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: internal_messages
+2024-12-15 13:22:13,774 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: server_info
+2024-12-15 13:22:13,774 DEBUG   SenderThread:272628 [sender.py:send_request():405] send_request: server_info
+2024-12-15 13:22:13,817 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: get_summary
+2024-12-15 13:22:13,817 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: sampled_history
+2024-12-15 13:22:13,861 DEBUG   HandlerThread:272628 [handler.py:handle_request():158] handle_request: shutdown
+2024-12-15 13:22:13,862 INFO    HandlerThread:272628 [handler.py:finish():882] shutting down handler
+2024-12-15 13:22:14,774 INFO    WriterThread:272628 [datastore.py:close():296] close: /home/cmdunham/ChemicalDataGeneration/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [sender.py:finish():1545] shutting down sender
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [file_pusher.py:finish():169] shutting down file pusher
+2024-12-15 13:22:14,823 INFO    SenderThread:272628 [file_pusher.py:join():175] waiting for file pusher
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
index 7af73bdc..85363cb4 100644
--- a/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
+++ b/models/wandb/run-20241215_125940-dcv1gljq/logs/debug.log
@@ -28,3 +28,14 @@ config: {'wandb_entity': 'catemerfeld', 'wandb_project': 'ims_encoder_decoder',
 2024-12-15 12:59:42,093 INFO    MainThread:272364 [wandb_run.py:_redirect():2294] Wrapping output streams.
 2024-12-15 12:59:42,093 INFO    MainThread:272364 [wandb_run.py:_redirect():2319] Redirects installed.
 2024-12-15 12:59:42,094 INFO    MainThread:272364 [wandb_init.py:init():838] run started, returning control to user process
+2024-12-15 13:22:04,104 INFO    MainThread:272364 [wandb_run.py:_finish():2103] finishing run catemerfeld/ims_encoder_decoder/dcv1gljq
+2024-12-15 13:22:04,104 ERROR   MainThread:272364 [jupyter.py:save_history():437] Run pip install nbformat to save notebook history
+2024-12-15 13:22:04,104 INFO    MainThread:272364 [jupyter.py:_save_ipynb():384] looking for notebook: /home/cmdunham/ChemicalDataGeneration/models/ims_encoder.ipynb
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_init.py:_jupyter_teardown():447] saved code and history: <Artifact source-ims_encoder_decoder-_home_cmdunham_ChemicalDataGeneration_models_ims_encoder.ipynb>
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_init.py:_jupyter_teardown():448] cleaning up jupyter logic
+2024-12-15 13:22:04,236 INFO    MainThread:272364 [wandb_run.py:_atexit_cleanup():2343] got exitcode: 0
+2024-12-15 13:22:04,237 INFO    MainThread:272364 [wandb_run.py:_restore():2326] restore
+2024-12-15 13:22:04,237 INFO    MainThread:272364 [wandb_run.py:_restore():2332] restore done
+2024-12-15 13:22:14,863 INFO    MainThread:272364 [wandb_run.py:_footer_history_summary_info():3994] rendering history
+2024-12-15 13:22:14,864 INFO    MainThread:272364 [wandb_run.py:_footer_history_summary_info():4026] rendering summary
+2024-12-15 13:22:14,871 INFO    MainThread:272364 [wandb_run.py:_footer_sync_info():3953] logging synced files
diff --git a/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb b/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb
index e69de29b..9d615722 100644
Binary files a/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb and b/models/wandb/run-20241215_125940-dcv1gljq/run-dcv1gljq.wandb differ
