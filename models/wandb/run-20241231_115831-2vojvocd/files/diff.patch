diff --git a/data_preprocessing/ims_data_preprocessing.ipynb b/data_preprocessing/ims_data_preprocessing.ipynb
index 357f1637..ca232a83 100644
--- a/data_preprocessing/ims_data_preprocessing.ipynb
+++ b/data_preprocessing/ims_data_preprocessing.ipynb
@@ -775,7 +775,7 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "# Generating Carls:\n",
+    "# Generating CARLs:\n",
     "---"
    ]
   },
@@ -788,13 +788,13 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Selected GPU ID: 0\n",
+      "Selected GPU ID: 1\n",
       "  Name: NVIDIA GeForce RTX 4090\n",
-      "  Memory Free: 15368.0 MB\n",
-      "  Memory Used: 8849.0 MB\n",
+      "  Memory Free: 24203.0 MB\n",
+      "  Memory Used: 14.0 MB\n",
       "  GPU Load: 0.00%\n",
-      "Current device ID:  cuda:0\n",
-      "PyTorch current device ID: 0\n",
+      "Current device ID:  cuda:1\n",
+      "PyTorch current device ID: 1\n",
       "PyTorch current device name: NVIDIA GeForce RTX 4090\n"
      ]
     }
@@ -831,7 +831,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 45,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -915,6 +915,14 @@
     "    return differences_df"
    ]
   },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "## Generating CARLs Using Different BKG for Train, Val, Test:\n",
+    "---"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": 82,
@@ -977,44 +985,124 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "## Generating CARLS Using Average BKG:\n",
+    "## Generating CARLs Using Average BKG:\n",
+    "---\n",
+    "Still using different BKG for train, val, test, just using average of several BKG instead individual BKG spectra."
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### Train test split BKG spectra:\n",
     "---"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 40,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
-    "def generate_average_bkg_spectrum(bkg_df, n, random_state=42):\n",
-    "    bkg_sample = bkg_df.sample(n=n, random_state=random_state).iloc[:,1:-1]\n",
-    "    reduced_background = bkg_df.drop(bkg_sample.index)\n",
-    "    bkg_sample.reset_index(inplace=True)\n",
-    "    bkg_sample.drop(columns=['index'], inplace=True)\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/bkg.csv'\n",
+    "background = pd.read_csv(file_path)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 4,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "(137197, 1678) (45733, 1678) (45733, 1678)\n"
+     ]
+    }
+   ],
+   "source": [
+    "# Train test splitting BKG spectra\n",
+    "train_val_bkg, test_bkg = train_test_split(background, test_size=.2, random_state = 22)\n",
+    "# divide train into train and validation data\n",
+    "train_bkg, val_bkg = train_test_split(train_val_bkg, test_size=.25, random_state=22)\n",
+    "print(train_bkg.shape, val_bkg.shape, test_bkg.shape)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 13,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_bkg.csv'\n",
+    "train_bkg.to_csv(file_path)\n",
     "\n",
-    "    avg_spectrum = bkg_sample.mean()\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_bkg.csv'\n",
+    "val_bkg.to_csv(file_path)\n",
     "\n",
-    "    return avg_spectrum, reduced_background"
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/test_bkg.csv'\n",
+    "test_bkg.to_csv(file_path)"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
+    "### Load BKG spectra and create CARLs:\n",
+    "---"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_bkg.csv'\n",
+    "train_bkg = pd.read_csv(file_path)\n",
+    "\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_bkg.csv'\n",
+    "val_bkg = pd.read_csv(file_path)\n",
+    "\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/test_bkg.csv'\n",
+    "test_bkg = pd.read_csv(file_path)"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 8,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "def generate_average_bkg_spectrum(bkg_df, n, num_avg_spectra=1, random_state=42):\n",
+    "    avg_spectra = []\n",
+    "    for _ in range(num_avg_spectra):\n",
+    "        bkg_sample = bkg_df.sample(n=n, random_state=random_state).iloc[:,1:-1]\n",
+    "        bkg_df = bkg_df.drop(bkg_sample.index)\n",
+    "        bkg_sample.reset_index(inplace=True)\n",
+    "        bkg_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "        avg_spectrum = bkg_sample.mean()\n",
+    "        avg_spectra.append(avg_spectrum)\n",
+    "\n",
+    "    return avg_spectra"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 38,
+   "execution_count": 14,
    "metadata": {},
    "outputs": [],
    "source": [
-    "n = 20\n",
-    "train_background_one, reduced_background = generate_average_bkg_spectrum(background, n)\n",
-    "train_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "n = 20 # use 20 BKG spectra to create average spectrum\n",
+    "train_background_one, train_background_two = generate_average_bkg_spectrum(train_bkg, n, num_avg_spectra=2)\n",
     "train_background_sample = pd.DataFrame([train_background_one, train_background_two])\n",
     "\n",
-    "val_background_one, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
-    "val_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "val_background_one, val_background_two = generate_average_bkg_spectrum(val_bkg, n, num_avg_spectra=2)\n",
     "val_background_sample = pd.DataFrame([val_background_one, val_background_two])\n",
     "\n",
-    "test_background_one, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
-    "test_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "test_background_one, test_background_two = generate_average_bkg_spectrum(test_bkg, n, num_avg_spectra=2)\n",
     "test_background_sample = pd.DataFrame([test_background_one, test_background_two])"
    ]
   },
@@ -1255,6 +1343,43 @@
     "---"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# def generate_average_bkg_spectrum(bkg_df, n, random_state=42):\n",
+    "#     bkg_sample = bkg_df.sample(n=n, random_state=random_state).iloc[:,1:-1]\n",
+    "#     reduced_background = bkg_df.drop(bkg_sample.index)\n",
+    "#     bkg_sample.reset_index(inplace=True)\n",
+    "#     bkg_sample.drop(columns=['index'], inplace=True)\n",
+    "\n",
+    "#     avg_spectrum = bkg_sample.mean()\n",
+    "\n",
+    "#     return avg_spectrum, reduced_background"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# n = 20\n",
+    "# train_background_one, reduced_background = generate_average_bkg_spectrum(background, n)\n",
+    "# train_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "# train_background_sample = pd.DataFrame([train_background_one, train_background_two])\n",
+    "\n",
+    "# val_background_one, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "# val_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "# val_background_sample = pd.DataFrame([val_background_one, val_background_two])\n",
+    "\n",
+    "# test_background_one, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "# test_background_two, reduced_background = generate_average_bkg_spectrum(reduced_background, n)\n",
+    "# test_background_sample = pd.DataFrame([test_background_one, test_background_two])"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": null,
@@ -1500,11 +1625,11 @@
     }
    ],
    "source": [
-    "differences_df.columns = train.columns[2:-9]\n",
-    "index_col = np.repeat(train['index'].values, p)\n",
-    "differences_df.insert(0, 'index', index_col)\n",
-    "differences_df = pd.concat([differences_df, train.iloc[:,-9:]], axis=1)\n",
-    "differences_df.head()"
+    "# differences_df.columns = train.columns[2:-9]\n",
+    "# index_col = np.repeat(train['index'].values, p)\n",
+    "# differences_df.insert(0, 'index', index_col)\n",
+    "# differences_df = pd.concat([differences_df, train.iloc[:,-9:]], axis=1)\n",
+    "# differences_df.head()"
    ]
   },
   {
diff --git a/models/carl_encoder.ipynb b/models/carl_encoder.ipynb
index d059298d..a3ad5487 100644
--- a/models/carl_encoder.ipynb
+++ b/models/carl_encoder.ipynb
@@ -529,22 +529,6 @@
     "os.environ['WANDB_NOTEBOOK_NAME'] = notebook_name"
    ]
   },
-  {
-   "cell_type": "code",
-   "execution_count": 12,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "config = {\n",
-    "    'wandb_entity': 'catemerfeld',\n",
-    "    'wandb_project': 'ims_encoder_decoder',\n",
-    "    'gpu':True,\n",
-    "    'threads':1,\n",
-    "}\n",
-    "\n",
-    "os.environ['WANDB_NOTEBOOK_NAME'] = notebook_name"
-   ]
-  },
   {
    "cell_type": "code",
    "execution_count": 13,
@@ -1489,9 +1473,9 @@
     "sorted_chem_names = list(train_carls.columns[-8:])\n",
     "\n",
     "model_hyperparams = {\n",
-    "  'batch_size':[32,64],\n",
+    "  'batch_size':[32],\n",
     "  'epochs': [500],\n",
-    "  'learning_rate':[.00001, .000001]\n",
+    "  'learning_rate':[.00001],\n",
     "  }\n",
     "\n",
     "train_data = TensorDataset(train_carl_tensor, train_chem_encodings_tensor, train_embeddings_tensor, train_carl_indices_tensor)\n",
diff --git a/models/carl_to_chemnet_encoder..pth b/models/carl_to_chemnet_encoder..pth
deleted file mode 100644
index ee7ece26..00000000
Binary files a/models/carl_to_chemnet_encoder..pth and /dev/null differ
diff --git a/models/ims_generator.ipynb b/models/ims_generator.ipynb
index d7355d4b..36339857 100644
--- a/models/ims_generator.ipynb
+++ b/models/ims_generator.ipynb
@@ -79,10 +79,10 @@
     "# Loading CARLS:\n",
     "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/train_carls_.csv'\n",
     "train_carls = pd.read_csv(file_path)\n",
-    "# file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_.csv'\n",
-    "# val_carls = pd.read_csv(file_path)\n",
-    "# file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_.csv'\n",
-    "# test_carls = pd.read_csv(file_path)"
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/val_carls_.csv'\n",
+    "val_carls = pd.read_csv(file_path)\n",
+    "file_path = '/mnt/usb/cmdunham/preprocessed_ims_data/test_carls_.csv'\n",
+    "test_carls = pd.read_csv(file_path)"
    ]
   },
   {
@@ -595,14 +595,14 @@
     }
    ],
    "source": [
-    "# currently carls do not have labels to distinguish which were created with bkg spec 1 vs 2. Need to add those earlier but this works for now.\n",
-    "train['bkg_idx'] = [1, 2] * int(len(train)/2)\n",
-    "val['bkg_idx'] = [1, 2] * int(len(val)/2)\n",
-    "test['bkg_idx'] = [1, 2] * int(len(test)/2)\n",
-    "train_carls['bkg_idx'] = [1, 2] * int(len(train_carls)/2)\n",
-    "val_carls['bkg_idx'] = [1, 2] * int(len(val_carls)/2)\n",
-    "test_carls['bkg_idx'] = [1, 2] * int(len(test_carls)/2)\n",
-    "train.head()"
+    "# # currently carls do not have labels to distinguish which were created with bkg spec 1 vs 2. Need to add those earlier but this works for now.\n",
+    "# train['bkg_idx'] = [1, 2] * int(len(train)/2)\n",
+    "# val['bkg_idx'] = [1, 2] * int(len(val)/2)\n",
+    "# test['bkg_idx'] = [1, 2] * int(len(test)/2)\n",
+    "# train_carls['bkg_idx'] = [1, 2] * int(len(train_carls)/2)\n",
+    "# val_carls['bkg_idx'] = [1, 2] * int(len(val_carls)/2)\n",
+    "# test_carls['bkg_idx'] = [1, 2] * int(len(test_carls)/2)\n",
+    "# train.head()"
    ]
   },
   {
diff --git a/models/wandb/debug-internal.log b/models/wandb/debug-internal.log
index 3407d48a..d3084547 120000
--- a/models/wandb/debug-internal.log
+++ b/models/wandb/debug-internal.log
@@ -1 +1 @@
-run-20241217_031404-ajg0yh4e/logs/debug-internal.log
\ No newline at end of file
+run-20241231_115831-2vojvocd/logs/debug-internal.log
\ No newline at end of file
diff --git a/models/wandb/debug.log b/models/wandb/debug.log
index e4cfac01..ac16f5a7 120000
--- a/models/wandb/debug.log
+++ b/models/wandb/debug.log
@@ -1 +1 @@
-run-20241217_031404-ajg0yh4e/logs/debug.log
\ No newline at end of file
+run-20241231_115831-2vojvocd/logs/debug.log
\ No newline at end of file
diff --git a/models/wandb/latest-run b/models/wandb/latest-run
index be6b0197..3f6b4a33 120000
--- a/models/wandb/latest-run
+++ b/models/wandb/latest-run
@@ -1 +1 @@
-run-20241217_031404-ajg0yh4e
\ No newline at end of file
+run-20241231_115831-2vojvocd
\ No newline at end of file
